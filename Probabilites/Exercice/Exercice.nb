(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1177769,      24304]
NotebookOptionsPosition[   1119798,      23350]
NotebookOutlinePosition[   1121029,      23394]
CellTagsIndexPosition[   1120986,      23391]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fonction", "Subtitle",
 CellChangeTimes->{{3.801401027891058*^9, 
  3.8014010561485777`*^9}},ExpressionUUID->"4d4253be-3b16-45e5-9136-\
b8515a50fe90"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.802332362917286*^9, 3.8023323640833817`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"a952cca2-a67f-4376-8165-0fc70ea6e355"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Poisson", "[", 
    RowBox[{"lambda_", ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"(", 
      RowBox[{"-", "lambda"}], ")"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambda", "^", "i"}], "/", 
      RowBox[{"(", 
       RowBox[{"i", "!"}], ")"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HyperGeo", "[", 
    RowBox[{"n_", ",", "Nn_", ",", "m_", ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"m", ",", "i"}], "]"}], 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{
       RowBox[{"Nn", "-", "m"}], ",", 
       RowBox[{"n", "-", "i"}]}], "]"}], "/", 
     RowBox[{"Binomial", "[", 
      RowBox[{"Nn", ",", "n"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Geo", "[", 
    RowBox[{"n_", ",", "p_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}], "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bin", "[", 
    RowBox[{"n_", ",", "p_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "*", 
    RowBox[{"p", "^", "x"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "x"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BinNeg", "[", 
    RowBox[{"n_", ",", "p_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"n", "-", "1"}], ",", 
      RowBox[{"r", "-", "1"}]}], "]"}], 
    RowBox[{"p", "^", "r"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "r"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Centre", "[", 
    RowBox[{"x_", ",", "mu_", ",", "sigma_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "mu"}], ")"}], "/", "sigma"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Expo", "[", 
    RowBox[{"lambda_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"lambda", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "lambda"}], " ", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pnorm", "[", "z_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"CDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "1"}], "]"}], ",", "z"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qnorm", "[", "p_", "]"}], ":=", 
   RowBox[{"N", "[", 
    RowBox[{"InverseCDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "1"}], "]"}], ",", "p"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zstar", "[", 
    RowBox[{"x_", ",", "n_", ",", "mu_", ",", "var_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"n", " ", "mu"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"n", " ", "var"}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[Distributed]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.80130137533014*^9, 3.8013013868381367`*^9}, {
   3.801301428535472*^9, 3.80130160829602*^9}, {3.80130164412599*^9, 
   3.801301760474766*^9}, {3.801301799142391*^9, 3.801301806136742*^9}, {
   3.801401060881138*^9, 3.8014010971887493`*^9}, {3.801401129479847*^9, 
   3.8014011702770767`*^9}, {3.801401209736968*^9, 3.801401213719758*^9}, {
   3.8021176231406918`*^9, 3.802117633929563*^9}, {3.802167287436962*^9, 
   3.8021673024261703`*^9}, {3.802167813569332*^9, 3.802167926844638*^9}, {
   3.8021765195127993`*^9, 3.802176557020946*^9}, {3.802176633000353*^9, 
   3.802176633440645*^9}, {3.8022685247690563`*^9, 3.802268597440996*^9}, {
   3.802873462891391*^9, 3.802873502243445*^9}, {3.802893126979766*^9, 
   3.802893127117298*^9}, {3.805196945769739*^9, 3.80519701083291*^9}, 
   3.8053704796551247`*^9, {3.805536973414904*^9, 3.805536977838032*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5013e8db-0ff5-4d68-96d7-c41869d05534"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Il", " ", "peut", " ", "y", " ", "avoir", " ", "des", " ", "conflits", 
    " ", "avec", " ", "les", " ", "fonctions", " ", "de", " ", "m\[EHat]me", 
    " ", "symbole", " ", 
    RowBox[{"e", ".", "g", ".", " ", 
     RowBox[{"f", "[", "x_", "]"}]}]}], "=", 
   RowBox[{
    RowBox[{"x", " ", "et", " ", 
     RowBox[{"f", "[", "x_", "]"}]}], "=", 
    RowBox[{
     RowBox[{"x", "^", "2."}], " ", "Faire", " ", 
     RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], " ", "ou", " ", 
     "Quit"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.803740000700313*^9, 
  3.8037400797749434`*^9}},ExpressionUUID->"e27e8db3-aa11-4958-96f6-\
f68aa0946ae5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probabilit\[EAcute]", "Title",
 CellChangeTimes->{{3.801388008648889*^9, 
  3.801388018684701*^9}},ExpressionUUID->"a1147313-a0a1-41e0-99ae-\
aa419df1b4e4"],

Cell[CellGroupData[{

Cell["Chapitre 2", "Chapter",
 CellChangeTimes->{{3.802117895187532*^9, 
  3.802117911285769*^9}},ExpressionUUID->"e48872f1-6f31-49bb-a8ae-\
f642663bc468"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.802120399132043*^9, 
  3.802120406039753*^9}},ExpressionUUID->"bfdbdf0e-e2f3-424e-bff3-\
6347f838246d"],

Cell[CellGroupData[{

Cell["Exercice 44 (p.66)", "Subsection",
 CellChangeTimes->{{3.802120410205017*^9, 
  3.802120419582243*^9}},ExpressionUUID->"a2efeac2-201a-4331-a5b3-\
d817ca0a9209"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "3", " ", 
     RowBox[{"3", "!"}]}], ")"}], "/", 
   RowBox[{"5", "!"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"Binomial", "[", 
      RowBox[{"3", ",", "2"}], "]"}], " ", "2", " ", "2"}], ")"}], "/", 
   RowBox[{"5", "!"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Cc", "=", 
  RowBox[{"2", " ", 
   RowBox[{
    RowBox[{"3", "!"}], "/", 
    RowBox[{"5", "!"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8021204860110493`*^9, 3.8021205154383173`*^9}, {
  3.80212055516705*^9, 3.802120589864843*^9}, {3.8021206258135757`*^9, 
  3.802120631153986*^9}, {3.802120669988427*^9, 3.8021207094769497`*^9}, {
  3.802120759657075*^9, 3.8021207725442667`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"eeec5e81-e091-497f-a8fa-f937826cf8b2"],

Cell[BoxData[
 FractionBox["3", "10"]], "Output",
 CellChangeTimes->{
  3.802120517039657*^9, 3.802120633295442*^9, {3.802120700396571*^9, 
   3.802120709967716*^9}, 3.802120808306501*^9, 3.802277501247216*^9, {
   3.80227761078798*^9, 3.802277623320697*^9}, 3.803739463100115*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d56103a6-3052-48f8-8964-b5dbd7cf5eda"],

Cell[BoxData[
 FractionBox["1", "5"]], "Output",
 CellChangeTimes->{
  3.802120517039657*^9, 3.802120633295442*^9, {3.802120700396571*^9, 
   3.802120709967716*^9}, 3.802120808306501*^9, 3.802277501247216*^9, {
   3.80227761078798*^9, 3.802277623320697*^9}, 3.803739463105464*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1338e973-7fcc-4ab5-b580-1843613b4a40"],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{
  3.802120517039657*^9, 3.802120633295442*^9, {3.802120700396571*^9, 
   3.802120709967716*^9}, 3.802120808306501*^9, 3.802277501247216*^9, {
   3.80227761078798*^9, 3.802277623320697*^9}, 3.803739463108697*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d19a6cdc-3595-44ea-b595-007817360aa9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auto-\[CapitalEAcute]valuation", "Section",
 CellChangeTimes->{{3.802117913909505*^9, 
  3.802117923788104*^9}},ExpressionUUID->"96123757-04c2-4b1e-81ad-\
8d9bf83c1896"],

Cell[CellGroupData[{

Cell["Exercice 2 (p.71)", "Subsection",
 CellChangeTimes->{{3.8021179752183657`*^9, 
  3.802118005503057*^9}},ExpressionUUID->"0589c254-189f-4566-91bb-\
ae5a42b07906"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"13", ",", "4"}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Binomial", "[", 
        RowBox[{"4", ",", "1"}], "]"}], ")"}], "^", "4"}]}], ")"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"52", ",", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"13", " ", "12", " ", "11", " ", "10", " ", 
  RowBox[{
   RowBox[{"4", "^", "4"}], "/", 
   RowBox[{"(", 
    RowBox[{"52", " ", "51", " ", "50", " ", "49"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"13", ",", "1"}], "]"}], "^", "4"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"52", ",", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802118009501581*^9, 3.802118102985403*^9}, {
  3.8021183072253017`*^9, 3.802118329134254*^9}, {3.8021184689900312`*^9, 
  3.8021184991556587`*^9}, {3.802118736211843*^9, 3.802118736644792*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e394f8bb-93a6-468c-ad27-fdddb58b27c4"],

Cell[BoxData[
 FractionBox["2816", "4165"]], "Output",
 CellChangeTimes->{{3.802118070747446*^9, 3.802118103487329*^9}, 
   3.802118331957398*^9, {3.802118485907152*^9, 3.802118499977764*^9}, 
   3.8021187370471983`*^9, 3.802277501324152*^9, {3.802277610877451*^9, 
   3.802277623375946*^9}, 3.803739464654542*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e5186ceb-88b4-4723-abb3-04401f277772"],

Cell[BoxData["0.6761104441776711`"], "Output",
 CellChangeTimes->{{3.802118070747446*^9, 3.802118103487329*^9}, 
   3.802118331957398*^9, {3.802118485907152*^9, 3.802118499977764*^9}, 
   3.8021187370471983`*^9, 3.802277501324152*^9, {3.802277610877451*^9, 
   3.802277623375946*^9}, 3.8037394646561623`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"28e4b53c-b43d-4894-989b-5638a4f5c613"],

Cell[BoxData[
 FractionBox["2816", "4165"]], "Output",
 CellChangeTimes->{{3.802118070747446*^9, 3.802118103487329*^9}, 
   3.802118331957398*^9, {3.802118485907152*^9, 3.802118499977764*^9}, 
   3.8021187370471983`*^9, 3.802277501324152*^9, {3.802277610877451*^9, 
   3.802277623375946*^9}, 3.803739464657655*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"85bce722-dd6f-465f-9dfa-0deac828a8f7"],

Cell[BoxData[
 FractionBox["2197", "20825"]], "Output",
 CellChangeTimes->{{3.802118070747446*^9, 3.802118103487329*^9}, 
   3.802118331957398*^9, {3.802118485907152*^9, 3.802118499977764*^9}, 
   3.8021187370471983`*^9, 3.802277501324152*^9, {3.802277610877451*^9, 
   3.802277623375946*^9}, 3.803739464659877*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"d9f673f7-4e47-47a9-bed7-8859b3c4d145"],

Cell[BoxData["0.10549819927971188`"], "Output",
 CellChangeTimes->{{3.802118070747446*^9, 3.802118103487329*^9}, 
   3.802118331957398*^9, {3.802118485907152*^9, 3.802118499977764*^9}, 
   3.8021187370471983`*^9, 3.802277501324152*^9, {3.802277610877451*^9, 
   3.802277623375946*^9}, 3.803739464661892*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"01493788-c570-4be9-9ed3-2d3200ad0d0c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 11 (p.72)", "Subsection",
 CellChangeTimes->{{3.802119202689501*^9, 
  3.802119212514699*^9}},ExpressionUUID->"4c5b52e5-a461-4d8d-8d30-\
54257721793a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"13", ",", "1"}], "]"}], "^", "4"}], " ", "*", 
  RowBox[{"48", "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"52", ",", "5"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "2"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"Binomial", "[", 
        RowBox[{"39", ",", "5"}], "]"}]}], " ", "-", " ", 
      RowBox[{"6", 
       RowBox[{"Binomial", "[", 
        RowBox[{"26", ",", "5"}], "]"}]}], " ", "+", 
      RowBox[{"4", 
       RowBox[{"Binomial", "[", 
        RowBox[{"13", ",", "5"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"Binomial", "[", 
     RowBox[{"52", ",", "5"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8021192147362957`*^9, 3.802119325550963*^9}, {
   3.8021200524650497`*^9, 3.802120132215459*^9}, 3.802120197010283*^9, {
   3.802120297713624*^9, 3.802120301918581*^9}, {3.802120342612795*^9, 
   3.802120343873426*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9588236b-6760-4a04-a6c3-673ffa091cdc"],

Cell[BoxData[
 FractionBox["2197", "4165"]], "Output",
 CellChangeTimes->{
  3.802119266625085*^9, {3.802119296994727*^9, 3.802119326571555*^9}, {
   3.802120124158317*^9, 3.8021201327679653`*^9}, 3.80212019782893*^9, 
   3.802120303173972*^9, 3.802277501401347*^9, {3.802277610955262*^9, 
   3.802277623402659*^9}, 3.803739467847187*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"f260e16c-675b-4c59-a9fd-ee8d5ee8219b"],

Cell[BoxData["0.5274909963985595`"], "Output",
 CellChangeTimes->{
  3.802119266625085*^9, {3.802119296994727*^9, 3.802119326571555*^9}, {
   3.802120124158317*^9, 3.8021201327679653`*^9}, 3.80212019782893*^9, 
   3.802120303173972*^9, 3.802277501401347*^9, {3.802277610955262*^9, 
   3.802277623402659*^9}, 3.803739467848831*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c9b965bc-8822-4109-8947-83c7de995102"],

Cell[BoxData["0.2637454981992797`"], "Output",
 CellChangeTimes->{
  3.802119266625085*^9, {3.802119296994727*^9, 3.802119326571555*^9}, {
   3.802120124158317*^9, 3.8021201327679653`*^9}, 3.80212019782893*^9, 
   3.802120303173972*^9, 3.802277501401347*^9, {3.802277610955262*^9, 
   3.802277623402659*^9}, 3.803739467850193*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"22c55b35-1800-4cd3-b1a2-e4e9f0dbbf31"],

Cell[BoxData[
 FractionBox["2197", "8330"]], "Output",
 CellChangeTimes->{
  3.802119266625085*^9, {3.802119296994727*^9, 3.802119326571555*^9}, {
   3.802120124158317*^9, 3.8021201327679653`*^9}, 3.80212019782893*^9, 
   3.802120303173972*^9, 3.802277501401347*^9, {3.802277610955262*^9, 
   3.802277623402659*^9}, 3.803739467851563*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ac775881-d476-4ba3-8083-0c575309f952"],

Cell[BoxData["0.2637454981992797`"], "Output",
 CellChangeTimes->{
  3.802119266625085*^9, {3.802119296994727*^9, 3.802119326571555*^9}, {
   3.802120124158317*^9, 3.8021201327679653`*^9}, 3.80212019782893*^9, 
   3.802120303173972*^9, 3.802277501401347*^9, {3.802277610955262*^9, 
   3.802277623402659*^9}, 3.803739467852913*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c1b77620-2ffc-4266-885b-7afd303e88d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 3", "Chapter",
 CellChangeTimes->{{3.8013894208502827`*^9, 
  3.801389452079935*^9}},ExpressionUUID->"3e254f17-4d42-48b7-83d9-\
62bfdeba01f9"],

Cell[CellGroupData[{

Cell["Auto-\[CapitalEAcute]valuation", "Section",
 CellChangeTimes->{{3.8013894719736233`*^9, 
  3.801389478431971*^9}},ExpressionUUID->"4efc573b-4d42-4612-b920-\
260dd30553ae"],

Cell[CellGroupData[{

Cell["Exercice 4 (p.143)", "Subsection",
 CellChangeTimes->{{3.802272297379818*^9, 
  3.8022723059549294`*^9}},ExpressionUUID->"5168c1a9-3a58-4ea4-8858-\
19d6e27cdae9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Bb", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "7"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"2", "/", "3"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "7"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "/", "3"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "/", "7"}], ")"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "/", "3"}], ")"}], "/", "Bb"}]}]}], "Input",
 CellChangeTimes->{{3.802272311404838*^9, 3.8022723390356903`*^9}, {
  3.802272410133788*^9, 3.802272423366754*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"58d51d2c-ccbd-4c51-8456-9923cc542c38"],

Cell[BoxData[
 FractionBox["5", "21"]], "Output",
 CellChangeTimes->{
  3.802272341478218*^9, 3.802272423837576*^9, 3.802277501428205*^9, {
   3.802277611045102*^9, 3.802277623470162*^9}, 3.80373947044384*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"83766b6e-7cac-4fb5-a3ff-cec8cdbdf42d"],

Cell[BoxData[
 FractionBox["4", "5"]], "Output",
 CellChangeTimes->{
  3.802272341478218*^9, 3.802272423837576*^9, 3.802277501428205*^9, {
   3.802277611045102*^9, 3.802277623470162*^9}, 3.803739470445174*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"54cdafd5-a0b6-48f3-b9a8-197d8221874c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 10 (p.144)", "Subsection",
 CellChangeTimes->{{3.802271193849205*^9, 
  3.8022712027877693`*^9}},ExpressionUUID->"3a9d4a8c-167d-430f-8325-\
df226926cd2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cardS", "=", 
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"r", "+", "b", "+", "v"}], ",", "n"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"A", "=", 
  RowBox[{"1", "-", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"b", "+", "v"}], ",", "n"}], "]"}], "/", 
    "cardS"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"v", ",", "2"}], "]"}], 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"b", ",", "4"}], "]"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{"b", "+", "v"}], ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802271220315233*^9, 3.8022713876167088`*^9}, {
  3.802271418841916*^9, 3.8022714498158703`*^9}, {3.802271480960594*^9, 
  3.8022714987870083`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3b3c2de0-a807-4dd2-a32b-7e8599808aec"],

Cell[BoxData[
 FractionBox["24722", "28275"]], "Output",
 CellChangeTimes->{{3.802271326142922*^9, 3.802271336243032*^9}, 
   3.802271376362419*^9, {3.802271451766054*^9, 3.802271499276359*^9}, 
   3.802277501493915*^9, {3.802277611125746*^9, 3.802277623517589*^9}, 
   3.80373947216404*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"722a2c9f-182d-49a2-b18e-df018b62dec0"],

Cell[BoxData["0.874341290893015`"], "Output",
 CellChangeTimes->{{3.802271326142922*^9, 3.802271336243032*^9}, 
   3.802271376362419*^9, {3.802271451766054*^9, 3.802271499276359*^9}, 
   3.802277501493915*^9, {3.802277611125746*^9, 3.802277623517589*^9}, 
   3.803739472166676*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"2fa63f5b-535d-47e8-a6ba-cf6e4e650316"],

Cell[BoxData[
 FractionBox["675", "2261"]], "Output",
 CellChangeTimes->{{3.802271326142922*^9, 3.802271336243032*^9}, 
   3.802271376362419*^9, {3.802271451766054*^9, 3.802271499276359*^9}, 
   3.802277501493915*^9, {3.802277611125746*^9, 3.802277623517589*^9}, 
   3.803739472168159*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"5d27b9db-60f9-4701-b4c3-2d3b75e5edcd"],

Cell[BoxData["0.29854046881910656`"], "Output",
 CellChangeTimes->{{3.802271326142922*^9, 3.802271336243032*^9}, 
   3.802271376362419*^9, {3.802271451766054*^9, 3.802271499276359*^9}, 
   3.802277501493915*^9, {3.802277611125746*^9, 3.802277623517589*^9}, 
   3.803739472169475*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"38354373-3182-471e-b6e0-82547851fcac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 13 (p.144)", "Subsection",
 CellChangeTimes->{{3.801389506653448*^9, 
  3.801389526708828*^9}},ExpressionUUID->"4b35586c-9108-41f6-8da0-\
2533fcd257b6"],

Cell["a)", "Text",
 CellChangeTimes->{{3.801389582327682*^9, 
  3.801389582572318*^9}},ExpressionUUID->"4c280311-0264-4bf5-8155-\
197256e90794"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "10"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "M\[EHat]me", " ", "probabilit\[EAcute]", " ", "que", " ", "de", " ", 
    "pig\[EAcute]e", " ", "une", " ", "boule", " ", "bleue", " ", "en", " ", 
    "premiers"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"A", "=", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"b", ",", "1"}], "]"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{"r", "+", "b"}], ",", "1"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.801389558820531*^9, 3.8013896225452223`*^9}, {
   3.801389674138691*^9, 3.8013897394756413`*^9}, 3.8013899188372087`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"6ab8a19d-8b0b-46c3-9395-bb550cb34689"],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{
  3.801389920230546*^9, 3.802277501565052*^9, {3.802277611146121*^9, 
   3.802277623575075*^9}, 3.803739473599937*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"f4f16c81-ef03-4f35-b7d4-7b37018cd271"]
}, Open  ]],

Cell["b)", "Text",
 CellChangeTimes->{{3.801389782301387*^9, 
  3.8013897825973387`*^9}},ExpressionUUID->"972c82bc-52ad-4a7a-bbf8-\
190b4fedf9b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", "=", "8"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "M\[EHat]me", " ", "probabilit\[EAcute]", " ", "que", " ", "de", " ", 
    "pig\[EAcute]e", " ", "une", " ", "boule", " ", "bleue", " ", "en", " ", 
    "premiers"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"10", "/", "30"}]}]}], "Input",
 CellChangeTimes->{{3.8013897908212633`*^9, 3.8013898028669443`*^9}, {
  3.801389890279768*^9, 3.80138996013526*^9}, {3.801390214382896*^9, 
  3.801390217035976*^9}, {3.8013907221632767`*^9, 3.801390741001087*^9}, {
  3.801390805476864*^9, 3.8013908073004*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"d6261895-bdeb-40ca-8e7c-aa621b916d57"],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{{3.801389909576852*^9, 3.801389915127749*^9}, 
   3.802277501620281*^9, {3.8022776112176523`*^9, 3.802277623620195*^9}, 
   3.8037394747869663`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"7840d8e5-bcdb-4f75-aac1-90c4382d0686"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 28 (p.144)", "Subsection",
 CellChangeTimes->{{3.8014154915772142`*^9, 
  3.8014154973113213`*^9}},ExpressionUUID->"9862cd2c-657e-49e9-8e15-\
62a4cf733f2f"],

Cell["a)", "Text",
 CellChangeTimes->{{3.801415503030985*^9, 
  3.8014155034750347`*^9}},ExpressionUUID->"a5f8ecff-a889-40bd-b5d9-\
e6b368564fe8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pc", "=", 
   RowBox[{"7", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pd", "=", 
   RowBox[{"4", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "6"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Par", " ", "la", " ", "formule", " ", "des", " ", "probabilit\[EAcute]s", 
    " ", "totales"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"pc", "*", 
    RowBox[{"(", 
     RowBox[{"c", "/", 
      RowBox[{"(", 
       RowBox[{"c", "+", "d"}], ")"}]}], ")"}]}], "+", 
   RowBox[{"pd", "*", 
    RowBox[{"(", 
     RowBox[{"d", "/", 
      RowBox[{"(", 
       RowBox[{"c", "+", "d"}], ")"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.801415579559579*^9, 3.8014156373896427`*^9}, {
  3.801415720128252*^9, 3.801415727330655*^9}, {3.801415799328456*^9, 
  3.8014158325167828`*^9}, {3.801415884463973*^9, 3.801415893682673*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3b4f2f5d-c4a2-488a-ab19-4a1c9075de06"],

Cell[BoxData[
 FractionBox["4", "7"]], "Output",
 CellChangeTimes->{
  3.8022775016878223`*^9, {3.8022776112964478`*^9, 3.802277623682887*^9}, 
   3.803739482608811*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"41ae984d-78c9-4b02-8c89-7de8b8c1e9b6"],

Cell[BoxData["0.5714285714285714`"], "Output",
 CellChangeTimes->{
  3.8022775016878223`*^9, {3.8022776112964478`*^9, 3.802277623682887*^9}, 
   3.803739482610634*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"a8d37b0e-ae17-450c-bf52-633448c0398a"]
}, Open  ]],

Cell["b)", "Text",
 CellChangeTimes->{{3.801416155141232*^9, 
  3.8014161557077017`*^9}},ExpressionUUID->"88a3e733-b543-4a3b-8a61-\
b2a932052a83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Par", " ", "Bayes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "pc"}], ")"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c", "/", 
       RowBox[{"(", 
        RowBox[{"c", "+", "d"}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "F"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.801416176220414*^9, 3.801416254294847*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9f3495a9-650a-4b4d-819a-ab52b7cae2fe"],

Cell[BoxData[
 FractionBox["2", "5"]], "Output",
 CellChangeTimes->{{3.801415721065843*^9, 3.801415728615061*^9}, {
   3.801415886504923*^9, 3.80141589448879*^9}, 3.801416214404842*^9, {
   3.801416244628167*^9, 3.801416254696682*^9}, 3.802277501796185*^9, {
   3.802277611371489*^9, 3.802277623736341*^9}, 3.803739484039733*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"d4a99490-a244-41c0-a5c0-f60ab695cded"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 4", "Chapter",
 CellChangeTimes->{{3.801398896630796*^9, 
  3.801398899043269*^9}},ExpressionUUID->"2cd74355-5db3-4168-8211-\
f26662cda0f8"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.801399589508136*^9, 
  3.8013995919012012`*^9}},ExpressionUUID->"cc1d9b84-c369-4d6f-97a6-\
5bd8a1202764"],

Cell["Exercice 15 (p.209)", "Subsection",
 CellChangeTimes->{{3.802168663958293*^9, 
  3.8021686731550827`*^9}},ExpressionUUID->"6cd21e82-2c24-456b-a4ab-\
afb450150b41"],

Cell[CellGroupData[{

Cell["Exercice 19 (p.210)", "Subsection",
 CellChangeTimes->{{3.802169616639125*^9, 
  3.80216962715522*^9}},ExpressionUUID->"adab6176-1f5e-4382-8e99-\
9f1f521957ff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ff", "[", "b_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"b", "<", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", "4"}], ",", 
       RowBox[{"0", "\[LessEqual]", "b", "<", "1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "5"}], ",", 
       RowBox[{"1", "\[LessEqual]", "b", "<", "2"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4", "/", "5"}], ",", 
       RowBox[{"2", "\[LessEqual]", "b", "<", "3"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"9", "/", "10"}], ",", 
       RowBox[{"3", "\[LessEqual]", "b", "<", 
        RowBox[{"7", "/", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"b", "\[GreaterEqual]", " ", 
        RowBox[{"7", "/", "2"}]}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Ff", "[", "b", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", 
     RowBox[{"7", "/", "2"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loi", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "4"}], ",", 
    RowBox[{"i", "++"}], ",", " ", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"loi", ",", 
      RowBox[{
       RowBox[{"F", "[", "i", "]"}], "-", 
       RowBox[{"F", "[", 
        RowBox[{"i", "-", "1"}], "]"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"loi", ",", 
   RowBox[{
    RowBox[{"F", "[", "3.5", "]"}], "-", 
    RowBox[{"F", "[", "3", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.802169631307466*^9, 3.802169685120129*^9}, {
  3.8021697168454933`*^9, 3.802169754337099*^9}, {3.8021698047687607`*^9, 
  3.8021698832671547`*^9}, {3.8021699208027353`*^9, 3.802170100363638*^9}, {
  3.803739498736597*^9, 3.8037395016078053`*^9}, {3.803739533272704*^9, 
  3.8037395742324667`*^9}, {3.803739625990595*^9, 3.803739659446087*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"fd9f3a20-22ed-49b8-9b17-1b0c1d450411"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQvTBi9fYOnWI7BjB4YP/GqNU0ctpCexi/cPkepohp
G+F8Pb21MzcFH4Lztfd/LKizOg3nM7ZfyPb+dRHOXzklyJx12zU4f1qt/6KH
Crfh/P1nypZmv7oP52fv1fxx1u8RnC/RFJr7vf4JnP+4ctq68gfP4PyA+1Ps
OyVewvnGX3K/5Lq+hvNNbWJKVy58C+ezi2+627/7HZx/8yO7W9nV93C+ws+3
Sf0vEPy829tyb39D8AEx+mdt
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ7TlJxXMSywd7YzB4bH+NOfZcAjuCv6J1mqg6D4Jf
yX4h5q0Agr+fb1slmwqCzyo2Z5q8OYI/USXjQmAsgi9rbMLV0ozgmwWcqX1x
HsH3y0356CPzEc6PCe5e6LUJwc+y3BTo4fEJzg/fcy+SJ+EznH/lhuiJ6v4v
cL7SGu17m1d9hfP/S/hETb/7Dc6ffjcy4wnXDzifIdJN7pfyTzj/R66t1e6Q
X3D+QUvhfy6Fv+F819hrwRYdf+D8SKkl/Ne3/YXzfUKqDnK5/IPz7foCiu0u
IvizA/epHpb9j7BPROeGexaCv+xbkmHXBAQ/9MbMrjPbEHwdT9Ptb08i+Cy7
Ljzmu4vgFxTJVc1/huDf1soRMPiA4AuwT47+8QXBd3u8c9mBnwj+9tzb23J/
I/gAWarfGQ==
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQreo5ScWTicFh1kwQeGmv+jxn63EfBL+QIezMs+kI
flGfuB+nCiOcb5V5r4lxD4KfPX8K9z1PJji/stEx9v0VBN9/w+fEa9nMcH6v
1dRdC38g+JMFbY45TWSB85lcLqmekGeF8/2U4v2aViP4Sb4fNYWc2eD8e5eL
ItsuIPgNttu8tGXZ4Xyl5T+tL2Qi+K/Ybj7L70fwN6XtmMi/FcGfJqaRfv84
gl91bLrN+lsIfs48f3XxJwh+XBm7UP1bBD88KZnd+BOCH+C3/8+zbwi+r0vu
d4efCL6XlfSnWb8R/Nvbcm9v+4vgAwBRDthA
        "]], 
       LineBox[{{3.0011160714285716`, 0.9}, {3.034424596861246, 0.9}, {
        3.0686986959773095`, 0.9}, {3.1430255870264, 0.9}, {
        3.2124168851781687`, 0.9}, {3.2804440190040443`, 0.9}, {
        3.3542498456468834`, 0.9}, {3.423120079392401, 0.9}, {
        3.4615600039819148`, 0.9}, {3.4999999285714285`, 0.9}}]},
      Annotation[#, 
       "Charting`Private`Tag$9177#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[7, 2]}, {0.5, 0.9}}, {{0, 3.5}, {0.5, 0.9}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.802169883913928*^9, 3.802169980941728*^9, {3.80217001335175*^9, 
   3.802170042238042*^9}, {3.802170088084388*^9, 3.802170100673972*^9}, 
   3.8022775018676367`*^9, {3.802277611456972*^9, 3.802277623980609*^9}, 
   3.8023331164056664`*^9, {3.803739486121196*^9, 3.803739502194478*^9}, 
   3.803739535015583*^9, 3.803739591528389*^9, {3.803739627232979*^9, 
   3.803739662979557*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"e4642a33-5af8-43ac-addc-4de032fba7f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["4", "7"], "[", 
      RowBox[{"-", "1"}], "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "7"], "[", "0", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["4", "7"], "[", "0", "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "7"], "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["4", "7"], "[", "1", "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "7"], "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["4", "7"], "[", "2", "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "7"], "[", "3", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["4", "7"], "[", "3", "]"}]}], "+", 
    RowBox[{
     FractionBox["4", "7"], "[", "3.5`", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.802169883913928*^9, 3.802169980941728*^9, {3.80217001335175*^9, 
   3.802170042238042*^9}, {3.802170088084388*^9, 3.802170100673972*^9}, 
   3.8022775018676367`*^9, {3.802277611456972*^9, 3.802277623980609*^9}, 
   3.8023331164056664`*^9, {3.803739486121196*^9, 3.803739502194478*^9}, 
   3.803739535015583*^9, 3.803739591528389*^9, {3.803739627232979*^9, 
   3.803739662984014*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"def68e2d-02b8-4760-b354-5fe4d1a31759"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 25 (p.212)", "Subsection",
 CellChangeTimes->{{3.8013996056868134`*^9, 
  3.801399619833082*^9}},ExpressionUUID->"e007b6f6-9e70-4bc4-baf0-\
e63397990f95"],

Cell["a)", "Text",
 CellChangeTimes->{{3.801400162466898*^9, 
  3.801400162788767*^9}},ExpressionUUID->"5ad5a76e-b023-44da-8627-\
10c0785400d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"6", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"7", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", "=", 
  RowBox[{
   RowBox[{"p1", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "p2"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "p1"}], ")"}], "*", "p2"}]}]}]}], "Input",
 CellChangeTimes->{{3.801399800081119*^9, 3.8013998156188*^9}, {
  3.8014001398202343`*^9, 3.801400149928958*^9}, {3.801400313012574*^9, 
  3.801400339336381*^9}, {3.801400523572747*^9, 3.8014005239502163`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"81848bb6-2b48-4b31-858b-f58917a5227f"],

Cell[BoxData[
 FractionBox["23", "50"]], "Output",
 CellChangeTimes->{
  3.8014001506269417`*^9, 3.8014003399611673`*^9, 3.801400604566084*^9, 
   3.802277501932679*^9, {3.8022776115338297`*^9, 3.80227762401964*^9}, 
   3.803739667695951*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"2062db4b-ddbd-4a5d-9252-078555da9087"]
}, Open  ]],

Cell["b)", "Text",
 CellChangeTimes->{{3.80140018236273*^9, 
  3.801400182709942*^9}},ExpressionUUID->"0de60877-685b-47a4-906f-\
cbab10164829"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "=", 
  RowBox[{"0", "+", 
   RowBox[{"1", "*", "A"}], "+", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"p1", "*", "p2"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8014004914268513`*^9, 3.801400549992817*^9}, {
  3.801400631913204*^9, 3.801400632091817*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"01f300ba-33a7-4da1-92b4-2963479f61a5"],

Cell[BoxData[
 FractionBox["13", "10"]], "Output",
 CellChangeTimes->{{3.801400533723617*^9, 3.801400550588479*^9}, {
   3.801400610502036*^9, 3.8014006247780933`*^9}, 3.8022775019886312`*^9, {
   3.8022776116146584`*^9, 3.802277624096542*^9}, 3.803739668694851*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"3100283a-a3b7-4b09-82cc-bf412a06bd2f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 28 (p.212)", "Subsection",
 CellChangeTimes->{{3.802254214702095*^9, 
  3.802254222348486*^9}},ExpressionUUID->"6ca16534-5d11-471b-a8e9-\
3b7bb4719887"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nn", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"i", " ", 
    RowBox[{"HyperGeo", "[", 
     RowBox[{"n", ",", "Nn", ",", "m", ",", "i"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.802254225443014*^9, 3.802254324170568*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"9a33da56-098d-47e0-b276-4743e1da36dd"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{
  3.802254328530532*^9, 3.802277502049275*^9, {3.802277611699018*^9, 
   3.802277624138482*^9}, 3.803739670359535*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"ee8a1d08-af5a-4d88-bb9d-124a0a066bbf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 42 (p.214)", "Subsection",
 CellChangeTimes->{{3.8022562556026077`*^9, 
  3.80225626670487*^9}},ExpressionUUID->"2fda998b-1237-4330-9a4e-\
9d4aaa972e19"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pa", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pb", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Binomial", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"pa", " ", "pb"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esp", "=", 
   RowBox[{"n", " ", "p"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"var", " ", "=", " ", 
  RowBox[{"n", " ", "p", 
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.802256271105201*^9, 3.8022562882987823`*^9}, {
  3.802256319261376*^9, 3.8022564167548428`*^9}, {3.802256449358657*^9, 
  3.802256561725281*^9}, {3.8022566031820107`*^9, 3.8022566895948963`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"5370cfb2-3c5d-4b8c-a3ae-191dbd30130e"],

Cell[BoxData["2.8`"], "Output",
 CellChangeTimes->{{3.802256359905259*^9, 3.802256366966803*^9}, {
   3.802256401808415*^9, 3.8022564185549297`*^9}, 3.8022564870306683`*^9, 
   3.802256562453307*^9, {3.8022566076805*^9, 3.802256644616922*^9}, 
   3.802256676370552*^9, 3.802277502102507*^9, {3.802277611771309*^9, 
   3.802277624175791*^9}, 3.803739671509926*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"aad841b1-efc1-4dae-a67d-843094911b24"],

Cell[BoxData["2.016`"], "Output",
 CellChangeTimes->{{3.802256359905259*^9, 3.802256366966803*^9}, {
   3.802256401808415*^9, 3.8022564185549297`*^9}, 3.8022564870306683`*^9, 
   3.802256562453307*^9, {3.8022566076805*^9, 3.802256644616922*^9}, 
   3.802256676370552*^9, 3.802277502102507*^9, {3.802277611771309*^9, 
   3.802277624175791*^9}, 3.8037396715116367`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"429320a7-f3fb-4442-8bb1-32ef588b6173"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 49 (p.215)", "Subsection",
 CellChangeTimes->{{3.802177343650402*^9, 
  3.8021773530451927`*^9}},ExpressionUUID->"b0228d69-eb37-4d9d-815c-\
6404a1cbc978"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "A", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1f", "=", 
     RowBox[{"4", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2f", "=", 
     RowBox[{"7", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"Bin", "[", 
      RowBox[{"10", ",", "p1f", ",", "7"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N", "@", "%"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", "=", 
     RowBox[{"Bin", "[", 
      RowBox[{"10", ",", "p2f", ",", "7"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N", "@", "%"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Aa", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", "B"}], ")"}], "/", "2"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{
       RowBox[{"p1f", "*", 
        RowBox[{"1", "/", "2"}]}], "+", 
       RowBox[{"p2f", "*", 
        RowBox[{"1", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bin", "[", 
      RowBox[{"10", ",", "p", ",", "7"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"N", "@", "%"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "B", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cc", "=", 
     RowBox[{"1", "-", 
      RowBox[{"0.5", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bin", "[", 
          RowBox[{"10", ",", "p1f", ",", "0"}], "]"}], "+", 
         RowBox[{"Bin", "[", 
          RowBox[{"10", ",", "p2f", ",", "0"}], "]"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bb", "=", 
     RowBox[{"0.5", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Bin", "[", 
         RowBox[{"9", ",", "p1f", ",", "6"}], "]"}], "+", 
        RowBox[{"Bin", "[", 
         RowBox[{"9", ",", "p2f", ",", "6"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Bb", "/", "Cc"}]}]}]], "Input",
 CellChangeTimes->{{3.802177443242777*^9, 3.8021776072241497`*^9}, {
  3.8021777939899406`*^9, 3.802177858194232*^9}, {3.802178116158332*^9, 
  3.8021781511307163`*^9}, {3.8021782477178392`*^9, 3.802178260691483*^9}, {
  3.802178329660386*^9, 3.80217839817759*^9}, {3.802178430113727*^9, 
  3.802178476921419*^9}, {3.802178615975526*^9, 3.802178679807911*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"8ca66fc4-6715-488b-a5ac-96de66ed865a"],

Cell[BoxData["0.15464763`"], "Output",
 CellChangeTimes->{
  3.802177555793007*^9, {3.802177602289152*^9, 3.8021776076187553`*^9}, {
   3.8021778439298964`*^9, 3.802177853446899*^9}, {3.802178118507576*^9, 
   3.802178158267503*^9}, {3.802178393282703*^9, 3.80217839845914*^9}, {
   3.8021784310892763`*^9, 3.802178481009255*^9}, 3.802178667956881*^9, 
   3.802277502160914*^9, {3.802277611936709*^9, 3.802277624216964*^9}, 
   3.803739672660407*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"677a2309-0815-4a87-8454-36325e818d76"],

Cell[BoxData["0.17109064298309737`"], "Output",
 CellChangeTimes->{
  3.802177555793007*^9, {3.802177602289152*^9, 3.8021776076187553`*^9}, {
   3.8021778439298964`*^9, 3.802177853446899*^9}, {3.802178118507576*^9, 
   3.802178158267503*^9}, {3.802178393282703*^9, 3.80217839845914*^9}, {
   3.8021784310892763`*^9, 3.802178481009255*^9}, 3.802178667956881*^9, 
   3.802277502160914*^9, {3.802277611936709*^9, 3.802277624216964*^9}, 
   3.803739672662293*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"ecebd2c8-33c5-47e6-b521-f4d92ddaaff5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 53 (p.216)", "Subsection",
 CellChangeTimes->{{3.802246698684911*^9, 
  3.802246708414678*^9}},ExpressionUUID->"7b627674-b6ee-4e15-b9b7-\
060a990cd989"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "80000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "365"}], ")"}], "^", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"1", "-", 
    RowBox[{"Bin", "[", 
     RowBox[{"n", ",", "p", ",", "0"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"365", " ", "jours", " ", "possible"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"1", "-", 
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"365", "n", " ", "p"}], ",", "0"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802246768244267*^9, 3.802246830046887*^9}, {
  3.802246861514954*^9, 3.802246922067955*^9}, {3.802246952289022*^9, 
  3.8022469537393*^9}, {3.8022470315763083`*^9, 3.8022470508222437`*^9}, {
  3.8022471437905483`*^9, 3.802247197748407*^9}, {3.80224728579751*^9, 
  3.80224730232471*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"1fd0b662-f565-48e0-8987-adb9be7a60f0"],

Cell[BoxData[
 FractionBox["1", "133225"]], "Output",
 CellChangeTimes->{{3.802246830788744*^9, 3.8022468771147346`*^9}, {
   3.802246915278371*^9, 3.802246922728743*^9}, {3.802247037483981*^9, 
   3.802247082900257*^9}, {3.802247171927268*^9, 3.8022471981937113`*^9}, 
   3.802277502219419*^9, {3.802277612017456*^9, 3.802277624368628*^9}, 
   3.803739673791074*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"38f39286-adc8-4ba7-8989-59ae61f37e3f"],

Cell[BoxData["0.45145729806317053`"], "Output",
 CellChangeTimes->{{3.802246830788744*^9, 3.8022468771147346`*^9}, {
   3.802246915278371*^9, 3.802246922728743*^9}, {3.802247037483981*^9, 
   3.802247082900257*^9}, {3.802247171927268*^9, 3.8022471981937113`*^9}, 
   3.802277502219419*^9, {3.802277612017456*^9, 3.802277624368628*^9}, 
   3.803739673792933*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"82b81e2c-b4fa-4c13-bc49-ffa0ad181d29"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.802246830788744*^9, 3.8022468771147346`*^9}, {
   3.802246915278371*^9, 3.802246922728743*^9}, {3.802247037483981*^9, 
   3.802247082900257*^9}, {3.802247171927268*^9, 3.8022471981937113`*^9}, 
   3.802277502219419*^9, {3.802277612017456*^9, 3.802277624368628*^9}, 
   3.803739673794509*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"9f6eac88-1604-4d63-9bb4-5a5044abf89b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 56 (p.216)", "Subsection",
 CellChangeTimes->{{3.802254593401824*^9, 
  3.802254606993479*^9}},ExpressionUUID->"708db4e9-c322-409c-a8c0-\
01d6a0b83e60"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"(", 
    RowBox[{"1", "/", "365"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Bin", "[", 
   RowBox[{"n", ",", "p", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nn", "=", 
  RowBox[{"n", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Rationalize", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"Bin", "[", 
           RowBox[{"n", ",", "p", ",", "0"}], "]"}]}], "\[LessEqual]", " ", 
         "0.5"}], "&&", " ", 
        RowBox[{"n", ">", "1"}]}], "]"}], ",", "n", ",", "Integers"}], "]"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.802254612308673*^9, 3.80225468059184*^9}, {
   3.802254736624525*^9, 3.8022547834602118`*^9}, {3.802254819885487*^9, 
   3.8022548458875713`*^9}, {3.802254893496373*^9, 3.802254893558655*^9}, {
   3.80225495951902*^9, 3.80225498330435*^9}, {3.802255049383397*^9, 
   3.802255081758212*^9}, {3.8022551372369556`*^9, 3.802255220639296*^9}, {
   3.802255271109552*^9, 3.802255301044876*^9}, {3.802255369741129*^9, 
   3.802255373792672*^9}, {3.802255416353302*^9, 3.8022554397474813`*^9}, {
   3.802255477222702*^9, 3.802255614931445*^9}, {3.8022556495898*^9, 
   3.8022556790037746`*^9}, 3.802255784255172*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"d564a729-71db-4b56-a2a7-4479ede0d0b3"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["364", "365"], ")"}], "n"]}]], "Output",
 CellChangeTimes->{{3.802255568657638*^9, 3.80225558304988*^9}, 
   3.802255615516276*^9, {3.8022556509732237`*^9, 3.802255679234976*^9}, 
   3.802255784810413*^9, 3.802277502348456*^9, {3.802277612117508*^9, 
   3.802277624464712*^9}, 3.803739674809587*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"8e158564-1049-4f8d-af00-8e56ceb34d98"],

Cell[BoxData["252"], "Output",
 CellChangeTimes->{{3.802255568657638*^9, 3.80225558304988*^9}, 
   3.802255615516276*^9, {3.8022556509732237`*^9, 3.802255679234976*^9}, 
   3.802255784810413*^9, 3.802277502348456*^9, {3.802277612117508*^9, 
   3.802277624464712*^9}, 3.803739674970368*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"a529ba93-091e-4b26-aa5c-85b623350a70"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 61 (p.217)", "Subsection",
 CellChangeTimes->{{3.8022557281197777`*^9, 
  3.802255749099305*^9}},ExpressionUUID->"a3f69ea1-146e-4686-b30d-\
3de31e17e5b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"14", "/", "10000"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Bin", "[", 
      RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Approximation", " ", "poissonnienne"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{"\[Lambda]", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"n", " ", "p"}], ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802255836928787*^9, 3.802255843657627*^9}, {
  3.802255880736215*^9, 3.802255988375279*^9}, {3.802256174850709*^9, 
  3.802256189186707*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"080f9021-1945-484e-89a0-97be315f6893"],

Cell[BoxData["0.4082640067395711`"], "Output",
 CellChangeTimes->{{3.802255907486742*^9, 3.8022559567521973`*^9}, 
   3.802256190185307*^9, 3.802277502554988*^9, {3.802277612304084*^9, 
   3.802277624745637*^9}, 3.803739676279437*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"98e3048c-5e6d-449e-8c0a-978f9658fc46"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "\[Lambda]"}]], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Lambda]"}]], " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{{3.802255907486742*^9, 3.8022559567521973`*^9}, 
   3.802256190185307*^9, 3.802277502554988*^9, {3.802277612304084*^9, 
   3.802277624745637*^9}, 3.803739676281376*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"5939e670-d68c-4f6c-9088-d01d4c599b81"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["12", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"7", "/", "5"}]]}]]}]], "Output",
 CellChangeTimes->{{3.802255907486742*^9, 3.8022559567521973`*^9}, 
   3.802256190185307*^9, 3.802277502554988*^9, {3.802277612304084*^9, 
   3.802277624745637*^9}, 3.803739676283107*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"f7434536-cceb-4175-8935-ab92e806f1b6"],

Cell[BoxData["0.40816728654014445`"], "Output",
 CellChangeTimes->{{3.802255907486742*^9, 3.8022559567521973`*^9}, 
   3.802256190185307*^9, 3.802277502554988*^9, {3.802277612304084*^9, 
   3.802277624745637*^9}, 3.8037396762848263`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"04946d44-9365-4c74-8821-14e991be5dbf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 63 (p.217)", "Subsection",
 CellChangeTimes->{{3.802256834020913*^9, 
  3.802256841187366*^9}},ExpressionUUID->"3d20ff3e-2b6e-4170-b48d-\
2ce706f6c20f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lambda", " ", "=", 
    RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Poisson", "[", 
   RowBox[{
    RowBox[{"5", " ", 
     RowBox[{"1", "/", "2"}]}], ",", "0"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "\[Lambda]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{"\[Lambda]", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"5", "/", "2"}], ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.802256961790619*^9, 3.80225700070506*^9}, {
  3.802257041967605*^9, 3.8022571391623077`*^9}, {3.802257233108177*^9, 
  3.8022572468252687`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"f765486d-d5b8-40a7-ad92-a0a5d6de1f53"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"5", "/", "2"}]]]], "Output",
 CellChangeTimes->{
  3.8022570012491302`*^9, {3.802257042880156*^9, 3.8022570465772457`*^9}, {
   3.802257122975873*^9, 3.802257139631225*^9}, 3.8022572471837473`*^9, 
   3.8022775026337347`*^9, {3.802277612359261*^9, 3.8022776247890797`*^9}, 
   3.803739677368658*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"7b20d493-e277-410f-9ff6-e8cc7ede180a"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "\[Lambda]"}]], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Lambda]"}]], " ", "\[Lambda]"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Lambda]"}]], " ", 
   SuperscriptBox["\[Lambda]", "2"]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "\[Lambda]"}]], " ", 
   SuperscriptBox["\[Lambda]", "3"]}]}]], "Output",
 CellChangeTimes->{
  3.8022570012491302`*^9, {3.802257042880156*^9, 3.8022570465772457`*^9}, {
   3.802257122975873*^9, 3.802257139631225*^9}, 3.8022572471837473`*^9, 
   3.8022775026337347`*^9, {3.802277612359261*^9, 3.8022776247890797`*^9}, 
   3.80373967737118*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"d00e5b3d-7af6-4da0-8582-c6099e21da81"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["443", 
   RowBox[{"48", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.8022570012491302`*^9, {3.802257042880156*^9, 3.8022570465772457`*^9}, {
   3.802257122975873*^9, 3.802257139631225*^9}, 3.8022572471837473`*^9, 
   3.8022775026337347`*^9, {3.802277612359261*^9, 3.8022776247890797`*^9}, 
   3.803739677372998*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"4db9f328-73e1-43b7-ba7a-26bbe0bc9127"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 68 (p.218)", "Subsection",
 CellChangeTimes->{{3.801412419738806*^9, 
  3.801412429481153*^9}},ExpressionUUID->"fa2b1a3d-a11e-40c6-a7d1-\
fa2b60c1b336"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"anti", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"missi", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ee", "=", 
   RowBox[{"1", "-", 
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"500", "*", 
       RowBox[{"1", "/", "100"}]}], ",", "0"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Ee", "^", "10"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8014124680764313`*^9, 3.801412477809889*^9}, {
   3.80141258397466*^9, 3.80141262451515*^9}, {3.801412659572483*^9, 
   3.801412663996133*^9}, {3.8014130071652117`*^9, 3.8014130185106153`*^9}, 
   3.801413155738503*^9, {3.8014136843842163`*^9, 3.8014136932197237`*^9}, {
   3.801413759707528*^9, 3.80141381686976*^9}, {3.801413851495493*^9, 
   3.801413851866982*^9}, {3.801413995735819*^9, 3.801414010495686*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"266bc87e-bb10-4961-8e46-9e098bf2863c"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox["1", 
     SuperscriptBox["\[ExponentialE]", "5"]]}], ")"}], "10"]], "Output",
 CellChangeTimes->{{3.80141261842988*^9, 3.801412625973374*^9}, 
   3.80141266433499*^9, 3.801412740747534*^9, {3.801413008767654*^9, 
   3.801413019524557*^9}, 3.801413156295355*^9, {3.801413694264761*^9, 
   3.801413704901243*^9}, {3.801413769430023*^9, 3.801413852667238*^9}, {
   3.801414003598284*^9, 3.801414010843945*^9}, 3.8022775027039833`*^9, {
   3.802277612379622*^9, 3.802277624824172*^9}, 3.803739679710579*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"fce37f84-c6c2-4f68-86c9-2d732fd5efc5"],

Cell[BoxData["0.9346272479320712`"], "Output",
 CellChangeTimes->{{3.80141261842988*^9, 3.801412625973374*^9}, 
   3.80141266433499*^9, 3.801412740747534*^9, {3.801413008767654*^9, 
   3.801413019524557*^9}, 3.801413156295355*^9, {3.801413694264761*^9, 
   3.801413704901243*^9}, {3.801413769430023*^9, 3.801413852667238*^9}, {
   3.801414003598284*^9, 3.801414010843945*^9}, 3.8022775027039833`*^9, {
   3.802277612379622*^9, 3.802277624824172*^9}, 3.8037396797124367`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"ab097d25-6447-422c-83d5-537c62511214"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 78 (p.219)", "Subsection",
 CellChangeTimes->{{3.802176438355707*^9, 
  3.802176447347796*^9}},ExpressionUUID->"2a9ca8ee-6c91-4273-9c29-\
d05686746e64"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"4", ",", "2"}], "]"}], "^", "2"}], " ", "/", " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{"8", ",", "4"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Geo", "[", 
  RowBox[{"n", ",", "p"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"n", "\[Rule]", " ", "Infinity"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.802176458492367*^9, 3.802176484438077*^9}, {
   3.8021765698062363`*^9, 3.802176643741929*^9}, {3.8021766750866117`*^9, 
   3.8021767718608503`*^9}, {3.802177031241728*^9, 3.8021770618898706`*^9}, {
   3.8021771030343227`*^9, 3.802177116171301*^9}, {3.802277541723144*^9, 
   3.802277572356398*^9}, {3.802333156233263*^9, 3.802333195755431*^9}, 
   3.8037396822544947`*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"3bc504ed-bdef-4d64-b1c2-6ba425627925"],

Cell[BoxData[
 FractionBox["18", "35"]], "Output",
 CellChangeTimes->{{3.802176607591848*^9, 3.802176644002821*^9}, {
   3.8021766794786673`*^9, 3.802176798892214*^9}, {3.802177046513026*^9, 
   3.802177062127453*^9}, {3.8021771077932587`*^9, 3.802177120020165*^9}, 
   3.802277502777257*^9, {3.802277541937716*^9, 3.802277569174926*^9}, {
   3.802277612433771*^9, 3.8022776248716917`*^9}, {3.802333144506831*^9, 
   3.802333190744492*^9}, 3.803739683240019*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"19bd82d4-0734-4b5a-8442-6eae23ce8faa"],

Cell[BoxData[
 RowBox[{"18", " ", 
  SuperscriptBox["17", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], " ", 
  SuperscriptBox["35", 
   RowBox[{"-", "n"}]]}]], "Output",
 CellChangeTimes->{{3.802176607591848*^9, 3.802176644002821*^9}, {
   3.8021766794786673`*^9, 3.802176798892214*^9}, {3.802177046513026*^9, 
   3.802177062127453*^9}, {3.8021771077932587`*^9, 3.802177120020165*^9}, 
   3.802277502777257*^9, {3.802277541937716*^9, 3.802277569174926*^9}, {
   3.802277612433771*^9, 3.8022776248716917`*^9}, {3.802333144506831*^9, 
   3.802333190744492*^9}, 3.8037396832420387`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"42b5d2f4-cd07-4e43-9af0-3a152c05f0d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 79 (p.219)", "Subsection",
 CellChangeTimes->{{3.8021672124291897`*^9, 
  3.802167221581163*^9}},ExpressionUUID->"7649282e-03cd-4760-a451-\
55ae138ae49b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nn", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"HyperGeo", "[", 
    RowBox[{"n", ",", "Nn", ",", "m", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"1", "-", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"HyperGeo", "[", 
       RowBox[{"n", ",", "Nn", ",", "m", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802167224280072*^9, 3.802167277369603*^9}, {
  3.802167374692103*^9, 3.8021674004201307`*^9}, {3.802167439674375*^9, 
  3.8021674885417137`*^9}, {3.80216761718671*^9, 3.802167622698806*^9}, {
  3.8021679334880857`*^9, 3.802168027052348*^9}, {3.802168172288363*^9, 
  3.802168214380745*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"174ed1b1-f434-40db-b71d-adc4facbe822"],

Cell[BoxData["0.5223047493549781`"], "Output",
 CellChangeTimes->{
  3.8021674017437773`*^9, 3.802167440468461*^9, {3.802167485072454*^9, 
   3.802167489106742*^9}, {3.802167618010141*^9, 3.802167624699451*^9}, {
   3.802167954177927*^9, 3.8021679627364883`*^9}, {3.802168003023549*^9, 
   3.802168030821459*^9}, {3.802168209283195*^9, 3.802168215774012*^9}, 
   3.802277502853449*^9, {3.802277612483883*^9, 3.802277624924718*^9}, 
   3.803739684360684*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"f69d569b-b94e-435e-85e9-05ebc75979f3"],

Cell[BoxData["0.012551075774856877`"], "Output",
 CellChangeTimes->{
  3.8021674017437773`*^9, 3.802167440468461*^9, {3.802167485072454*^9, 
   3.802167489106742*^9}, {3.802167618010141*^9, 3.802167624699451*^9}, {
   3.802167954177927*^9, 3.8021679627364883`*^9}, {3.802168003023549*^9, 
   3.802168030821459*^9}, {3.802168209283195*^9, 3.802168215774012*^9}, 
   3.802277502853449*^9, {3.802277612483883*^9, 3.802277624924718*^9}, 
   3.803739684362667*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"524a884d-1e66-4d82-b9c2-95c3453cfc54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 82 (p .220)", "Subsection",
 CellChangeTimes->{{3.801411415137195*^9, 
  3.801411417847506*^9}},ExpressionUUID->"4c24c849-06d3-455c-b477-\
dbaa51473910"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"9", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Bin", "[", 
   RowBox[{"4", ",", "p", ",", "4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.801411421888192*^9, 3.801411547993318*^9}, {
  3.8014116081988363`*^9, 3.8014116084983387`*^9}, {3.801411640901455*^9, 
  3.801411640986936*^9}, {3.801412081959117*^9, 3.801412086280724*^9}, {
  3.802167330436523*^9, 3.802167330693409*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"466253ab-61e9-4425-bcad-113f25452c70"],

Cell[BoxData[
 FractionBox["3439", "10000"]], "Output",
 CellChangeTimes->{{3.801411479925703*^9, 3.8014115194240294`*^9}, 
   3.801411549524447*^9, 3.801411610812289*^9, 3.801411641591628*^9, {
   3.801412082847736*^9, 3.801412086549631*^9}, 3.802277502931316*^9, {
   3.8022776125349073`*^9, 3.802277624974464*^9}, 3.803739685894918*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"be017de4-41af-4f92-b4e8-f32473b1f3a7"],

Cell[BoxData["0.3439`"], "Output",
 CellChangeTimes->{{3.801411479925703*^9, 3.8014115194240294`*^9}, 
   3.801411549524447*^9, 3.801411610812289*^9, 3.801411641591628*^9, {
   3.801412082847736*^9, 3.801412086549631*^9}, 3.802277502931316*^9, {
   3.8022776125349073`*^9, 3.802277624974464*^9}, 3.803739685896888*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"ae69c6c0-5a3f-4de6-8aa3-16d2f81c6d7b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 83 (p.220)", "Subsection",
 CellChangeTimes->{{3.801410507018722*^9, 
  3.8014105145912437`*^9}},ExpressionUUID->"3ab1e2aa-00c4-4670-af78-\
0ab459cbcd43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"3", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"5", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"7", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "+", " ", "p2", " ", "+", "p3"}]}], "Input",
 CellChangeTimes->{{3.801410565209221*^9, 3.8014106072443857`*^9}, {
  3.80141070156708*^9, 3.801410712177924*^9}, {3.801410966797801*^9, 
  3.801410986323414*^9}, {3.801411116827025*^9, 3.8014111191303053`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"7d5518ab-d85a-4684-ac48-7a2a1ed728a8"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{
  3.8014109872578363`*^9, 3.801411120742066*^9, 3.802277502998057*^9, {
   3.802277612581788*^9, 3.802277625019802*^9}, 3.803739687267215*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"03e1e1c6-006d-4e75-a171-7f888d0390cf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auto-\[CapitalEAcute]valuation", "Section",
 CellChangeTimes->{
  3.8013989355354643`*^9, {3.801399577251235*^9, 
   3.801399578798203*^9}},ExpressionUUID->"3e071081-c1b2-4f01-8abf-\
d342416eb431"],

Cell[CellGroupData[{

Cell["Exercice 9 (p.228)", "Subsection",
 CellChangeTimes->{{3.8013991985860023`*^9, 
  3.801399230781962*^9}},ExpressionUUID->"db9871c0-bc21-433d-8860-\
e6d454062c47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"esp", "=", "np"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"var", "-", 
    RowBox[{"np", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"esp", "=", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"var", "=", "2.4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{"var", "/", "esp"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Bin", "[", 
    RowBox[{"n", ",", "p", ",", "5"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801399249509892*^9, 3.801399256800644*^9}, {
  3.8014008754606*^9, 3.801400891336093*^9}, {3.8014009369789333`*^9, 
  3.8014009959410553`*^9}, {3.801401175132803*^9, 3.801401188614173*^9}, {
  3.801401316219701*^9, 3.801401316368822*^9}, {3.802167335805545*^9, 
  3.802167336108904*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"c0a12d96-954f-4b18-b958-bba3f78cee86"],

Cell[BoxData["0.2006581247999999`"], "Output",
 CellChangeTimes->{{3.801400982734796*^9, 3.8014009897012463`*^9}, {
   3.801401189292728*^9, 3.801401217344451*^9}, 3.802277503059341*^9, {
   3.8022776126267567`*^9, 3.8022776257498903`*^9}, 3.803739689480444*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"ac554a6b-f052-4b05-afa3-885a338dcb40"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 15 (p.229)", "Subsection",
 CellChangeTimes->{{3.802022393166374*^9, 3.802022396872992*^9}, {
  3.80202264099599*^9, 
  3.802022643107562*^9}},ExpressionUUID->"549a1aef-bf62-4732-a2a7-\
da0f6d85b9d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lambda", "=", 
  RowBox[{"52", "/", "10"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Poisson", "[", 
    RowBox[{"lambda", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802022401092334*^9, 3.802022407139637*^9}, {
   3.802022492446227*^9, 3.802022542984318*^9}, 3.802022575614603*^9, {
   3.80202261240653*^9, 3.802022615063175*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"f9e72e29-fa75-4294-86a7-8d288dc9d059"],

Cell[BoxData[
 FractionBox["26", "5"]], "Output",
 CellChangeTimes->{{3.802022511117626*^9, 3.802022543593092*^9}, 
   3.802022576019503*^9, 3.802022615987097*^9, 3.802277503116475*^9, {
   3.8022776126726217`*^9, 3.8022776262637787`*^9}, 3.803739690838463*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"772b304d-be15-4bb0-8ef5-c8f8e8fac43a"],

Cell[BoxData[
 FractionBox["16183", 
  RowBox[{"375", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"26", "/", "5"}]]}]]], "Output",
 CellChangeTimes->{{3.802022511117626*^9, 3.802022543593092*^9}, 
   3.802022576019503*^9, 3.802022615987097*^9, 3.802277503116475*^9, {
   3.8022776126726217`*^9, 3.8022776262637787`*^9}, 3.80373969084099*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"49d03a68-ff25-44e5-9036-e2c574b54a10"],

Cell[BoxData["0.23806549872312416`"], "Output",
 CellChangeTimes->{{3.802022511117626*^9, 3.802022543593092*^9}, 
   3.802022576019503*^9, 3.802022615987097*^9, 3.802277503116475*^9, {
   3.8022776126726217`*^9, 3.8022776262637787`*^9}, 3.8037396908429117`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"532b88d5-ecd7-4329-a22e-7c33d6c66359"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"(", 
   RowBox[{"14", "/", "10000"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"1000", ",", "2"}], "]"}], 
   RowBox[{"p", "^", "2"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], "^", "998"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.802023164841337*^9, 3.802023256472314*^9}, 
   3.802023351782495*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"1730269d-e47b-488f-931f-0a7076cde0b9"],

Cell[BoxData[
 FractionBox["7", "5000"]], "Output",
 CellChangeTimes->{
  3.802023352045989*^9, 3.80227750317529*^9, {3.8022776127199783`*^9, 
   3.8022776263751783`*^9}, 3.803739692537313*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"34ee76f4-d4de-443c-9093-b8f9b4bbb7c6"],

Cell[BoxData["0.24186340327881742`"], "Output",
 CellChangeTimes->{
  3.802023352045989*^9, 3.80227750317529*^9, {3.8022776127199783`*^9, 
   3.8022776263751783`*^9}, 3.803739692539027*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"9f6ccc34-f2e6-4f71-a0e4-f26fb079bb48"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 12 (p.228)", "Subsection",
 CellChangeTimes->{{3.801401415618205*^9, 
  3.8014014273053837`*^9}},ExpressionUUID->"3b958de8-ae4b-4672-aee7-\
5e700e66f1c0"],

Cell[CellGroupData[{

Cell["Exercice 19 (p.229)", "Subsection",
 CellChangeTimes->{{3.8014029119878187`*^9, 
  3.801402933189404*^9}},ExpressionUUID->"d422a2e9-4f5c-4165-96df-\
fdcc67cd7949"],

Cell["a)", "Text",
 CellChangeTimes->{{3.801403446325548*^9, 
  3.8014034466303797`*^9}},ExpressionUUID->"0e31229a-5bef-46e3-88b5-\
10dc2a169273"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", "PPP", ")"}]}], " ", "+", " ", 
    RowBox[{"P", 
     RowBox[{"(", "FFF", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], "^", "3"}]}]}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"X", "=", "3"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{"p", "^", "2"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.801403148640115*^9, 3.801403168472846*^9}, {
  3.801403202599112*^9, 3.8014032161573544`*^9}, {3.801403248224309*^9, 
  3.801403273803966*^9}, {3.801403330571227*^9, 3.8014033944851303`*^9}, {
  3.801403427711874*^9, 3.8014034339374638`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"b534a7c9-90da-4155-b245-5a0fc89eb61d"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.80140321667933*^9, {3.801403265035069*^9, 3.80140327429113*^9}, {
   3.801403360187586*^9, 3.8014033953924417`*^9}, {3.8014034297080193`*^9, 
   3.801403434509206*^9}, 3.802277503243421*^9, {3.802277612777712*^9, 
   3.802277626498611*^9}, 3.803739697701497*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"b08d24e4-5a5f-4d66-aaca-63924d7e0f3d"],

Cell[BoxData[
 FractionBox["3", "64"]], "Output",
 CellChangeTimes->{
  3.80140321667933*^9, {3.801403265035069*^9, 3.80140327429113*^9}, {
   3.801403360187586*^9, 3.8014033953924417`*^9}, {3.8014034297080193`*^9, 
   3.801403434509206*^9}, 3.802277503243421*^9, {3.802277612777712*^9, 
   3.802277626498611*^9}, 3.803739697703113*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"906eada7-0250-45e3-9c02-efc7f6511cc9"]
}, Open  ]],

Cell["b) P(X>4)", "Text",
 CellChangeTimes->{{3.801403450859613*^9, 3.801403468300859*^9}, {
  3.801404025508328*^9, 
  3.801404025924739*^9}},ExpressionUUID->"76a73b9e-5495-4738-b4a3-\
b10d89c327e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "^", 
      RowBox[{"(", 
       RowBox[{"3", "-", "i"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8014034787773247`*^9, 3.801403531761348*^9}, {
  3.801403591000463*^9, 3.801403638103263*^9}, {3.801403691672257*^9, 
  3.8014037116499453`*^9}, {3.801403788045125*^9, 3.80140379696071*^9}, {
  3.8014038452413597`*^9, 3.801403852194674*^9}, {3.8014047543058567`*^9, 
  3.801404765891509*^9}, {3.801404832029956*^9, 3.8014048320974483`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"7c711a07-09eb-4be7-a2af-19d9caf91bb2"],

Cell[BoxData[
 FractionBox["1", "256"]], "Output",
 CellChangeTimes->{{3.801403526321844*^9, 3.801403532198265*^9}, {
   3.801403598107896*^9, 3.8014036385786324`*^9}, 3.801403698377695*^9, 
   3.801403797379319*^9, {3.8014038462534657`*^9, 3.801403853085909*^9}, 
   3.801404635258376*^9, 3.801404766149345*^9, 3.8022775033660393`*^9, {
   3.802277612829911*^9, 3.802277626639741*^9}, 3.803739699872246*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"e4113aef-019a-42b7-a444-7adf62261f09"],

Cell[BoxData["0.00390625`"], "Output",
 CellChangeTimes->{{3.801403526321844*^9, 3.801403532198265*^9}, {
   3.801403598107896*^9, 3.8014036385786324`*^9}, 3.801403698377695*^9, 
   3.801403797379319*^9, {3.8014038462534657`*^9, 3.801403853085909*^9}, 
   3.801404635258376*^9, 3.801404766149345*^9, 3.8022775033660393`*^9, {
   3.802277612829911*^9, 3.802277626639741*^9}, 3.8037396998739157`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"9ea874f0-069c-4f7f-85bb-dbaa0e695cf9"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 24 (p.230)", "Subsection",
 CellChangeTimes->{{3.801405456457891*^9, 
  3.801405468923553*^9}},ExpressionUUID->"39546d5f-68c1-4f8b-b026-\
77dceb476663"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 5", "Chapter",
 CellChangeTimes->{{3.801644575637045*^9, 
  3.801644577789823*^9}},ExpressionUUID->"7c1a22e0-9933-4a79-8b5b-\
d7bc7abcd5f8"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.8016445887976923`*^9, 
  3.8016445925334682`*^9}},ExpressionUUID->"2b027d90-71f4-4a15-8999-\
889ba21804ae"],

Cell[CellGroupData[{

Cell["Exercice 2", "Subsection",
 CellChangeTimes->{{3.801644597592856*^9, 
  3.8016446144366417`*^9}},ExpressionUUID->"719d92df-54f9-4b1a-bc89-\
ac63c4d7e5b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"c", ",", "n", ",", "r"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", " ", "x", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"x", "^", "2"}], ")"}]}], "/", "2"}], "]"}]}], ",", 
        RowBox[{"x", ">", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"x", "\[LessEqual]", "0"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"c", " ", "x", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"n", "\[Rule]", " ", "Infinity"}]}], "]"}], "\[Equal]", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.801644023230014*^9, 3.801644076738393*^9}, {
  3.801644635636726*^9, 3.801644636020081*^9}, {3.80164574895288*^9, 
  3.801645777625643*^9}, {3.803739721049534*^9, 3.8037398143442287`*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"25949a27-10f5-4795-a2c2-3c463ef0d8a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.80164463296519*^9, 3.801644636649254*^9}, {
   3.801645769050473*^9, 3.801645777845619*^9}, {3.8016462249190807`*^9, 
   3.8016462356109657`*^9}, 3.8016462747744713`*^9, 3.802277503502833*^9, {
   3.8022776128752413`*^9, 3.802277626809985*^9}, {3.803739707762226*^9, 
   3.8037398149220457`*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"3495e05e-164e-4d6d-a8d1-d9688fe34ca5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "5", ",", "r"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"r", ">", "5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"r", "\[Rule]", " ", "Infinity"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8016446647794437`*^9, 3.801644731089592*^9}, {
  3.801644887876069*^9, 3.801644897847705*^9}, {3.801645739920209*^9, 
  3.801645741054831*^9}, {3.801645798969163*^9, 3.8016458264907227`*^9}, {
  3.8016458578919687`*^9, 3.801645918707323*^9}, {3.801645959744013*^9, 
  3.801646122285804*^9}, {3.8016461525228148`*^9, 3.801646159326068*^9}, {
  3.8016461905857363`*^9, 3.8016462063229628`*^9}, {3.801646286669443*^9, 
  3.801646287020359*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"3afad64e-5b67-4aa9-9f3e-d747f822657a"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"25", "/", "2"}]]]], "Output",
 CellChangeTimes->{{3.8016446968094254`*^9, 3.801644731442945*^9}, 
   3.8016448983398333`*^9, {3.801645807702587*^9, 3.80164582066171*^9}, {
   3.801645861358699*^9, 3.801645884758244*^9}, {3.801645964620597*^9, 
   3.801646083435276*^9}, {3.801646117072495*^9, 3.8016461195214233`*^9}, {
   3.801646154659452*^9, 3.801646207893132*^9}, {3.801646278532855*^9, 
   3.801646288145267*^9}, 3.802277503570909*^9, {3.802277612928158*^9, 
   3.8022776271411953`*^9}, 3.803739767389024*^9, {3.8037398093451777`*^9, 
   3.803739818184915*^9}},
 CellLabel->
  "Out[262]=",ExpressionUUID->"3f44d70c-890b-4f1e-b5fe-ae08382724cb"],

Cell[BoxData["3.726653172078671`*^-6"], "Output",
 CellChangeTimes->{{3.8016446968094254`*^9, 3.801644731442945*^9}, 
   3.8016448983398333`*^9, {3.801645807702587*^9, 3.80164582066171*^9}, {
   3.801645861358699*^9, 3.801645884758244*^9}, {3.801645964620597*^9, 
   3.801646083435276*^9}, {3.801646117072495*^9, 3.8016461195214233`*^9}, {
   3.801646154659452*^9, 3.801646207893132*^9}, {3.801646278532855*^9, 
   3.801646288145267*^9}, 3.802277503570909*^9, {3.802277612928158*^9, 
   3.8022776271411953`*^9}, 3.803739767389024*^9, {3.8037398093451777`*^9, 
   3.803739818187233*^9}},
 CellLabel->
  "Out[263]=",ExpressionUUID->"7a6ca1cf-5e5c-4921-84dc-e008f3a61cc1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$20608#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 0.6065306162904415}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8016446968094254`*^9, 3.801644731442945*^9}, 
   3.8016448983398333`*^9, {3.801645807702587*^9, 3.80164582066171*^9}, {
   3.801645861358699*^9, 3.801645884758244*^9}, {3.801645964620597*^9, 
   3.801646083435276*^9}, {3.801646117072495*^9, 3.8016461195214233`*^9}, {
   3.801646154659452*^9, 3.801646207893132*^9}, {3.801646278532855*^9, 
   3.801646288145267*^9}, 3.802277503570909*^9, {3.802277612928158*^9, 
   3.8022776271411953`*^9}, 3.803739767389024*^9, {3.8037398093451777`*^9, 
   3.803739818233756*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"231a2ca1-9f49-4cfb-b372-ad5901619102"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 3 (p.271)", "Subsection",
 CellChangeTimes->{{3.802889646732336*^9, 
  3.8028896537831707`*^9}},ExpressionUUID->"c108070b-e74e-4529-818d-\
52e75d661db7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "c", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"c", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], " ", "-", 
     RowBox[{"x", "^", "3"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"5", "/", "2"}]}], "}"}]}], "]"}], "\[Equal]", "1"}], ",", 
   "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"c", "/.", "%"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"5", "/", "2"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Pas", " ", "une", " ", "fonction", " ", "de", " ", "densite", " ", "car",
      " ", "y"}], "<", "0"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "c", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"c", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], " ", "-", 
     RowBox[{"x", "^", "2"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"5", "/", "2"}]}], "}"}]}], "]"}], "\[Equal]", "1"}], ",", 
   "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"c", "/.", "%"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"5", "/", "2"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8028896566168413`*^9, 3.802889732042008*^9}, {
  3.802889773639448*^9, 3.802889866114193*^9}, {3.80288993460876*^9, 
  3.8028900305863237`*^9}, {3.802890502924263*^9, 3.802890545892662*^9}, {
  3.802890802667623*^9, 3.802890821132638*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"02a9583a-2222-4b0a-aa98-cf50f2f2d304"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["64", "225"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820321661*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"82f755ab-771f-4829-b5f7-abb7c3bf75ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox["64", "225"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820323778*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"88947f36-3f79-4e7d-8985-1050403be82b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2hXxNkBdiPg/PRCjPQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$20992#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[5, 2]}, {-0.3096638170950982, 3.022221979138327}}, {{
     0, 2.5}, {-0.3096638170950982, 3.022221979138327}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820386998*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"eca7d90d-ee20-4677-b173-bffe2dd83dff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    FractionBox["24", "25"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820393086*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"baab9696-e629-46dc-a7e4-bb45394d1cde"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["24", "25"], "}"}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820395423*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"2107b613-f51b-401f-8c28-48d3b794f3c9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HGQ+rM+35UgLxVjUIq9VhpPsUCatVt/ZSdG50mIjdIeTvN1rV9V4309Ktpij
zNcZTnL1hLcGTv1DkWkseGBiw0X2bYj6PdA4SklSalDorOUil/FCXU/ZBMWF
zd3xWYFEDncjCV2VxiiOb1iSdxJJ5AXhPTZ6VQTFK9xs2SiZRH72x9qdu56g
+JuV/+BPJZGVRjjZza0EJWbGPyHpAYmM38kPPPOLoJQcWlhKe0wi77MzMvbn
YVIW6ld784tJ5BtSy6K85kxKUid//McWEtlPeO3pYywmJSP3stvtzyRySWbE
F/VlJiXXr03P4AuJ3GxzrXEPL4tSuSVp8Usbifw8KHe3wA4WZdBa2K2rh0SW
1XUsY+qwKLIj2/WGR0jk2UnD6ZVkFkWl/Kb4MyqJ7N0xIcubyaJoRQ0sOI+T
yD/whV6BfBbllOzj15M0Eln/i0+B7DsWxcdTUpzJJJGH+ShC7sMsSvDh/xZK
2SRydA5DMoTOokRtGO72myGR119JKU6ZZVHSX+XenZ9H9RXu29/Ax6Y8DeN2
fbdIIq9skVMZFGFTik2ddYOXSeSt71ML58TZlPJdzTuP/iORBe5fyxSRZ1Nq
2XsWVldRvc/q1+/fz6b8D0qn0gg=
       "]]},
     Annotation[#, "Charting`Private`Tag$21074#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[5, 2]}, {-1.1999998530612266`, 0.959999986215556}}, {{
     0, 2.5}, {-1.1999998530612266`, 0.959999986215556}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80288981558374*^9, {3.802889861561385*^9, 3.802889867828573*^9}, 
   3.802889940289817*^9, 3.802889971015194*^9, {3.802890005170287*^9, 
   3.802890032186561*^9}, {3.8028905407993383`*^9, 3.80289054623212*^9}, 
   3.803739820430675*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"982d6ad2-1423-4518-9eb2-f0f31169ba95"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 4 (p.271)", "Subsection",
 CellChangeTimes->{{3.802940068777358*^9, 
  3.802940076792776*^9}},ExpressionUUID->"34e71b52-ffb0-483f-a13f-\
09a3790736e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"10", "/", "15"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Bin", "[", 
    RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3", ",", "6"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8029400921849413`*^9, 3.802940213315091*^9}, {
  3.802940264182015*^9, 3.8029402687121277`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"64eff2e8-650c-49f3-9577-0e8033f38a17"],

Cell[BoxData[
 FractionBox["656", "729"]], "Output",
 CellChangeTimes->{{3.8029401539996*^9, 3.802940215434206*^9}, 
   3.802940269235902*^9, 3.802940320885515*^9, 3.803739824068479*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"cf4000ae-4e25-451c-a3fe-3242a1646b00"],

Cell[BoxData["0.8998628257887518`"], "Output",
 CellChangeTimes->{{3.8029401539996*^9, 3.802940215434206*^9}, 
   3.802940269235902*^9, 3.802940320885515*^9, 3.803739824071322*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"eda76874-23b0-4eb4-b636-3efea26fd580"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 7", "Subsection",
 CellChangeTimes->{{3.801646714972706*^9, 
  3.801646717688582*^9}},ExpressionUUID->"b6dead97-2cc2-4ea5-8f3c-\
fd2cb7bf2565"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Esp", "=", 
   RowBox[{"3", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "+", 
        RowBox[{"b", " ", 
         RowBox[{"x", "^", "2"}]}]}], ",", 
       RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"0", ">", "x"}], "&&", 
        RowBox[{"x", ">", "1"}]}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"f", "[", "x", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[Equal]", "Esp"}],
    "&&", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[Equal]", "1"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "/", "2"}], " ", "+", " ", 
      RowBox[{"b", "/", "4"}]}], "\[Equal]", 
     RowBox[{"3", "/", "5"}]}], "&&", 
    RowBox[{
     RowBox[{"a", "+", 
      RowBox[{"b", "/", "3"}]}], "\[Equal]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.801646746429783*^9, 3.8016470521405487`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"7f8ec467-09cc-4439-a8a8-f186fcccf642"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     FractionBox["3", "5"]}], ",", 
    RowBox[{"b", "\[Rule]", 
     FractionBox["6", "5"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.801646808589512*^9, 3.801646966865314*^9, {3.801647030202293*^9, 
   3.801647052425171*^9}, 3.8022775037172747`*^9, {3.8022776130456743`*^9, 
   3.8022776276067333`*^9}, 3.8037398260916348`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"fba9b1a3-4340-4851-8327-24d8adfa2ccc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     FractionBox["3", "5"]}], ",", 
    RowBox[{"b", "\[Rule]", 
     FractionBox["6", "5"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.801646808589512*^9, 3.801646966865314*^9, {3.801647030202293*^9, 
   3.801647052425171*^9}, 3.8022775037172747`*^9, {3.8022776130456743`*^9, 
   3.8022776276067333`*^9}, 3.80373982609374*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"897738cb-d084-4e0e-9da9-6ad89178be21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 12 (p.272)", "Subsection",
 CellChangeTimes->{{3.8021652187096863`*^9, 
  3.802165226684382*^9}},ExpressionUUID->"8998b5b9-3cb9-4628-b316-\
b18e6abe80d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1", "-", "x"}], ",", 
        RowBox[{"0", "<", "x", "\[LessEqual]", " ", "x1"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "-", "x1"}], ",", 
        RowBox[{"x1", "<", "x", "\[LessEqual]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x2", "+", "x1"}], ")"}], "/", "2"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x2", "-", "x"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x2", "+", "x1"}], ")"}], "/", "2"}], "<", "x", 
         "\[LessEqual]", "x2"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "-", "x2"}], ",", 
        RowBox[{"x2", "<", "x", "\[LessEqual]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x3", "+", "x2"}], ")"}], "/", "2"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x3", "-", "x"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x3", "+", "x2"}], ")"}], "/", "2"}], "<", "x", 
         "\[LessEqual]", "x3"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "-", "x3"}], ",", 
        RowBox[{"x3", "<", "x", "\[LessEqual]", " ", "100"}]}], "}"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.01", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1", "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{"x2", "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{"x3", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nm", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "/.", 
    RowBox[{"Last", "[", "%", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", "=", 
  RowBox[{"0.01", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", "=", "75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"B", " ", "=", 
  RowBox[{"0.01", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"nm", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"nm", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3", "=", 
   RowBox[{"nm", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cc", "=", 
  RowBox[{"0.01", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100"}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8016582987711067`*^9, 3.8016583022495117`*^9}, {
  3.80191472972495*^9, 3.8019147297379093`*^9}, {3.80216523118543*^9, 
  3.802165308067663*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"b094d12b-b79a-4688-a4f5-161369f77207"],

Cell[BoxData["12.5`"], "Output",
 CellChangeTimes->{{3.802165296127749*^9, 3.8021653105081882`*^9}, 
   3.802277510481415*^9, {3.802277613107677*^9, 3.8022776353117456`*^9}, 
   3.8037398330010757`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"1471ef5a-af2b-466b-a84d-f8b0b617e9f2"],

Cell[BoxData["9.375`"], "Output",
 CellChangeTimes->{{3.802165296127749*^9, 3.8021653105081882`*^9}, 
   3.802277510481415*^9, {3.802277613107677*^9, 3.8022776353117456`*^9}, 
   3.803739833037014*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"ff54663a-26ee-495c-9a2d-8b90e8b17c34"],

Cell[BoxData["8.333333333333336`"], "Output",
 CellChangeTimes->{{3.802165296127749*^9, 3.8021653105081882`*^9}, 
   3.802277510481415*^9, {3.802277613107677*^9, 3.8022776353117456`*^9}, 
   3.8037398330686502`*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"030d149e-71c1-42c6-8692-512f6b6d0238"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 16 (p.273)", "Subsection",
 CellChangeTimes->{{3.802896095660878*^9, 
  3.8028961065906477`*^9}},ExpressionUUID->"b58d6b23-12de-447b-be9e-\
0e5c84cb6471"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "p"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "140"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"1", "-", 
   RowBox[{"Pnorm", "[", 
    RowBox[{"Centre", "[", 
     RowBox[{"150", ",", "mu", ",", "sigma"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", ">", "150"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"mu", ",", "sigma"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", "p"}], ")"}], "^", "10"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Geo", "[", 
     RowBox[{"n", ",", "p"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8028961146132717`*^9, 3.802896158634606*^9}, {
  3.8028961935582237`*^9, 3.802896344497158*^9}, {3.802896382348263*^9, 
  3.80289644776161*^9}, {3.802896503163796*^9, 3.802896522445129*^9}, {
  3.8028965727980833`*^9, 3.8028965841608152`*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"f99c6a2b-463a-4089-b433-13446e932148"],

Cell[BoxData["0.006209665325776159`"], "Output",
 CellChangeTimes->{
  3.8028961834179897`*^9, {3.802896240142282*^9, 3.802896397544013*^9}, 
   3.8028964480268497`*^9, {3.802896504370679*^9, 3.802896523299015*^9}, 
   3.802896584569199*^9, 3.803739854012424*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"3a4d986b-b2e1-403d-b543-69f7d536cbd1"],

Cell[BoxData["0.006209665325776159`"], "Output",
 CellChangeTimes->{
  3.8028961834179897`*^9, {3.802896240142282*^9, 3.802896397544013*^9}, 
   3.8028964480268497`*^9, {3.802896504370679*^9, 3.802896523299015*^9}, 
   3.802896584569199*^9, 3.8037398540313673`*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"03f1766e-4b7a-4aa9-a3d5-3b508c53747f"],

Cell[BoxData["0.9396101208044241`"], "Output",
 CellChangeTimes->{
  3.8028961834179897`*^9, {3.802896240142282*^9, 3.802896397544013*^9}, 
   3.8028964480268497`*^9, {3.802896504370679*^9, 3.802896523299015*^9}, 
   3.802896584569199*^9, 3.803739854033317*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"e4c2da66-cd54-4182-bd7e-9236a7bb218a"],

Cell[BoxData["0.939610120804424`"], "Output",
 CellChangeTimes->{
  3.8028961834179897`*^9, {3.802896240142282*^9, 3.802896397544013*^9}, 
   3.8028964480268497`*^9, {3.802896504370679*^9, 3.802896523299015*^9}, 
   3.802896584569199*^9, 3.803739854035294*^9},
 CellLabel->
  "Out[304]=",ExpressionUUID->"8ec02a8b-7e85-4c75-8bad-b780b7fa152b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 17 (p.273)", "Subsection",
 CellChangeTimes->{{3.8022588266594133`*^9, 
  3.802258842075562*^9}},ExpressionUUID->"5d205b22-c545-4e74-aaed-\
315026da9eb9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"320", "+", "180"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "sigma", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", " ", "=", " ", 
   RowBox[{"sigma", "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Centre", "[", 
         RowBox[{"320", ",", "mu", ",", "sigma"}], "]"}], "==", 
        RowBox[{"InverseCDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", "1"}], "]"}], ",", "0.75"}], "]"}]}], ",", 
       "sigma"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", 
    RowBox[{"Centre", "[", 
     RowBox[{"200", ",", "mu", ",", "sigma"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ",", 
   RowBox[{"Centre", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"320", ",", "280"}], "}"}], ",", "mu", ",", "sigma"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"%", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.802259106054706*^9, 3.8022591061931963`*^9}, {
   3.8022594395165787`*^9, 3.802259663146699*^9}, {3.802259708856254*^9, 
   3.802259862993698*^9}, 3.802260008515353*^9, {3.802260167921433*^9, 
   3.802260168140581*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"a58a1fd4-f711-4024-a62e-0c78288daa6f"],

Cell[BoxData["103.78215529539213`"], "Output",
 CellChangeTimes->{{3.802259610069055*^9, 3.802259663468133*^9}, 
   3.802259713388732*^9, 3.8022597779896097`*^9, {3.802259832181794*^9, 
   3.802259847432225*^9}, 3.802259887940579*^9, 3.802260009171041*^9, 
   3.802277510744089*^9, {3.802277613288982*^9, 3.80227763554459*^9}, 
   3.803739855438209*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"fdfd447e-d4ec-405e-b3dd-e58517e03247"],

Cell[BoxData["0.31498169007823584`"], "Output",
 CellChangeTimes->{{3.802259610069055*^9, 3.802259663468133*^9}, 
   3.802259713388732*^9, 3.8022597779896097`*^9, {3.802259832181794*^9, 
   3.802259847432225*^9}, 3.802259887940579*^9, 3.802260009171041*^9, 
   3.802277510744089*^9, {3.802277613288982*^9, 3.80227763554459*^9}, 
   3.803739855440763*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"aa73eb18-8371-450d-8537-d6ef62e9c893"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.75`", ",", "0.6137349605676256`"}], "}"}]], "Output",
 CellChangeTimes->{{3.802259610069055*^9, 3.802259663468133*^9}, 
   3.802259713388732*^9, 3.8022597779896097`*^9, {3.802259832181794*^9, 
   3.802259847432225*^9}, 3.802259887940579*^9, 3.802260009171041*^9, 
   3.802277510744089*^9, {3.802277613288982*^9, 3.80227763554459*^9}, 
   3.803739855442719*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"40a04a85-608f-4e46-a7fa-c7cd2807890e"],

Cell[BoxData["0.13626503943237445`"], "Output",
 CellChangeTimes->{{3.802259610069055*^9, 3.802259663468133*^9}, 
   3.802259713388732*^9, 3.8022597779896097`*^9, {3.802259832181794*^9, 
   3.802259847432225*^9}, 3.802259887940579*^9, 3.802260009171041*^9, 
   3.802277510744089*^9, {3.802277613288982*^9, 3.80227763554459*^9}, 
   3.80373985544442*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"db3e986a-dbab-4237-b1b6-36e5f2f1c713"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 20 (p.273)", "Subsection",
 CellChangeTimes->{{3.802257478458006*^9, 
  3.8022574881835213`*^9}},ExpressionUUID->"e77046e5-e6ab-4cdd-828a-\
6874647e81f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"65", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Bin", "[", 
     RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "50", ",", "100"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Approximation", " ", "par", " ", "une", " ", "normale"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "\[Minus]", "0.5"}], "<", "Y", "<", 
       RowBox[{"b", "+", "0.5"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"P", 
      RowBox[{"(", 
       RowBox[{"Y", "<", 
        RowBox[{"b", "+", "0.5"}]}], ")"}]}], "-", 
     RowBox[{"P", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "\[Minus]", "0.5"}], "<", "Y"}], ")"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "49.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"n", " ", "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", " ", "p", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Centre", "[", 
   RowBox[{"a", ",", "mu", ",", "sigma"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"1", "-", 
    RowBox[{"N", "@", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"Centre", "[", 
        RowBox[{"a", ",", "mu", ",", "sigma"}], "]"}]}], "]"}]}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "70"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Bin", "[", 
     RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "60", ",", "70"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], ";"}]}], "Input",
 CellChangeTimes->{{3.802257514102392*^9, 3.802257525116356*^9}, {
  3.8022575938691883`*^9, 3.802257663157423*^9}, {3.802257708205721*^9, 
  3.80225793956242*^9}, {3.802257992695403*^9, 3.8022580262742853`*^9}, {
  3.802258060553884*^9, 3.802258065890394*^9}, {3.8022581449829283`*^9, 
  3.8022581933224707`*^9}, {3.802258232462102*^9, 3.802258299793084*^9}, {
  3.802258386048098*^9, 3.802258459869631*^9}, {3.802258658472577*^9, 
  3.802258743673545*^9}, {3.802261177970338*^9, 3.802261178339933*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"95ec77b2-3dae-46b7-8c87-185a0ffb84db"],

Cell[BoxData["0.9992621667511373`"], "Output",
 CellChangeTimes->{{3.802258003244047*^9, 3.802258021596018*^9}, 
   3.802258066180949*^9, {3.802258162285501*^9, 3.80225818188796*^9}, {
   3.802258248558607*^9, 3.8022583006792097`*^9}, {3.802258452549119*^9, 
   3.802258460261383*^9}, {3.8022586626880207`*^9, 3.8022587443750143`*^9}, 
   3.802267896369315*^9, 3.802277510803834*^9, {3.8022776133426113`*^9, 
   3.8022776356825037`*^9}, 3.803739856872816*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"67c386b8-58be-44ef-8392-a6ee3946de71"],

Cell[BoxData[
 RowBox[{"-", "3.2496829938379466`"}]], "Output",
 CellChangeTimes->{{3.802258003244047*^9, 3.802258021596018*^9}, 
   3.802258066180949*^9, {3.802258162285501*^9, 3.80225818188796*^9}, {
   3.802258248558607*^9, 3.8022583006792097`*^9}, {3.802258452549119*^9, 
   3.802258460261383*^9}, {3.8022586626880207`*^9, 3.8022587443750143`*^9}, 
   3.802267896369315*^9, 3.802277510803834*^9, {3.8022776133426113`*^9, 
   3.8022776356825037`*^9}, 3.8037398568753357`*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"1f806edd-5792-44a0-93ca-8bac496c8c90"],

Cell[BoxData["0.9994223314054234`"], "Output",
 CellChangeTimes->{{3.802258003244047*^9, 3.802258021596018*^9}, 
   3.802258066180949*^9, {3.802258162285501*^9, 3.80225818188796*^9}, {
   3.802258248558607*^9, 3.8022583006792097`*^9}, {3.802258452549119*^9, 
   3.802258460261383*^9}, {3.8022586626880207`*^9, 3.8022587443750143`*^9}, 
   3.802267896369315*^9, 3.802277510803834*^9, {3.8022776133426113`*^9, 
   3.8022776356825037`*^9}, 3.803739856877598*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"d088d220-7609-4169-b24c-85f73cfb2b9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 22 (p.273)", "Subsection",
 CellChangeTimes->{{3.8022679021357603`*^9, 
  3.802267910479587*^9}},ExpressionUUID->"1300082d-6609-481a-8369-\
2fae4a3bbbdf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"4", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Bin", "[", 
      RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "50", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Approximation", " ", "normale", " ", "avec", " ", "correction", " ", "de",
     " ", "continuite"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"n", " ", "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Centre", "[", 
  RowBox[{"49.5", ",", "mu", ",", "sigma"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ",", 
   RowBox[{"Centre", "[", 
    RowBox[{"49.5", ",", "mu", ",", "sigma"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Poisson\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", "<", "50"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"PoissonDistribution", "[", 
      RowBox[{"n", " ", "p"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Binomial\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", "<", "50"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Normale\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", "\[LessEqual]", "49.5"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"mu", ",", "sigma"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.802267930791461*^9, 3.80226795309709*^9}, {
  3.802268047359261*^9, 3.802268060221633*^9}, {3.802268175199514*^9, 
  3.802268254304572*^9}, {3.802268302850355*^9, 3.8022684129872017`*^9}, {
  3.802268472328762*^9, 3.802268478392356*^9}, {3.8022686273412533`*^9, 
  3.802268630429009*^9}, {3.802268777208084*^9, 3.802268782411118*^9}, {
  3.802269030064007*^9, 3.802269054093897*^9}, {3.802447255314118*^9, 
  3.8024473622587967`*^9}, {3.802447454144698*^9, 3.8024475051939907`*^9}, {
  3.8024475363562727`*^9, 3.80244757187964*^9}, {3.802447609689246*^9, 
  3.802447620125004*^9}, {3.802447652259501*^9, 3.8024477235880623`*^9}, {
  3.802447927570347*^9, 3.802447927687804*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"cf52f887-5544-4ba8-ae51-a643cd564c07"],

Cell[BoxData["0.9729008022429909`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.804068992128434*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"a9228f77-9a71-4377-847a-e153a273d1d3"],

Cell[BoxData["1.9391793797033496`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.8040689921301737`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"6100d120-c1c3-4d25-91a6-cc8167000604"],

Cell[BoxData["0.9737602502203767`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.804068992132079*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"5c88533a-f890-4579-b972-f9d365bdcf83"],

Cell[BoxData["\<\"Poisson\"\>"], "Print",
 CellChangeTimes->{3.802447740180994*^9, 3.8024479279760523`*^9, 
  3.803739858305645*^9, 3.803740133876131*^9, 3.8040689921347723`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"48300fff-62f4-45f6-8384-6dc873ac13c6"],

Cell[BoxData["0.9296649333406048`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.8040689921389723`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"88afac70-9452-486b-bed4-64e3e41f14b0"],

Cell[BoxData["\<\"Binomial\"\>"], "Print",
 CellChangeTimes->{3.802447740180994*^9, 3.8024479279760523`*^9, 
  3.803739858305645*^9, 3.803740133876131*^9, 3.8040689921419973`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"5b56f7b4-c638-4729-a217-da20a770786b"],

Cell[BoxData["0.9729008022429909`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.8040689921458607`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b85e8c30-3cdb-4c8a-84a9-987a635b0379"],

Cell[BoxData["\<\"Normale\"\>"], "Print",
 CellChangeTimes->{3.802447740180994*^9, 3.8024479279760523`*^9, 
  3.803739858305645*^9, 3.803740133876131*^9, 3.8040689921479063`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"c1e2cc4b-0a91-4d33-8aba-127dc2ac2b03"],

Cell[BoxData["0.9737602502203767`"], "Output",
 CellChangeTimes->{{3.802268217671269*^9, 3.8022682274898853`*^9}, {
   3.802268358374981*^9, 3.802268413758789*^9}, {3.802268475018056*^9, 
   3.8022684787815638`*^9}, {3.8022686155007753`*^9, 3.802268630826261*^9}, {
   3.802269033817144*^9, 3.802269055968631*^9}, 3.80227751085925*^9, {
   3.802277613390839*^9, 3.802277635754867*^9}, {3.8024473277652817`*^9, 
   3.802447362676651*^9}, {3.802447479599036*^9, 3.802447505635668*^9}, {
   3.802447566767898*^9, 3.802447572093706*^9}, {3.802447616092699*^9, 
   3.8024476712971077`*^9}, 3.802447740161003*^9, 3.80244792796799*^9, 
   3.803739858298635*^9, 3.803740133869767*^9, 3.804068992149646*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"38a3c774-b0ce-42a1-b1a0-2452c114486a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 23 (p.274)", "Subsection",
 CellChangeTimes->{{3.802448241197912*^9, 
  3.802448247148136*^9}},ExpressionUUID->"dd002509-2c77-470e-8a87-\
980b154788f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"1", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Centre", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"150", ",", "200"}], "}"}], ",", 
   RowBox[{"n", " ", "p"}], ",", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", " ", "p", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", "%"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "-", 
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"1", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Approximation", " ", "normale"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", " ", "=", " ", 
   RowBox[{"n", " ", "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"n", " ", "p", 
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Centre", " ", "reduit"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Centre", "[", 
   RowBox[{"150", ",", "mu", ",", "sigma"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", "%"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.802448248776824*^9, 3.802448319117961*^9}, {
  3.8024483802879543`*^9, 3.802448403030282*^9}, {3.8024484590094976`*^9, 
  3.802448466853429*^9}, {3.8024485178049927`*^9, 3.802448525125565*^9}, {
  3.802448596129854*^9, 3.80244859719562*^9}, {3.802448651934194*^9, 
  3.802448678093005*^9}, {3.8024487406099854`*^9, 3.8024487898867702`*^9}, {
  3.802448827510386*^9, 3.802448901070526*^9}, {3.802448931216566*^9, 
  3.802448974662115*^9}, {3.802943967575245*^9, 3.802943969624464*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"7fbadf60-368a-4b3f-ae22-ae0da57ac795"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    SqrtBox["2"]}], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.802448320101042*^9, 3.8024484033781652`*^9, 3.802448467194705*^9, 
   3.8024485254463463`*^9, {3.8024487856377563`*^9, 3.802448790341735*^9}, {
   3.802448853421043*^9, 3.802448901956293*^9}, {3.802448948057068*^9, 
   3.802448963766819*^9}, {3.802943944452791*^9, 3.802943971972423*^9}, 
   3.803739859637006*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"182c435a-41f8-4507-9db0-cf47fbfd5002"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07864960352514257`", ",", "0.9976611325094764`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.802448320101042*^9, 3.8024484033781652`*^9, 3.802448467194705*^9, 
   3.8024485254463463`*^9, {3.8024487856377563`*^9, 3.802448790341735*^9}, {
   3.802448853421043*^9, 3.802448901956293*^9}, {3.802448948057068*^9, 
   3.802448963766819*^9}, {3.802943944452791*^9, 3.802943971972423*^9}, 
   3.803739859639165*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"a08a071c-202b-4db7-b3ba-56a7dd8d57eb"],

Cell[BoxData["0.9190115289843338`"], "Output",
 CellChangeTimes->{
  3.802448320101042*^9, 3.8024484033781652`*^9, 3.802448467194705*^9, 
   3.8024485254463463`*^9, {3.8024487856377563`*^9, 3.802448790341735*^9}, {
   3.802448853421043*^9, 3.802448901956293*^9}, {3.802448948057068*^9, 
   3.802448963766819*^9}, {3.802943944452791*^9, 3.802943971972423*^9}, 
   3.803739859640936*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"65421e5c-b2d1-4fff-8f2e-6e4a6d298e73"],

Cell[BoxData[
 RowBox[{"-", "0.8838834764831843`"}]], "Output",
 CellChangeTimes->{
  3.802448320101042*^9, 3.8024484033781652`*^9, 3.802448467194705*^9, 
   3.8024485254463463`*^9, {3.8024487856377563`*^9, 3.802448790341735*^9}, {
   3.802448853421043*^9, 3.802448901956293*^9}, {3.802448948057068*^9, 
   3.802448963766819*^9}, {3.802943944452791*^9, 3.802943971972423*^9}, 
   3.803739859642592*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"ec7eac84-d55f-44dc-b1b7-4618ea497826"],

Cell[BoxData["0.18837955890579106`"], "Output",
 CellChangeTimes->{
  3.802448320101042*^9, 3.8024484033781652`*^9, 3.802448467194705*^9, 
   3.8024485254463463`*^9, {3.8024487856377563`*^9, 3.802448790341735*^9}, {
   3.802448853421043*^9, 3.802448901956293*^9}, {3.802448948057068*^9, 
   3.802448963766819*^9}, {3.802943944452791*^9, 3.802943971972423*^9}, 
   3.803739859644285*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"af942576-7629-4199-b200-6cd99c8873c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 24 (p.274)", "Subsection",
 CellChangeTimes->{{3.8028929891881037`*^9, 
  3.802892998177198*^9}},ExpressionUUID->"0282d6e7-e296-4459-9997-\
010c09daf598"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "1.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Pnorm", "[", 
  RowBox[{"Centre", "[", 
   RowBox[{"1.8", ",", "mu", ",", "sigma"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"x", "<", "1.8"}], ",", 
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"mu", ",", "sigma"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"np", " ", ">", " ", "5"}], " ", "="}], ">>", " ", 
    RowBox[{"Normale", " ", "approx", " ", "Bin"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu2", "=", 
   RowBox[{"n", " ", "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma2", "=", 
    RowBox[{"n", " ", "p", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Bin", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Bin", "[", 
      RowBox[{"n", ",", "p", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "19"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "approx", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Pnorm", "[", 
   RowBox[{"Centre", "[", 
    RowBox[{"19.5", ",", "mu2", ",", "sigma2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.802893010099395*^9, 3.8028930894982767`*^9}, {
  3.802893290339313*^9, 3.8028933043982153`*^9}, {3.8028933798647223`*^9, 
  3.802893414386607*^9}, {3.8028934771897993`*^9, 3.802893520885558*^9}, {
  3.802893594774456*^9, 3.802893622739633*^9}, {3.802893654216702*^9, 
  3.8028937449562407`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"783d8d0d-b00d-4090-a84c-4d4b08de44cf"],

Cell[BoxData["0.9087887802741321`"], "Output",
 CellChangeTimes->{
  3.8028930568686867`*^9, 3.802893304850381*^9, {3.8028934202813787`*^9, 
   3.802893427624516*^9}, {3.802893477553522*^9, 3.802893499381577*^9}, 
   3.8028936101350517`*^9, 3.8028937085070953`*^9, 3.803739860791114*^9, {
   3.8040689745127296`*^9, 3.8040689996959667`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"f8f35444-48e5-4c90-b838-8d5608966c23"],

Cell[BoxData["0.9087887802741321`"], "Output",
 CellChangeTimes->{
  3.8028930568686867`*^9, 3.802893304850381*^9, {3.8028934202813787`*^9, 
   3.802893427624516*^9}, {3.802893477553522*^9, 3.802893499381577*^9}, 
   3.8028936101350517`*^9, 3.8028937085070953`*^9, 3.803739860791114*^9, {
   3.8040689745127296`*^9, 3.804068999700286*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"b5dae536-9c22-4818-bd4b-5b94eb9bfcda"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.8028930568686867`*^9, 3.802893304850381*^9, {3.8028934202813787`*^9, 
   3.802893427624516*^9}, {3.802893477553522*^9, 3.802893499381577*^9}, 
   3.8028936101350517`*^9, 3.8028937085070953`*^9, 3.803739860791114*^9, {
   3.8040689745127296`*^9, 3.804068999703651*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"40e7f8c1-d3be-42e9-8106-6aa7abc8e6c3"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.8028930568686867`*^9, 3.802893304850381*^9, {3.8028934202813787`*^9, 
   3.802893427624516*^9}, {3.802893477553522*^9, 3.802893499381577*^9}, 
   3.8028936101350517`*^9, 3.8028937085070953`*^9, 3.803739860791114*^9, {
   3.8040689745127296`*^9, 3.804068999706004*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"c9634366-a1c0-4741-a072-675ec5cba253"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 25 (p.274)", "Subsection",
 CellChangeTimes->{{3.802260694483211*^9, 
  3.802260705066744*^9}},ExpressionUUID->"c12e5e60-9843-4c1e-a653-\
3871d27bd7db"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "150"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"95", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Bin", "[", 
     RowBox[{"n", " ", ",", 
      RowBox[{"1", "-", "p"}], ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Approximation", " ", "par", " ", "la", " ", "normale", " ", "avec", " ", 
    "correction"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"n", 
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", " ", "p", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Centre", "[", 
  RowBox[{"10.5", ",", "mu", ",", "sigma"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ",", 
   RowBox[{"Centre", "[", 
    RowBox[{"10.5", ",", "mu", ",", "sigma"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.802260871500997*^9, 3.802260928598283*^9}, {
  3.8022609599530077`*^9, 3.802261162652315*^9}, {3.802261220007368*^9, 
  3.8022612201245193`*^9}, {3.802261291510092*^9, 3.802261344119421*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"72f6fe01-3cec-49c3-b15f-2819f41667c7"],

Cell[BoxData["0.8677846258766052`"], "Output",
 CellChangeTimes->{{3.8022609011976433`*^9, 3.80226092910937*^9}, {
   3.802261083332232*^9, 3.802261163317411*^9}, 3.802261220555332*^9, {
   3.802261291867456*^9, 3.8022613294136133`*^9}, 3.802261360498371*^9, 
   3.802277510922515*^9, {3.802277613406177*^9, 3.802277635826075*^9}, 
   3.803739862122779*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"f046c6ed-2f80-4ea5-a03e-88e84ab425d4"],

Cell[BoxData["1.1239029738980328`"], "Output",
 CellChangeTimes->{{3.8022609011976433`*^9, 3.80226092910937*^9}, {
   3.802261083332232*^9, 3.802261163317411*^9}, 3.802261220555332*^9, {
   3.802261291867456*^9, 3.8022613294136133`*^9}, 3.802261360498371*^9, 
   3.802277510922515*^9, {3.802277613406177*^9, 3.802277635826075*^9}, 
   3.803739862125607*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"380615ee-3c1b-4eb2-b078-088656b3ab47"],

Cell[BoxData["0.8694729052101713`"], "Output",
 CellChangeTimes->{{3.8022609011976433`*^9, 3.80226092910937*^9}, {
   3.802261083332232*^9, 3.802261163317411*^9}, 3.802261220555332*^9, {
   3.802261291867456*^9, 3.8022613294136133`*^9}, 3.802261360498371*^9, 
   3.802277510922515*^9, {3.802277613406177*^9, 3.802277635826075*^9}, 
   3.803739862127265*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"710960e6-b117-4c6b-a943-c178a70a8bd0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 26 (p.274)", "Subsection",
 CellChangeTimes->{{3.802261716093297*^9, 
  3.8022617293940153`*^9}},ExpressionUUID->"1074145b-51b2-42b7-9d63-\
e3ef967569c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pnh", "=", 
   RowBox[{"55", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ph", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Approximation", " ", "par", " ", "normale"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"X", "\[GreaterEqual]", " ", "525"}], ")"}]}], "|", 
    "homogene"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muh", " ", "=", 
   RowBox[{"n", " ", "ph"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigmah", " ", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"n", " ", "ph", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "ph"}], ")"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"Centre", "[", 
      RowBox[{"524.5", ",", "muh", ",", "sigmah"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"X", "\[GreaterEqual]", " ", "525"}], ")"}]}], "|", 
    RowBox[{"pas", " ", "homogene"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"munh", " ", "=", 
   RowBox[{"n", " ", "pnh"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigmanh", " ", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"n", " ", "pnh", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "pnh"}], ")"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ",", 
   RowBox[{"Centre", "[", 
    RowBox[{"525.5", ",", "munh", ",", "sigmanh"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.802261732024129*^9, 3.802261778681443*^9}, {
  3.802261855689619*^9, 3.8022620246540403`*^9}, {3.802262182487358*^9, 
  3.802262286621146*^9}, {3.802262327259822*^9, 3.80226232736799*^9}, {
  3.8022623773043423`*^9, 3.802262384409473*^9}, {3.8022624168844023`*^9, 
  3.802262433912093*^9}},
 CellLabel->
  "In[526]:=",ExpressionUUID->"1dcf6aeb-5554-4a02-bf1d-9c19c4fd6099"],

Cell[BoxData["0.06062885772582072`"], "Output",
 CellChangeTimes->{{3.802261926899539*^9, 3.802261933058133*^9}, {
   3.802261974834099*^9, 3.8022619907566442`*^9}, {3.802262196094129*^9, 
   3.802262229515238*^9}, {3.802262279949297*^9, 3.8022622873048763`*^9}, 
   3.802262328108493*^9, {3.8022623780083857`*^9, 3.802262386030209*^9}, {
   3.802262426101873*^9, 3.802262434766115*^9}, 3.802277510984865*^9, {
   3.802277613457926*^9, 3.802277635890641*^9}, 3.803739863283464*^9, 
   3.8037401371741467`*^9},
 CellLabel->
  "Out[531]=",ExpressionUUID->"e3f97625-4abe-490b-903d-c34a3fe4826f"],

Cell[BoxData["0.059697000151446085`"], "Output",
 CellChangeTimes->{{3.802261926899539*^9, 3.802261933058133*^9}, {
   3.802261974834099*^9, 3.8022619907566442`*^9}, {3.802262196094129*^9, 
   3.802262229515238*^9}, {3.802262279949297*^9, 3.8022622873048763`*^9}, 
   3.802262328108493*^9, {3.8022623780083857`*^9, 3.802262386030209*^9}, {
   3.802262426101873*^9, 3.802262434766115*^9}, 3.802277510984865*^9, {
   3.802277613457926*^9, 3.802277635890641*^9}, 3.803739863283464*^9, 
   3.803740137176704*^9},
 CellLabel->
  "Out[534]=",ExpressionUUID->"f4e9a07c-e116-4a9b-8339-494b7a043303"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 29 (p.274)", "Subsection",
 CellChangeTimes->{{3.802943524962414*^9, 
  3.802943534613406*^9}},ExpressionUUID->"f6079685-e007-414e-8064-\
3c57f3e9ba7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.52"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", "1.012"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "0.990"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"u", "^", "x"}], " ", 
     RowBox[{"d", "^", 
      RowBox[{"(", 
       RowBox[{"1000", "-", "x"}], ")"}]}]}], "\[Equal]", "1.3"}], ",", "x", 
   ",", "Reals"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"1.3", "/", 
    RowBox[{
     RowBox[{"(", "d", ")"}], "^", "1000"}]}], "]"}], "/", 
  RowBox[{"Log", "[", 
   RowBox[{"u", " ", "/", 
    RowBox[{"(", "d", ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "470"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       RowBox[{"n", " ", "p"}], ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"n", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.802943536908681*^9, 3.802943605019515*^9}, {
  3.80294366086591*^9, 3.802943686092012*^9}, {3.8029437186198587`*^9, 
  3.802943749671311*^9}, {3.8037334498597*^9, 3.8037335037325163`*^9}, {
  3.803733552747102*^9, 3.80373355294036*^9}, {3.803733840236783*^9, 
  3.80373385131866*^9}, {3.8037339159115667`*^9, 3.803733988062273*^9}, {
  3.8037340373983793`*^9, 3.803734051180649*^9}, {3.8037341421649857`*^9, 
  3.803734164698742*^9}, {3.803734560018209*^9, 3.803734594883802*^9}, {
  3.803734632304038*^9, 3.803734650988697*^9}, {3.803739057569046*^9, 
  3.803739201524674*^9}, {3.804007715107326*^9, 3.804007717689081*^9}, {
  3.804008283341017*^9, 3.804008331961152*^9}, {3.804008372470378*^9, 
  3.804008382197824*^9}, {3.804008436191412*^9, 3.804008438005595*^9}, {
  3.804008884218926*^9, 3.8040088923580017`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"f6de4f89-b9c7-4f15-b16a-14d91aab2cdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "469.2089670301672`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.802943582932098*^9, 3.8029436864510612`*^9, 3.802943751427185*^9, 
   3.8037296490242*^9, 3.803733444719131*^9, {3.803733827596299*^9, 
   3.8037338518245907`*^9}, {3.803733924718985*^9, 3.803733928642939*^9}, {
   3.803733959800268*^9, 3.803733965776949*^9}, {3.8037340377879868`*^9, 
   3.803734051527323*^9}, {3.803734143197959*^9, 3.8037341689559793`*^9}, {
   3.803734561340954*^9, 3.80373460665228*^9}, 3.80373465161831*^9, {
   3.80373909359768*^9, 3.8037392019503603`*^9}, 3.803739864464696*^9, 
   3.804007399070788*^9, 3.8040083326795187`*^9, 3.804008383097501*^9, 
   3.804008438458981*^9, 3.804008893216803*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"9e5c7859-7a01-4586-9b98-439d7ecdc467"],

Cell[BoxData["469.20896703016547`"], "Output",
 CellChangeTimes->{
  3.802943582932098*^9, 3.8029436864510612`*^9, 3.802943751427185*^9, 
   3.8037296490242*^9, 3.803733444719131*^9, {3.803733827596299*^9, 
   3.8037338518245907`*^9}, {3.803733924718985*^9, 3.803733928642939*^9}, {
   3.803733959800268*^9, 3.803733965776949*^9}, {3.8037340377879868`*^9, 
   3.803734051527323*^9}, {3.803734143197959*^9, 3.8037341689559793`*^9}, {
   3.803734561340954*^9, 3.80373460665228*^9}, 3.80373465161831*^9, {
   3.80373909359768*^9, 3.8037392019503603`*^9}, 3.803739864464696*^9, 
   3.804007399070788*^9, 3.8040083326795187`*^9, 3.804008383097501*^9, 
   3.804008438458981*^9, 3.804008893219288*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"9e2659a2-89b6-4763-bb44-f3bcb117d116"],

Cell[BoxData["0.9992240801343625`"], "Output",
 CellChangeTimes->{
  3.802943582932098*^9, 3.8029436864510612`*^9, 3.802943751427185*^9, 
   3.8037296490242*^9, 3.803733444719131*^9, {3.803733827596299*^9, 
   3.8037338518245907`*^9}, {3.803733924718985*^9, 3.803733928642939*^9}, {
   3.803733959800268*^9, 3.803733965776949*^9}, {3.8037340377879868`*^9, 
   3.803734051527323*^9}, {3.803734143197959*^9, 3.8037341689559793`*^9}, {
   3.803734561340954*^9, 3.80373460665228*^9}, 3.80373465161831*^9, {
   3.80373909359768*^9, 3.8037392019503603`*^9}, 3.803739864464696*^9, 
   3.804007399070788*^9, 3.8040083326795187`*^9, 3.804008383097501*^9, 
   3.804008438458981*^9, 3.8040088932239656`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"d5144296-ccec-43eb-a2d6-537ed6cd6321"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 30 (p.274)", "Subsection",
 CellChangeTimes->{{3.803714483746928*^9, 3.8037144916822987`*^9}, {
  3.803716061808158*^9, 
  3.803716064313487*^9}},ExpressionUUID->"2257307d-99a9-4aba-9047-\
d48725e7d6ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "alpha", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu1", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu2", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma2", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"N", "@", 
   RowBox[{"Pnorm", "[", 
    RowBox[{"Centre", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"mu1", ",", "mu2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"sigma1", ",", "sigma2"}], "}"}]}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{"a", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"alpha", "=", 
  RowBox[{"alpha", "/.", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"alpha", " ", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"alpha", " ", 
           RowBox[{"a", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], " ", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "alpha"}], ")"}], 
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}]}], "\[Equal]", 
      RowBox[{"1", "/", "2"}]}], ",", "alpha"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", "alpha"}]}], "Input",
 CellChangeTimes->{{3.803714500145753*^9, 3.8037145038427134`*^9}, {
   3.80371454274445*^9, 3.80371465474623*^9}, 3.803714699660357*^9, {
   3.803715383644678*^9, 3.803715388675658*^9}, {3.803715890021456*^9, 
   3.80371599237079*^9}, {3.803716073582262*^9, 3.8037160744510517`*^9}, {
   3.803716112989872*^9, 3.803716115505801*^9}, {3.803716304747851*^9, 
   3.803716405860981*^9}, {3.803716500885661*^9, 3.803716527483494*^9}, 
   3.803716663069648*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"a67c3550-0d11-48b2-a2e2-b0b0eb235873"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6914624612740131`", ",", "0.36944134018176367`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.803714549709062*^9, {3.8037146189928226`*^9, 3.8037146231550922`*^9}, 
   3.803714655322907*^9, 3.803715389192564*^9, {3.8037159632249937`*^9, 
   3.803715992968749*^9}, 3.803716074896619*^9, 3.803716115929373*^9, {
   3.803716312002736*^9, 3.803716337205989*^9}, {3.803716368775247*^9, 
   3.803716406505269*^9}, {3.803716521812584*^9, 3.803716528231029*^9}, 
   3.803739866155583*^9, 3.803740122179949*^9, {3.804179003816441*^9, 
   3.804179017358057*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"1829db92-5900-410c-ac1d-efe208412555"],

Cell[BoxData["0.3482326481202298`"], "Output",
 CellChangeTimes->{
  3.803714549709062*^9, {3.8037146189928226`*^9, 3.8037146231550922`*^9}, 
   3.803714655322907*^9, 3.803715389192564*^9, {3.8037159632249937`*^9, 
   3.803715992968749*^9}, 3.803716074896619*^9, 3.803716115929373*^9, {
   3.803716312002736*^9, 3.803716337205989*^9}, {3.803716368775247*^9, 
   3.803716406505269*^9}, {3.803716521812584*^9, 3.803716528231029*^9}, 
   3.803739866155583*^9, 3.803740122179949*^9, {3.804179003816441*^9, 
   3.804179017360518*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"fd128e90-88af-43a1-9dfc-3b5d19b0549f"],

Cell[BoxData[
 RowBox[{"{", "0.6517673518797702`", "}"}]], "Output",
 CellChangeTimes->{
  3.803714549709062*^9, {3.8037146189928226`*^9, 3.8037146231550922`*^9}, 
   3.803714655322907*^9, 3.803715389192564*^9, {3.8037159632249937`*^9, 
   3.803715992968749*^9}, 3.803716074896619*^9, 3.803716115929373*^9, {
   3.803716312002736*^9, 3.803716337205989*^9}, {3.803716368775247*^9, 
   3.803716406505269*^9}, {3.803716521812584*^9, 3.803716528231029*^9}, 
   3.803739866155583*^9, 3.803740122179949*^9, {3.804179003816441*^9, 
   3.8041790174090223`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"e380f23e-492d-426b-a732-5548079b17df"],

Cell[BoxData[
 RowBox[{"{", "0.3482326481202298`", "}"}]], "Output",
 CellChangeTimes->{
  3.803714549709062*^9, {3.8037146189928226`*^9, 3.8037146231550922`*^9}, 
   3.803714655322907*^9, 3.803715389192564*^9, {3.8037159632249937`*^9, 
   3.803715992968749*^9}, 3.803716074896619*^9, 3.803716115929373*^9, {
   3.803716312002736*^9, 3.803716337205989*^9}, {3.803716368775247*^9, 
   3.803716406505269*^9}, {3.803716521812584*^9, 3.803716528231029*^9}, 
   3.803739866155583*^9, 3.803740122179949*^9, {3.804179003816441*^9, 
   3.804179017413472*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"796f2ee8-aff8-4eb7-a604-53e4ec96f956"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 34 (p.275)", "Subsection",
 CellChangeTimes->{{3.8028734059282513`*^9, 
  3.8028734452341537`*^9}},ExpressionUUID->"d4fda32e-2fd0-48c1-9def-\
df975bf2540b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lambda", " ", "=", " ", 
   RowBox[{"1", "/", "20"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"1", "-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Expo", "[", 
      RowBox[{"lambda", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"1", "-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Expo", "[", 
      RowBox[{"lambda", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.802873447469737*^9, 3.802873452985148*^9}, {
   3.802873513552865*^9, 3.802873550012189*^9}, 3.803716709958666*^9, {
   3.803716791439472*^9, 3.803716795300993*^9}, {3.8037169390127077`*^9, 
   3.8037169515110483`*^9}, {3.8037169907155333`*^9, 3.803716997239019*^9}, {
   3.803717060398085*^9, 3.803717069889378*^9}, {3.803717152602611*^9, 
   3.8037171845793858`*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"3a2f5479-f149-4300-a521-5202ba175951"],

Cell[BoxData[
 FractionBox["1", "\[ExponentialE]"]], "Output",
 CellChangeTimes->{{3.802873521267791*^9, 3.8028735505594463`*^9}, {
   3.8037167029043694`*^9, 3.803716712541703*^9}, 3.803716796173881*^9, {
   3.803716993307811*^9, 3.8037170027727947`*^9}, 3.803717070589679*^9, {
   3.8037171559347887`*^9, 3.8037171711400127`*^9}, 3.803739867432458*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"0c369fb3-4f7e-42a4-a0d7-0a53de27e1cc"],

Cell[BoxData["0.36787944117144233`"], "Output",
 CellChangeTimes->{{3.802873521267791*^9, 3.8028735505594463`*^9}, {
   3.8037167029043694`*^9, 3.803716712541703*^9}, 3.803716796173881*^9, {
   3.803716993307811*^9, 3.8037170027727947`*^9}, 3.803717070589679*^9, {
   3.8037171559347887`*^9, 3.8037171711400127`*^9}, 3.8037398674355993`*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"35941935-eaf9-40af-b11a-f3d8f907847c"],

Cell[BoxData[
 FractionBox["1", "\[ExponentialE]"]], "Output",
 CellChangeTimes->{{3.802873521267791*^9, 3.8028735505594463`*^9}, {
   3.8037167029043694`*^9, 3.803716712541703*^9}, 3.803716796173881*^9, {
   3.803716993307811*^9, 3.8037170027727947`*^9}, 3.803717070589679*^9, {
   3.8037171559347887`*^9, 3.8037171711400127`*^9}, 3.80373986743874*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"6427691d-054b-4aa2-929a-e0139fac8359"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 36 (p.275)", "Subsection",
 CellChangeTimes->{{3.802891193323625*^9, 
  3.802891211788905*^9}},ExpressionUUID->"285c0817-396d-4f09-885f-\
44f6810ae505"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "t_", "]"}], ":=", 
    RowBox[{"t", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], 
    ")"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"14", "/", "10"}]}], "}"}]}], "]"}]}], "]"}]}], ")"}], "-", 
  
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"4", "/", "10"}]}], "}"}]}], "]"}]}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "]"}], ")"}], 
  "/", 
  RowBox[{"(", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8028912164058943`*^9, 3.802891226471088*^9}, {
  3.802891362780294*^9, 3.802891373097382*^9}, {3.80289163695999*^9, 
  3.802891780056559*^9}, {3.802891829889844*^9, 3.8028918848718*^9}, {
  3.802892039407888*^9, 3.8028920426939793`*^9}, {3.802892112811406*^9, 
  3.8028921491411448`*^9}, {3.802892287698976*^9, 3.802892358784936*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"eb1f560d-94ee-46a1-be95-211ed43849eb"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", "4"]]], "Output",
 CellChangeTimes->{
  3.802891685145185*^9, {3.802891751844351*^9, 3.8028917805872107`*^9}, {
   3.8028918391630373`*^9, 3.802891860517983*^9}, {3.802892144274561*^9, 
   3.802892149570674*^9}, {3.8028922882108*^9, 3.802892294070157*^9}, {
   3.802892344178196*^9, 3.802892359440073*^9}, 3.803739868556993*^9},
 CellLabel->
  "Out[398]=",ExpressionUUID->"a7fc497c-dd0a-4744-aa4a-8cb7e29e3511"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2401", "/", "2500"}]]]}], "+", 
  FractionBox["1", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"4", "/", "625"}]]]}]], "Output",
 CellChangeTimes->{
  3.802891685145185*^9, {3.802891751844351*^9, 3.8028917805872107`*^9}, {
   3.8028918391630373`*^9, 3.802891860517983*^9}, {3.802892144274561*^9, 
   3.802892149570674*^9}, {3.8028922882108*^9, 3.802892294070157*^9}, {
   3.802892344178196*^9, 3.802892359440073*^9}, 3.8037398685591908`*^9},
 CellLabel->
  "Out[399]=",ExpressionUUID->"b406d25b-1993-4c8a-a43f-5502aef7577c"],

Cell[BoxData["0.61088067693108`"], "Output",
 CellChangeTimes->{
  3.802891685145185*^9, {3.802891751844351*^9, 3.8028917805872107`*^9}, {
   3.8028918391630373`*^9, 3.802891860517983*^9}, {3.802892144274561*^9, 
   3.802892149570674*^9}, {3.8028922882108*^9, 3.802892294070157*^9}, {
   3.802892344178196*^9, 3.802892359440073*^9}, 3.803739868561191*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"3de3435b-768b-4ab6-8c45-09504ccbbb32"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"15", "/", "4"}]]]], "Output",
 CellChangeTimes->{
  3.802891685145185*^9, {3.802891751844351*^9, 3.8028917805872107`*^9}, {
   3.8028918391630373`*^9, 3.802891860517983*^9}, {3.802892144274561*^9, 
   3.802892149570674*^9}, {3.8028922882108*^9, 3.802892294070157*^9}, {
   3.802892344178196*^9, 3.802892359440073*^9}, 3.803739868563202*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"f626a82d-a5c2-4867-9c11-171df3fdf384"],

Cell[BoxData["0.023517745856009107`"], "Output",
 CellChangeTimes->{
  3.802891685145185*^9, {3.802891751844351*^9, 3.8028917805872107`*^9}, {
   3.8028918391630373`*^9, 3.802891860517983*^9}, {3.802892144274561*^9, 
   3.802892149570674*^9}, {3.8028922882108*^9, 3.802892294070157*^9}, {
   3.802892344178196*^9, 3.802892359440073*^9}, 3.8037398685650997`*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"341a39c7-7844-4bf9-b4fa-06d5fc9f858f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 38 (p.276)", "Subsection",
 CellChangeTimes->{{3.802266697308557*^9, 
  3.8022667104800177`*^9}},ExpressionUUID->"784369cb-145a-45ef-8e09-\
5282829d3a96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "Y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"A", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{"x", "^", "2"}]}], " ", "+", 
      RowBox[{"4", "x", " ", "Y"}], " ", "+", "Y", "+", "2"}], "\[Equal]", 
     "0"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"x1", "=", 
  RowBox[{"x", "/.", 
   RowBox[{"A", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"x2", "=", 
  RowBox[{"x", "/.", 
   RowBox[{"A", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "-", "Y", "+", 
          RowBox[{"Y", "^", "2"}]}], ">=", "0"}], "&&", 
        RowBox[{"0", "\[LessEqual]", "Y", "\[LessEqual]", "5"}]}], ",", "Y", 
       ",", "Integers"}], "]"}]}], "-", "1"}], ")"}], "/", "5"}]}], "Input",
 CellChangeTimes->{{3.802266875898458*^9, 3.802267050723456*^9}, {
  3.802267133050694*^9, 3.80226741430947*^9}, {3.802267529357912*^9, 
  3.802267544277644*^9}, {3.802267606069594*^9, 3.802267613640257*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"e8784c8f-b198-4ac0-b1a3-3ff0f8d5e5dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "Y"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "-", "Y", "+", 
          SuperscriptBox["Y", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "Y"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "-", "Y", "+", 
          SuperscriptBox["Y", "2"]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.80226690926226*^9, 3.802266954879652*^9}, {
   3.8022669935998487`*^9, 3.802267002099382*^9}, {3.802267037122739*^9, 
   3.802267050927538*^9}, {3.8022671454626102`*^9, 3.802267414694624*^9}, {
   3.802267531659243*^9, 3.80226754470676*^9}, {3.802267606380794*^9, 
   3.80226761403687*^9}, 3.8022775110456533`*^9, {3.802277613494364*^9, 
   3.802277635955839*^9}, 3.8037398697953053`*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"52e64961-e2a9-4440-b037-b264fc320eed"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "Y"}], "-", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "2"}], "-", "Y", "+", 
      SuperscriptBox["Y", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.80226690926226*^9, 3.802266954879652*^9}, {
   3.8022669935998487`*^9, 3.802267002099382*^9}, {3.802267037122739*^9, 
   3.802267050927538*^9}, {3.8022671454626102`*^9, 3.802267414694624*^9}, {
   3.802267531659243*^9, 3.80226754470676*^9}, {3.802267606380794*^9, 
   3.80226761403687*^9}, 3.8022775110456533`*^9, {3.802277613494364*^9, 
   3.802277635955839*^9}, 3.803739869797864*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"acdfe66a-d4cd-48f8-9f21-47f549f97a44"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "Y"}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "2"}], "-", "Y", "+", 
      SuperscriptBox["Y", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.80226690926226*^9, 3.802266954879652*^9}, {
   3.8022669935998487`*^9, 3.802267002099382*^9}, {3.802267037122739*^9, 
   3.802267050927538*^9}, {3.8022671454626102`*^9, 3.802267414694624*^9}, {
   3.802267531659243*^9, 3.80226754470676*^9}, {3.802267606380794*^9, 
   3.80226761403687*^9}, 3.8022775110456533`*^9, {3.802277613494364*^9, 
   3.802277635955839*^9}, 3.803739869799844*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"c9c2acfd-fde2-4fdf-9029-116305be0f47"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{{3.80226690926226*^9, 3.802266954879652*^9}, {
   3.8022669935998487`*^9, 3.802267002099382*^9}, {3.802267037122739*^9, 
   3.802267050927538*^9}, {3.8022671454626102`*^9, 3.802267414694624*^9}, {
   3.802267531659243*^9, 3.80226754470676*^9}, {3.802267606380794*^9, 
   3.80226761403687*^9}, 3.8022775110456533`*^9, {3.802277613494364*^9, 
   3.802277635955839*^9}, 3.803739869801796*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"67876dc2-e0c4-4dff-8901-0440cb39230b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Auto-\[CapitalEAcute]valuation", "Section",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.802022352848527*^9, 3.802022371807755*^9}, {
  3.8020224298237534`*^9, 
  3.802022433812134*^9}},ExpressionUUID->"3efc99ce-621c-48ad-a778-\
ee675ef6499b"],

Cell[CellGroupData[{

Cell["Exercice 4 (p.281)", "Subsection",
 CellChangeTimes->{{3.802944263452567*^9, 
  3.80294427217347*^9}},ExpressionUUID->"8c05df1a-f034-4051-9d76-\
e72554cbf0e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"x", "^", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[Equal]", "1"}],
      " ", "&&", " ", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"f", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[Equal]", 
      RowBox[{"6", "/", "10"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "/.", 
    RowBox[{"%", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"u", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"u", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "a"}], ",", 
      RowBox[{"b", "=", "b"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "a"}], ",", 
      RowBox[{"b", "=", "b"}]}], "}"}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", 
       RowBox[{"f", "[", "x", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6", "/", "10"}], ")"}], "^", "2"}]}]}], "Input",
 CellChangeTimes->{{3.802944273867549*^9, 3.802944530949019*^9}, {
  3.802944627909418*^9, 3.802944680348081*^9}, {3.8029448063478928`*^9, 
  3.802944808898286*^9}, {3.8029448406479387`*^9, 3.802944938131083*^9}},
 CellLabel->
  "In[535]:=",ExpressionUUID->"f59a386e-f1be-4eff-89ac-c5be4451106b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     FractionBox["18", "5"]}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["12", "5"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8029443351375513`*^9, 3.8029443423074408`*^9}, {
   3.802944379074663*^9, 3.802944443894813*^9}, 3.802944531850374*^9, {
   3.802944649260607*^9, 3.802944674549037*^9}, 3.802944809614717*^9, {
   3.802944909043425*^9, 3.802944938828794*^9}, 3.8037398716354303`*^9, 
   3.803740142375207*^9},
 CellLabel->
  "Out[537]=",ExpressionUUID->"c72cf39d-7b66-45f3-b024-36385d6fd2f0"],

Cell[BoxData[
 FractionBox["7", "20"]], "Output",
 CellChangeTimes->{{3.8029443351375513`*^9, 3.8029443423074408`*^9}, {
   3.802944379074663*^9, 3.802944443894813*^9}, 3.802944531850374*^9, {
   3.802944649260607*^9, 3.802944674549037*^9}, 3.802944809614717*^9, {
   3.802944909043425*^9, 3.802944938828794*^9}, 3.8037398716354303`*^9, 
   3.8037401423776817`*^9},
 CellLabel->
  "Out[541]=",ExpressionUUID->"946f5991-dbd6-4e51-8eb9-49927352dbf1"],

Cell[BoxData[
 FractionBox["3", "50"]], "Output",
 CellChangeTimes->{{3.8029443351375513`*^9, 3.8029443423074408`*^9}, {
   3.802944379074663*^9, 3.802944443894813*^9}, 3.802944531850374*^9, {
   3.802944649260607*^9, 3.802944674549037*^9}, 3.802944809614717*^9, {
   3.802944909043425*^9, 3.802944938828794*^9}, 3.8037398716354303`*^9, 
   3.803740142379726*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"bca8f1b8-d3fc-4723-bd58-efc4d261e80b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 11 (p.283)", "Subsection",
 CellChangeTimes->{{3.802117548295556*^9, 3.8021175532952538`*^9}, {
  3.802117611675263*^9, 
  3.8021176132173967`*^9}},ExpressionUUID->"41345736-da21-4a22-a3d0-\
409a2988d53d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Centre", "[", 
   RowBox[{"44", ",", "40.2", ",", "8.4"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", "%"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"7", ",", "3"}], "]"}], 
  RowBox[{"%", "^", "3"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "%"}], ")"}], "^", "4"}]}]}], "Input",
 CellChangeTimes->{{3.802117191733378*^9, 3.802117218709918*^9}, {
  3.802117277847076*^9, 3.802117278042255*^9}, {3.802117649000433*^9, 
  3.8021176644083242`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"d14284a3-7321-4857-b4c1-c49c272021f0"],

Cell[BoxData["0.32549728326025984`"], "Output",
 CellChangeTimes->{{3.802117665005365*^9, 3.802117674903624*^9}, 
   3.8022775111129017`*^9, {3.802277613534844*^9, 3.80227763602556*^9}, 
   3.8037398729111567`*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"86156458-da5e-470f-97a4-d938409a507b"],

Cell[BoxData["0.24983021497782573`"], "Output",
 CellChangeTimes->{{3.802117665005365*^9, 3.802117674903624*^9}, 
   3.8022775111129017`*^9, {3.802277613534844*^9, 3.80227763602556*^9}, 
   3.803739872913187*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"87155265-16aa-48c2-b36a-8565492fe2d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 15 (p.283)", "Subsection",
 CellChangeTimes->{{3.802949461216292*^9, 
  3.802949473069253*^9}},ExpressionUUID->"4711533d-d8f3-4f64-a8b7-\
52b60ec26dec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "t_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2", ",", 
         RowBox[{"0", "<", "t", "<", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.2", "+", 
          RowBox[{"0.3", 
           RowBox[{"(", 
            RowBox[{"t", "-", "2"}], ")"}]}]}], ",", 
         RowBox[{"2", "\[LessEqual]", "t", "<", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", 
         RowBox[{"t", ">", "5"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"1", "-", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], "]"}]}], 
     ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "6", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], ")"}], 
  "/", "A"}]}], "Input",
 CellChangeTimes->{{3.802949475145822*^9, 3.802949581994072*^9}, {
  3.802949629724639*^9, 3.80294963455796*^9}, {3.802949897187323*^9, 
  3.802949909656026*^9}, {3.8029501805973167`*^9, 3.80295020164266*^9}, {
  3.80295051017303*^9, 3.8029505308406773`*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"a6fb321c-e5a7-40c9-b173-3adfde349ad6"],

Cell[BoxData["0.03174563637806793`"], "Output",
 CellChangeTimes->{{3.8029505155063257`*^9, 3.802950542781397*^9}, 
   3.803739874169415*^9, 3.803740145436861*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"12898184-478e-47b0-9488-9b4f9deb3d78"],

Cell[BoxData["28.010049351286103`"], "Output",
 CellChangeTimes->{{3.8029505155063257`*^9, 3.802950542781397*^9}, 
   3.803739874169415*^9, 3.80374014545802*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"ced98185-9ea8-4da0-8daa-74bcd0f190d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 6", "Chapter",
 CellChangeTimes->{{3.803112980294894*^9, 3.8031129823986464`*^9}, {
  3.803113360389574*^9, 
  3.803113365109597*^9}},ExpressionUUID->"3531efc3-2932-418e-acf9-\
f684c8c2e5b2"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.803113376703946*^9, 
  3.803113380111492*^9}},ExpressionUUID->"0d4a2d2e-00ec-48ef-a155-\
7152fbd1a4af"],

Cell[CellGroupData[{

Cell["Exercice 8 (p.340)", "Subsection",
 CellChangeTimes->{{3.803113389961688*^9, 3.803113393449573*^9}, {
  3.803140236839159*^9, 
  3.8031402499662323`*^9}},ExpressionUUID->"b492336d-8a1a-4f70-af9d-\
623bae09e9ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "A", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"c", ",", "a", ",", "x", ",", "y"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"c", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"y", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], ")"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "y"}], ",", "y"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"c", "=", 
    RowBox[{"c", "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "1"}], ",", "c"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "B", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"f_x", "[", "x", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"fx", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"Abs", "[", "x", "]"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"f_y", "[", "y", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "y"}], ",", "y"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", "C", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", "fx"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.803113397989888*^9, 3.803113496652463*^9}, {
   3.803113588257481*^9, 3.803113618756304*^9}, 3.803113871040844*^9, {
   3.8031140284202423`*^9, 3.803114046949897*^9}, {3.803114946826872*^9, 
   3.8031149907311993`*^9}, {3.803115265667551*^9, 3.803115266676262*^9}, {
   3.803115351706925*^9, 3.803115462990921*^9}, {3.803115501794203*^9, 
   3.80311552740237*^9}, {3.8031155970257072`*^9, 3.803115751462682*^9}, {
   3.803116552232583*^9, 3.8031165578441477`*^9}, {3.803139908458927*^9, 
   3.803139925743306*^9}, {3.803139988240821*^9, 3.8031401364187117`*^9}, {
   3.803140197599751*^9, 3.8031402132418118`*^9}, {3.8031402634260607`*^9, 
   3.8031402727382097`*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"0d4f0bfb-4875-40dd-b747-8b88bb70c697"],

Cell[BoxData[
 FractionBox["1", "8"]], "Output",
 CellChangeTimes->{
  3.8031134664283733`*^9, 3.803113497723588*^9, {3.80311358979154*^9, 
   3.803113619642407*^9}, {3.803114045154552*^9, 3.803114047761352*^9}, 
   3.8031149918474207`*^9, 3.80311526752814*^9, {3.803115355710579*^9, 
   3.803115365911742*^9}, {3.80311545308449*^9, 3.803115464128871*^9}, {
   3.8031155046466637`*^9, 3.803115528552191*^9}, 3.803115573436777*^9, {
   3.8031156186899*^9, 3.803115752553886*^9}, {3.8031165530161037`*^9, 
   3.803116559469767*^9}, 3.803139922101165*^9, 3.803140019452631*^9, 
   3.803140065890712*^9, {3.803140100438196*^9, 3.8031401282316847`*^9}, 
   3.803140214237954*^9, {3.8031402662855186`*^9, 3.80314028331843*^9}, 
   3.803739875893578*^9, 3.80374014764216*^9},
 CellLabel->
  "Out[549]=",ExpressionUUID->"42a305a5-a1a4-4c82-b504-4bee83dea97c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"Abs", "[", "x", "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Abs", "[", "x", "]"}]}], "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "x", "]"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.8031134664283733`*^9, 3.803113497723588*^9, {3.80311358979154*^9, 
   3.803113619642407*^9}, {3.803114045154552*^9, 3.803114047761352*^9}, 
   3.8031149918474207`*^9, 3.80311526752814*^9, {3.803115355710579*^9, 
   3.803115365911742*^9}, {3.80311545308449*^9, 3.803115464128871*^9}, {
   3.8031155046466637`*^9, 3.803115528552191*^9}, 3.803115573436777*^9, {
   3.8031156186899*^9, 3.803115752553886*^9}, {3.8031165530161037`*^9, 
   3.803116559469767*^9}, 3.803139922101165*^9, 3.803140019452631*^9, 
   3.803140065890712*^9, {3.803140100438196*^9, 3.8031401282316847`*^9}, 
   3.803140214237954*^9, {3.8031402662855186`*^9, 3.80314028331843*^9}, 
   3.803739875893578*^9, 3.80374014831631*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"b0a9c079-d879-46d4-9422-bb68e4abfdd4"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "y"}]], " ", 
  SuperscriptBox["y", "3"]}]], "Output",
 CellChangeTimes->{
  3.8031134664283733`*^9, 3.803113497723588*^9, {3.80311358979154*^9, 
   3.803113619642407*^9}, {3.803114045154552*^9, 3.803114047761352*^9}, 
   3.8031149918474207`*^9, 3.80311526752814*^9, {3.803115355710579*^9, 
   3.803115365911742*^9}, {3.80311545308449*^9, 3.803115464128871*^9}, {
   3.8031155046466637`*^9, 3.803115528552191*^9}, 3.803115573436777*^9, {
   3.8031156186899*^9, 3.803115752553886*^9}, {3.8031165530161037`*^9, 
   3.803116559469767*^9}, 3.803139922101165*^9, 3.803140019452631*^9, 
   3.803140065890712*^9, {3.803140100438196*^9, 3.8031401282316847`*^9}, 
   3.803140214237954*^9, {3.8031402662855186`*^9, 3.80314028331843*^9}, 
   3.803739875893578*^9, 3.803740148340373*^9},
 CellLabel->
  "Out[551]=",ExpressionUUID->"e327c3ac-2c45-4810-b572-60d0506c19fa"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8031134664283733`*^9, 3.803113497723588*^9, {3.80311358979154*^9, 
   3.803113619642407*^9}, {3.803114045154552*^9, 3.803114047761352*^9}, 
   3.8031149918474207`*^9, 3.80311526752814*^9, {3.803115355710579*^9, 
   3.803115365911742*^9}, {3.80311545308449*^9, 3.803115464128871*^9}, {
   3.8031155046466637`*^9, 3.803115528552191*^9}, 3.803115573436777*^9, {
   3.8031156186899*^9, 3.803115752553886*^9}, {3.8031165530161037`*^9, 
   3.803116559469767*^9}, 3.803139922101165*^9, 3.803140019452631*^9, 
   3.803140065890712*^9, {3.803140100438196*^9, 3.8031401282316847`*^9}, 
   3.803140214237954*^9, {3.8031402662855186`*^9, 3.80314028331843*^9}, 
   3.803739875893578*^9, 3.803740148582604*^9},
 CellLabel->
  "Out[552]=",ExpressionUUID->"c6eeb58a-8cd0-473e-892f-fd625df2f073"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 9 (p.340)", "Subsection",
 CellChangeTimes->{{3.803367940406143*^9, 
  3.803367953053587*^9}},ExpressionUUID->"1556867a-071f-4952-884d-\
1916e654700b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "/", "7"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"y", "/", "2"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fX", "[", "x_", "]"}], ":=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fY", "[", "y_", "]"}], ":=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fY", "[", "y", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Pas", " ", "independant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fX", "[", "x", "]"}], 
    RowBox[{"fY", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"x", ">", "y"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"x", "<", "y"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "x", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "D", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"A", " ", "inter", " ", "B"}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"1", "/", "2"}], ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/", 
   RowBox[{"(", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"fX", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], ")"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "E", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"fX", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "F", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"y", " ", 
    RowBox[{"fY", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803367957310191*^9, 3.80336813605052*^9}, {
  3.803368170496352*^9, 3.803368208225069*^9}, {3.8033682430509853`*^9, 
  3.803368389729722*^9}, {3.8033684217796507`*^9, 3.803368500392652*^9}, {
  3.803368538267603*^9, 3.803368548833638*^9}, {3.803368658090715*^9, 
  3.80336867218666*^9}, {3.803368712553302*^9, 3.803368737176551*^9}, {
  3.803368877706728*^9, 3.803368916052245*^9}, {3.8033689699427*^9, 
  3.8033690969774523`*^9}, {3.803369231786477*^9, 3.803369233563048*^9}, {
  3.803369269766371*^9, 3.803369271291439*^9}, {3.803369314918394*^9, 
  3.803369322235141*^9}, {3.803369396163599*^9, 3.803369435417404*^9}, {
  3.8033694941254396`*^9, 3.8033695565146923`*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"2b90e9b9-42b3-42b2-a95e-64b43f568b9f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.803740150416925*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"be11a8a4-a6fc-40a5-9f12-52271c6eadf1"],

Cell[BoxData[
 RowBox[{
  FractionBox["6", "7"], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.803740150420581*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"a5b6e79a-109e-4cee-a52b-24f68c5702d7"],

Cell[BoxData[
 FractionBox["15", "56"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.8037401504481573`*^9},
 CellLabel->
  "Out[560]=",ExpressionUUID->"c234c61e-3b99-4e5c-bbc5-a4a2a91708c0"],

Cell[BoxData[
 FractionBox["41", "56"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.8037401504513273`*^9},
 CellLabel->
  "Out[561]=",ExpressionUUID->"3baa90b3-7ecd-40fb-b459-8e56344774b1"],

Cell[BoxData[
 FractionBox["69", "448"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.803740150454113*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"0d8fbbff-9629-477e-8e63-5337e937f986"],

Cell[BoxData[
 FractionBox["69", "80"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.80374015047581*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"d3e68543-7906-4601-b1f1-8687a626ebb8"],

Cell[BoxData[
 FractionBox["5", "7"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.8037401504785547`*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"6925b04a-33a4-4939-b67d-ff16bcf3405b"],

Cell[BoxData[
 FractionBox["8", "7"]], "Output",
 CellChangeTimes->{{3.8033680615240583`*^9, 3.803368081280594*^9}, {
   3.80336812953827*^9, 3.803368136398473*^9}, {3.803368171796955*^9, 
   3.803368184447299*^9}, 3.803368291020527*^9, 3.803368322203685*^9, {
   3.803368357077033*^9, 3.8033683657195*^9}, 3.8033685014331837`*^9, 
   3.803368660150634*^9, {3.8033688875745373`*^9, 3.803368917166507*^9}, 
   3.803369030825994*^9, 3.803369097377316*^9, 3.80336923436445*^9, 
   3.803369274498435*^9, 3.80336932297799*^9, {3.8033693931766033`*^9, 
   3.803369421169276*^9}, 3.8033695571668377`*^9, 3.803739889121233*^9, 
   3.80374015048114*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"c1cc0436-e571-4c01-8179-d123d482282c"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 10 (p.340)", "Subsection",
 CellChangeTimes->{{3.803140630734351*^9, 
  3.803140693637988*^9}},ExpressionUUID->"7a089989-3864-4cb3-a99f-\
97c64b089870"],

Cell[CellGroupData[{

Cell["Exercice 11 (p.341)", "Subsection",
 CellChangeTimes->{{3.803647953335938*^9, 
  3.803647963653339*^9}},ExpressionUUID->"c53c2c36-a4a0-4484-bb45-\
6a0efd818da7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"45", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"15", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"40", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Multinomial", "[", 
   RowBox[{"2", ",", "1", ",", "2"}], "]"}], 
  RowBox[{"p1", "^", "2"}], " ", "p2", " ", 
  RowBox[{"p3", "^", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.803648307235855*^9, 3.80364839908679*^9}, 
   3.80365189323886*^9, {3.8036520257542133`*^9, 3.8036520421934*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"bd37e135-97be-4637-944d-240af58e216b"],

Cell[BoxData[
 FractionBox["729", "5000"]], "Output",
 CellChangeTimes->{{3.8036483690902433`*^9, 3.803648374572728*^9}, 
   3.803651895108672*^9, 3.803652042611745*^9, 3.80373989536122*^9, 
   3.803740152697179*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"2b134062-67f8-48ed-b151-fde1184b52b5"],

Cell[BoxData["0.1458`"], "Output",
 CellChangeTimes->{{3.8036483690902433`*^9, 3.803648374572728*^9}, 
   3.803651895108672*^9, 3.803652042611745*^9, 3.80373989536122*^9, 
   3.803740152699257*^9},
 CellLabel->
  "Out[570]=",ExpressionUUID->"ffdfd6b6-ab42-43fc-88e9-dc355b910473"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 18 (p.342)", "Subsection",
 CellChangeTimes->{{3.8033698207032347`*^9, 
  3.8033698369037533`*^9}},ExpressionUUID->"a6083061-5f55-4180-a5fd-\
2ab0c71828ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "l"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "-", "x"}], ">", 
    RowBox[{"1", "/", "3"}]}], ",", 
   RowBox[{"ProductDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8032835584089527`*^9, 3.803283568181959*^9}, 
   3.80336985349559*^9, {3.803373344757894*^9, 3.803373487582617*^9}, {
   3.80337355220892*^9, 3.8033735588462143`*^9}, {3.8033736056453037`*^9, 
   3.8033736224217377`*^9}, {3.803373677461285*^9, 3.8033737135739307`*^9}, {
   3.803740158569442*^9, 3.80374015916451*^9}},
 CellLabel->
  "In[575]:=",ExpressionUUID->"2047f7a0-6282-40c5-a5c2-1e53185021e7"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "x"}], "+", "y"}], ">", 
    FractionBox["1", "3"]}], ",", 
   RowBox[{"ProductDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Distributed]", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["1", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "1"}], "}"}]}], "}"}], "]"}]}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{
  3.803373714029394*^9, 3.803739896584734*^9, {3.803740154333508*^9, 
   3.803740160055735*^9}},
 CellLabel->
  "Out[577]=",ExpressionUUID->"d5ba24a9-474d-48bd-8387-4cfc931a3f0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 19 (p.342)", "Subsection",
 CellChangeTimes->{{3.8034813940293837`*^9, 
  3.803481406474852*^9}},ExpressionUUID->"dd062057-cb17-443b-a77c-\
8529e60eadfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"f", ",", "fX", ",", "fY"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"1", "/", "x"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fY", "[", "y_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"0", "<", "y", "<", "x", "<", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fY", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fX", "[", "x_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "x"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"0", "<", "y", "<", "x", "<", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fX", "[", "x", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espX", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"fX", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"0", "<", "y", "<", "x", "<", "1"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "D", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"espY", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"y", " ", 
     RowBox[{"fY", "[", "y", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"0", "<", "y", "<", "x", "<", "1"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.803481411192871*^9, 3.8034815643239927`*^9}, {
   3.8034816223925133`*^9, 3.80348175788533*^9}, {3.803481830117303*^9, 
   3.803481873301971*^9}, 3.8034829457346697`*^9},
 CellLabel->
  "In[586]:=",ExpressionUUID->"adfc102d-a05b-4aee-b3e8-5d0895c53e63"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Log", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{
  3.8037398979274282`*^9, {3.8037401753869877`*^9, 3.803740188352703*^9}},
 CellLabel->
  "Out[589]=",ExpressionUUID->"c9c8dc27-9b8b-4652-9f29-dfb2950f48b2"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.8037398979274282`*^9, {3.8037401753869877`*^9, 3.8037401883551807`*^9}},
 CellLabel->
  "Out[591]=",ExpressionUUID->"cff91018-9e23-49f0-b560-f6b72aed4c0b"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.8037398979274282`*^9, {3.8037401753869877`*^9, 3.803740188357683*^9}},
 CellLabel->
  "Out[592]=",ExpressionUUID->"13ee53b1-c331-4b5c-9fc1-15c9fc18af8f"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.8037398979274282`*^9, {3.8037401753869877`*^9, 3.803740188723192*^9}},
 CellLabel->
  "Out[593]=",ExpressionUUID->"9ac78093-5cf8-4409-804a-15c1ce2f2c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<int -ylog(y) over y\>\"", ",", "\n", " ", 
   RowBox[{"PodStates", " ", "->", " ", 
    RowBox[{
    "{", "\"\<IndefiniteIntegral__Step-by-step solution\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803482734559683*^9, 3.803482777814404*^9}, {
  3.803482818528442*^9, 3.803482838430109*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"e796b7ee-4df4-4fb2-b18f-9df4510ed4b0"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "int -ylog(y) over y", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"IndefiniteIntegral__Step-by-step solution"}},
    Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[-(y Log[y]), y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", 
                    RowBox[{"log", "(", "y", ")"}]}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox["1", "4"], " ", 
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "y"}], " ", 
                    RowBox[{"log", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"-", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"y", " ", 
                    RowBox[{"log", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{"y", " ", 
                    RowBox[{"log", "(", "y", ")"}]}], "\",\"", "\" \""}, 
                    "RowDefault"], "\"integrate \"", "\"by \"", "\"parts, \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{"f", 
                    RowBox[{"\[DifferentialD]", "g"}]}]}], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"f", " ", "g"}], "-", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"g", 
                    RowBox[{"\[DifferentialD]", "f"}]}]}]}]}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"where \"", "\"\\n \"", 
                    TemplateBox[{
                    RowBox[{"f", "\[LongEqual]", 
                    RowBox[{"log", "(", "y", ")"}]}], "\",\"", "\" \"", 
                    "\" \"", "\" \"", "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "g"}], "\[LongEqual]", "y"}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    RowBox[{"\[DifferentialD]", "y"}], "\",\"", "\"\\n\"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "f"}], "\[LongEqual]", 
                    FractionBox["1", "y"]}], "\"\[ThinSpace]\""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "y"}]}, "RowDefault"], 
                    "\",\"", "\" \"", "\" \"", "\" \"", "\" \"", "\" \""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"g", "\[LongEqual]", 
                    FractionBox[
                    SuperscriptBox["y", "2"], "2"]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"log", "(", "y", ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{"y", 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{"y", "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["y", "2"], "2"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["y", "2"], "4"], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Which \"", "\"is \"", "\"equal \"", "\"to:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of the integral", "scanner" -> "Integral", "id" -> 
     "Plot", "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(y^2 (1 - 2 Log[y]))/4, {y, -3, 3}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max2070$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min2069$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2070$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1469850$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min2069$\
1469855$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2070$1469856$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max2070$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min2069$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1469850$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2069$\
1469855$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2070$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2070$\
1469856$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$1468695[
                    
                    Plot[{
                    
                    Re[(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y])], 
                    
                    Im[(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y])]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y]), {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$], 
                    (
                    Piecewise[{{
                    0. + 3.2071349029490923` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    3.2071349029490923` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$], \
-3.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2070$$]], \

                    (Piecewise[{{
                    0. + 3.2071349029490923` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    3.2071349029490923` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2070$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$ + 
                    0.006, CalculateUtilities`GraphicsUtilities`Private`\
max2070$$]], 3.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Automatic, Automatic}, LabelStyle -> {}, 
                    Ticks -> Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["y", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2069$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2070$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, $CellContext`UnitNumberForm, 
                    NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$1468695]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1468695[
                    
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1468695[
                    
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/APkPiMGEyML0hAB2PSgJKU7/\
XiS2rh2sF2tsGfB5/dJM3aVYrpAE3ph1N9aR7fPffc9R4dyijt93o9fdmaD5LT9BqeHlozlLNcFoK+\
O8kVaM2kSC/hs5vWxGB2gZMfQL3vqjXvpZoR48+\
v8H3Ck4ITA18N48ww0JM9RfIpS3TtGSl2ZH8y4TIhnP2Ex1vbL17uPN3xMBjLiBgDSujnbSHzqSIa0\
h4CXbHmLSfimz8+KI+fCs5j+\
F6ASEDfs96xItTCSEE45hN868Vm6jYmZoigRNFzp8nJc9j2Am0UE9kYZjm+cTZZW22Bicq05+\
ZOyc06Bfnwr+MDGbuYvMcl7c6OwLAwLhh9p2X1z7kb4Pl1W3glj1cTh/\
m94cgbMewI9DKdT1rXyTNSda2Lfs7Vec2XjQZ59pSp/\
5cOmDbLYTxrGwbMDm2NV2tvGX67LbzMsevn4r5rzWfvKAFXDYdKcB8lLfg8imbKAy/\
R9unq3Do8xq2K7xidIRWscCIbZ9kvrj/uV+D1phBj7SYbkI6oZ0AEOVgXddzusoyZ4ZQokljg+\
XX9ssnGsg4l4M72tWeCMjvAPCHrlic0++lC3YlJpl/+qLiVXE41GfK+LwxkoNaK/\
gbWR1lyBR3LwEhivKCp12AOq6RGRAXLflCCxDkRDCHZL/tx3/\
zDxUogVXsK1aU8iwNXmpPwJPplgQ9AZGba3LEDR1dw22I2kTyuVRexNF2cNptjut9kunFDc6CHkhBa\
kvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/Ab+9uKY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Plot[(y^2 (1 - 2 Log[y]))/4, {y, -18, 18}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max2072$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min2071$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1469930$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min2071$\
1469931$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2072$1469932$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max2072$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min2071$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1469930$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2071$\
1469931$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2072$\
1469932$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$1468717[
                    
                    Plot[{
                    
                    Re[(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y])], 
                    
                    Im[(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y])]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][(Rational[1, 4] $CellContext`y^2) (1 - 2 
                    Log[$CellContext`y]), {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$], 
                    (
                    Piecewise[{{
                    0. + 19.242809417694552` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    19.242809417694552` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$], \
-18.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$]], \

                    (Piecewise[{{
                    0. + 19.242809417694552` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    19.242809417694552` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$ + 
                    0.036000000000000004`, 
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$]], 
                    18.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Automatic, Automatic}, LabelStyle -> {}, 
                    Ticks -> Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["y", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2071$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2072$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, $CellContext`UnitNumberForm, 
                    NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$1468717]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1468717[
                    
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1468717[
                    
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiMtDExviABHYxJA0pSvvcWO42Fawfb2QZ/Hnx2kzRrVymmAzSlH071pXl899xz13tyJKO03+\
v19FVrPkhO0ht4emzNUM5yWQjy7jRXVGsmRXoFn922JqZmj3L4QYn3XbfmvVQzMP78Ct8HnhQcDP1q\
GGeGUT3ZV5BnLNG1Z6TYsf3JhMsEOPtJn27tvHi5u73rYTCWERhDldDP20LmmQJN0x4CXbPmLQfxzR\
8flcdPBecx/V5QkVD9wHrHCoiFkQI45hN86+Vm6i4mZkAQUOTCaXLyHLa9QBvFxHRMZzm+\
cT5ZW22BQU215+Zeyc06Bfnwb+IDGbuYvMcl7c6OwLAwLhl9Z2X1z7kb4Pl1W3glT1YTh/\
m94cgbGHZM9TKdz1rXyTNSda2Lfs7VRc2XjQZ5/pSp/\
5cOmTbLYWy3DYPOjmyNV2tvGX6nLbzMsevn4r5vzWfvKAFXDYdKcB8lKfg8imbKAy/\
R9unq3Do8xp2K7xidIRWscCIbZ9kvrj8eVuD1phBj7SYbkI6oZ0BEc2pdxHG7x6bMDDNQkFjg+\
XX9ssnGsg4l4M72tWeCMDvAPCHrlic0B+lC3cEk2Zc/Km4llzNNhrwfCEOnVK0V/\
S2sj7LkCjKWgZHEeEFTr8EcVkmNQAXLflCCxDkIhpDsl/24b/\
7hYiWQqn2F6lKexYErzWl4Ev2ywIdUTE3W3LEDR1dw22I2kTypVRexNF2cNptjut9kunFDc6CHkhBa\
kvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/AbNiuLY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "2DMathPlot"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "2DMathPlot"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Complex-valued plots", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Complex-valued plots", "input" -> 
           "Plot__Complex-valued plots"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Real-valued plots", "input" -> 
           "Plot__Real-valued plots"}, {}]}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate forms of the integral", "scanner" -> 
     "Integral", "id" -> "AlternateForm", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Factor[(y^2 (1 - 2 Log[y]))/4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", 
                   SuperscriptBox["y", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "y", ")"}]}], "-", "1"}], ")"}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   SuperscriptBox["y", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox[
                    RowBox[{"log", "(", "y", ")"}], "2"]}], ")"}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Apart[(y^2 (1 - 2 Log[y]))/4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   FractionBox[
                    SuperscriptBox["y", "2"], "4"], "-", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "DefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[-(y Log[y]), {y, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{
                    RowBox[{"-", "y"}], " ", 
                    RowBox[{"log", "(", "y", ")"}]}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["1", "4"], Identity], "\[LongEqual]", 
              TagBox["0.25`", Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "int", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "IntegralsWord", "desc" -> "an integral", "input" -> 
          "*C.int-_*IntegralsWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathematicalFunctionIdentityPropertyClass", "desc" -> 
          "a function property", "input" -> 
          "*C.int-_*MathematicalFunctionIdentityPropertyClass-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "Function", "word" -> "log", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Log", "desc" -> "the natural logarithm", "input" -> 
          "*FunClash.log-_*Log.Log10-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Log10", "desc" -> "the base 10 logarithm", "input" -> 
          "*FunClash.log-_*Log10.Log-"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "", "timedout" -> "Integral", "timedoutpods" -> "", "timing" -> "2.686", 
    "parsetiming" -> "0.423", "parsetimedout" -> "false", "recalculated" -> 
    "https://www4d.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa11051hee91h0h8ggd3cg00003e53gg32d4a028271789363727025355278", "id" -> 
    "MSP11061hee91h0h8ggd3cg000050bbbd8da18b83b8", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "18", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa11071hee91h0h8ggd3cg00004211d89d266eb72h1789363727025355278", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2020, 7, 11, 15, 0, 44.210961`8.398104932292272}, "Line" -> 68,
     "SessionID" -> 26363138276890354598}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "int -ylog(y) over y"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1416., {1200., 1210.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.803481712659328*^9, 3.803481759368636*^9}, {
   3.8034818393723516`*^9, 3.803481873739794*^9}, 3.803482754302622*^9, 
   3.803482788824127*^9, {3.803482825524892*^9, 3.8034828442896214`*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"08000e3f-1978-4e48-acd8-1477b180d3e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 22 (p.342)", "Subsection",
 CellChangeTimes->{{3.803483166887785*^9, 
  3.803483173757306*^9}},ExpressionUUID->"cff2d468-2f2d-4485-a9aa-\
2c1351e5e293"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.803483281547894*^9, 3.8034832821113787`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"78099e5f-2407-49c6-919f-6a906a05ca0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "a", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"x", "+", "y"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fY", "[", "y_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<", "y", "<", "1"}], ",", 
        RowBox[{"0", "<", "x", "<", "1"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fX", "[", "x_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<", "y", "<", "1"}], ",", 
        RowBox[{"0", "<", "x", "<", "1"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BooleanQ", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "==", 
   RowBox[{
    RowBox[{"fX", "[", "x", "]"}], 
    RowBox[{"fY", "[", "y", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "C", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.803483190083723*^9, 3.80348345474354*^9}, {
  3.803483643743341*^9, 3.8034836770063667`*^9}, {3.803483722439974*^9, 
  3.8034837958306017`*^9}, {3.803484875579775*^9, 3.803484880668274*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"b724c983-cd73-4257-9f05-19e083f6b9df"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.80348325316115*^9, 3.80348342059013*^9}, 
   3.8034836641458673`*^9, {3.803483734388439*^9, 3.8034837496419353`*^9}, 
   3.803483796074399*^9, 3.803652352918594*^9, 3.8037402007661047`*^9},
 CellLabel->
  "Out[600]=",ExpressionUUID->"965c6c6b-7efc-410e-bef4-c15cde0483fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 23 (p.343)", "Subsection",
 CellChangeTimes->{{3.803374902092351*^9, 
  3.803374912878139*^9}},ExpressionUUID->"88bb71e1-0083-4ba4-8f5e-\
3362f6cc8e66"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{
  3.803740207808103*^9},ExpressionUUID->"375e6c3f-ca75-43ec-b9f4-\
92719a0408a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"12", "x", " ", "y", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fX", "[", "x_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fX", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fY", "[", "y_", "]"}], ":=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fY", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "independant", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fX", "[", "x", "]"}], 
    RowBox[{"fY", "[", "y", "]"}]}], "\[Equal]", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espx", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"fX", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espy", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"y", " ", 
      RowBox[{"fY", "[", "y", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "D", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", 
      RowBox[{"fX", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"espx", "^", "2"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "E", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "^", "2"}], " ", 
     RowBox[{"fY", "[", "y", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "-", 
  RowBox[{"espy", "^", "2"}]}]}], "Input",
 CellChangeTimes->{{3.803374919840962*^9, 3.8033749603300543`*^9}, {
  3.803375163567083*^9, 3.803375188927102*^9}, {3.803375284753543*^9, 
  3.803375430351192*^9}, {3.803375469139688*^9, 3.803375527919841*^9}, {
  3.8033756863288193`*^9, 3.803375729269293*^9}, {3.803740206883369*^9, 
  3.803740226753829*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"e66ba427-929b-4d66-825e-fc1ff5b92f7a"],

Cell[BoxData[
 RowBox[{"6", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "x"}], ")"}], " ", "x"}]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.803740227143105*^9}},
 CellLabel->
  "Out[616]=",ExpressionUUID->"4bc9f4ce-5b9f-479a-b0de-e43e63ad9e62"],

Cell[BoxData[
 RowBox[{"2", " ", "y"}]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.8037402271458473`*^9}},
 CellLabel->
  "Out[618]=",ExpressionUUID->"0e3daea4-c8fe-49a8-81ef-4a909adeec4e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.803740227149766*^9}},
 CellLabel->
  "Out[619]=",ExpressionUUID->"e892e547-0005-465f-a049-cd6fc60af806"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.803740227153343*^9}},
 CellLabel->
  "Out[620]=",ExpressionUUID->"4437ddac-77e0-4806-bc35-df092681cc3c"],

Cell[BoxData[
 FractionBox["2", "3"]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.8037402271571493`*^9}},
 CellLabel->
  "Out[621]=",ExpressionUUID->"314c08e3-3644-4dd6-9f3a-a97fe2ecdb82"],

Cell[BoxData[
 FractionBox["1", "20"]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.8037402271603823`*^9}},
 CellLabel->
  "Out[622]=",ExpressionUUID->"48310c42-0e93-4211-adb8-cf1f6321789e"],

Cell[BoxData[
 FractionBox["1", "18"]], "Output",
 CellChangeTimes->{{3.803374942409371*^9, 3.803374960572541*^9}, {
   3.8033751559811983`*^9, 3.8033751692976837`*^9}, 3.80337521681175*^9, {
   3.803375276163512*^9, 3.803375284933372*^9}, {3.803375318374529*^9, 
   3.8033753743618927`*^9}, 3.8033754111515913`*^9, 3.8033754766853*^9, 
   3.803375528854788*^9, 3.803375635640308*^9, 3.803375682712932*^9, 
   3.803375730212565*^9, {3.803740202595273*^9, 3.803740227184898*^9}},
 CellLabel->
  "Out[623]=",ExpressionUUID->"dbd18a31-47f8-4608-b7ba-7c604eb79663"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 26 (p.343)", "Subsection",
 CellChangeTimes->{{3.803389857588059*^9, 
  3.80338986698818*^9}},ExpressionUUID->"c1e594c2-9660-450f-93e8-\
622a04e3252e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"2", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"x", " ", "z"}], "]"}]}], ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803389869008625*^9, 3.80338994482076*^9}, {
  3.803391882559251*^9, 3.803391960904162*^9}, {3.8033919976968822`*^9, 
  3.803391998190537*^9}, {3.803392123984099*^9, 3.803392184977125*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"3663fbcf-99c0-4471-83ac-9b85dd08aac9"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"x", " ", "z"}]]}]}]], "Output",
 CellChangeTimes->{3.80339218548772*^9, 3.803740108882861*^9, 
  3.803740229589252*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"1adbcfe8-f090-4d43-948a-90dca8ea7fd7"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"4", " ", 
    SqrtBox["z"]}], "3"]}]], "Output",
 CellChangeTimes->{3.80339218548772*^9, 3.803740108882861*^9, 
  3.803740229721837*^9},
 CellLabel->
  "Out[625]=",ExpressionUUID->"51032d42-b281-4806-b67f-c33480db9f5f"],

Cell[BoxData[
 FractionBox["1", "9"]], "Output",
 CellChangeTimes->{3.80339218548772*^9, 3.803740108882861*^9, 
  3.803740229857678*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"1b03a232-9f19-4d9c-8bd4-409336c27656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "^", "2"}], ")"}], "/", "4"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "2", "]"}], "/", "6"}], " ", "+", 
   RowBox[{"5", "/", "36"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803403177161561*^9, 3.803403245078476*^9}, {
  3.8034032906259413`*^9, 3.8034033138071413`*^9}, {3.803403351681467*^9, 
  3.8034034477260857`*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"f298c866-df3e-40b0-9e9d-a325ab2a0c6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", 
  SuperscriptBox["y", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Log", "[", 
     FractionBox[
      SuperscriptBox["y", "2"], "4"], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.803403247229995*^9, {3.8034032865668383`*^9, 3.803403314965592*^9}, {
   3.803403394814543*^9, 3.8034034071875563`*^9}, 3.8034034397359953`*^9, 
   3.803652394237619*^9, 3.803740106619359*^9, 3.803740231427968*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"af591350-9405-4224-a6c3-c494be6dde98"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "36"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.803403247229995*^9, {3.8034032865668383`*^9, 3.803403314965592*^9}, {
   3.803403394814543*^9, 3.8034034071875563`*^9}, 3.8034034397359953`*^9, 
   3.803652394237619*^9, 3.803740106619359*^9, 3.803740232104971*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"a7d457f4-cacc-49dd-8baa-23a2a5adfcc0"],

Cell[BoxData["0.2544134189822131`"], "Output",
 CellChangeTimes->{
  3.803403247229995*^9, {3.8034032865668383`*^9, 3.803403314965592*^9}, {
   3.803403394814543*^9, 3.8034034071875563`*^9}, 3.8034034397359953`*^9, 
   3.803652394237619*^9, 3.803740106619359*^9, 3.803740232107884*^9},
 CellLabel->
  "Out[630]=",ExpressionUUID->"6a76dd7d-399a-42ca-9b2b-0421e470a788"],

Cell[BoxData["0.2544134189822131`"], "Output",
 CellChangeTimes->{
  3.803403247229995*^9, {3.8034032865668383`*^9, 3.803403314965592*^9}, {
   3.803403394814543*^9, 3.8034034071875563`*^9}, 3.8034034397359953`*^9, 
   3.803652394237619*^9, 3.803740106619359*^9, 3.8037402321098948`*^9},
 CellLabel->
  "Out[631]=",ExpressionUUID->"72869c7d-daa2-4444-acbc-850d251e9d7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 27 (p.344)", "Subsection",
 CellChangeTimes->{{3.8036572418430653`*^9, 
  3.803657255586955*^9}},ExpressionUUID->"d646fb51-d660-4d59-abb7-\
f481fe80b084"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "z"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx", "[", "x_", "]"}], ":=", 
  RowBox[{"a", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "a"}], " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fy", "[", "y_", "]"}], ":=", 
  RowBox[{"b", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "b"}], " ", "y"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FZ", "[", "z_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fx", "[", "x", "]"}], " ", 
       RowBox[{"fy", "[", "y", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"y", " ", "z"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[Element]", "PositiveReals"}], "&&", 
        RowBox[{"b", "\[Element]", "PositiveReals"}]}], ",", 
       RowBox[{"z", "\[Element]", "PositiveReals"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FZ", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"FZ", "[", "z", "]"}], ",", "z"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8036572634076242`*^9, 3.8036574770762577`*^9}, {
   3.803657513534389*^9, 3.803657516309523*^9}, {3.8036575578120813`*^9, 
   3.8036575652848454`*^9}, 3.8036576097133837`*^9, {3.803657740447495*^9, 
   3.803657745894287*^9}, {3.8036578750816927`*^9, 3.803657896547123*^9}, {
   3.803740101462225*^9, 3.8037401022996807`*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"d946e683-0dfd-47e7-9fcf-560b4a654b63"],

Cell[BoxData[
 FractionBox["a", 
  RowBox[{"a", "+", "b"}]]], "Output",
 CellChangeTimes->{
  3.8036573054437933`*^9, {3.803657408710308*^9, 3.8036574264397287`*^9}, 
   3.8036574630145884`*^9, 3.803657500614609*^9, 3.8036575403082438`*^9, {
   3.803657588319273*^9, 3.803657611343639*^9}, {3.803657738653204*^9, 
   3.80365774663977*^9}, {3.803657888183332*^9, 3.803657897524951*^9}, {
   3.803740092252722*^9, 3.803740103279931*^9}, 3.803740235353236*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"75d3f6e0-679f-4a57-b3d4-6cc0c191c1f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", "z"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"b", "+", 
       RowBox[{"a", " ", "z"}]}], ")"}], "2"]]}], "+", 
  FractionBox["a", 
   RowBox[{"b", "+", 
    RowBox[{"a", " ", "z"}]}]]}]], "Output",
 CellChangeTimes->{
  3.8036573054437933`*^9, {3.803657408710308*^9, 3.8036574264397287`*^9}, 
   3.8036574630145884`*^9, 3.803657500614609*^9, 3.8036575403082438`*^9, {
   3.803657588319273*^9, 3.803657611343639*^9}, {3.803657738653204*^9, 
   3.80365774663977*^9}, {3.803657888183332*^9, 3.803657897524951*^9}, {
   3.803740092252722*^9, 3.803740103279931*^9}, 3.803740235619524*^9},
 CellLabel->
  "Out[638]=",ExpressionUUID->"9ab6130f-7241-421e-ab51-f48a1990d1c2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 33 (p.344)", "Subsection",
 CellChangeTimes->{{3.8034657031963673`*^9, 
  3.803465713036743*^9}},ExpressionUUID->"f2970d8e-1f8f-46a9-8d23-\
ffd365714e06"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "=", 
    RowBox[{"1", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Poisson", "[", 
  RowBox[{"lambda", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Poisson", "[", 
   RowBox[{
    RowBox[{"10", "lambda"}], ",", "0"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{"lambda", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"10", " ", "lambda"}], ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.803465715055834*^9, 3.80346582819672*^9}, {
  3.803466123805966*^9, 3.80346612452494*^9}, {3.803466190855073*^9, 
  3.8034662072139177`*^9}, {3.803466416726633*^9, 3.803466430836904*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"547468b6-81b7-40b4-9eaf-cce5ab44a040"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"1", "/", "5"}]]]], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.8037402557182293`*^9},
 CellLabel->
  "Out[649]=",ExpressionUUID->"b89745da-7869-43f5-815a-8e60b779d8a0"],

Cell[BoxData["0.8187307530779818`"], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.803740255721229*^9},
 CellLabel->
  "Out[650]=",ExpressionUUID->"b7537045-739b-4611-8c17-ea8705af7165"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", "2"]]], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.803740255723522*^9},
 CellLabel->
  "Out[651]=",ExpressionUUID->"4016dfa7-b62f-4e50-924f-a28714e54690"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["6", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"1", "/", "5"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.803740255725676*^9},
 CellLabel->
  "Out[652]=",ExpressionUUID->"37e7d701-5282-426a-a3a3-a44b4fb5645c"],

Cell[BoxData["0.017523096306421904`"], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.8037402557277412`*^9},
 CellLabel->
  "Out[653]=",ExpressionUUID->"cabcdef1-26ba-4f2a-9500-7ff248d01358"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["3", 
   SuperscriptBox["\[ExponentialE]", "2"]]}]], "Output",
 CellChangeTimes->{
  3.803465814608951*^9, 3.803466125138413*^9, {3.803466193747558*^9, 
   3.803466207774251*^9}, 3.8037401117846117`*^9, 3.8037402557298403`*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"ef502889-f190-45d2-9df3-afa5c58f5468"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 34 (p.345)", "Subsection",
 CellChangeTimes->{{3.803403961735262*^9, 
  3.803403971095705*^9}},ExpressionUUID->"d13c2b55-c6c1-4768-9dc2-\
e50b627ef496"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "=", "2.2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Poisson", "[", 
      RowBox[{"lambda", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Poisson", "[", 
      RowBox[{
       RowBox[{"2", " ", "lambda"}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Poisson", "[", 
     RowBox[{
      RowBox[{"3", " ", "lambda"}], ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.80340397382837*^9, 3.803404096359384*^9}, 
   3.803404351722677*^9},
 CellLabel->
  "In[655]:=",ExpressionUUID->"33cbe82e-d900-4010-a995-9652f703115b"],

Cell[BoxData["0.37728625000368354`"], "Output",
 CellChangeTimes->{3.803404017063713*^9, 3.803404059271096*^9, 
  3.8034040971620197`*^9, 3.803740258901519*^9},
 CellLabel->
  "Out[656]=",ExpressionUUID->"f32d6fb8-560f-41fd-81a9-eea5e2a960c3"],

Cell[BoxData["0.4488161914556843`"], "Output",
 CellChangeTimes->{3.803404017063713*^9, 3.803404059271096*^9, 
  3.8034040971620197`*^9, 3.803740258903658*^9},
 CellLabel->
  "Out[657]=",ExpressionUUID->"402c1213-2ee5-4549-8bf8-f1a1cf7fcdf4"],

Cell[BoxData["0.6453269565417076`"], "Output",
 CellChangeTimes->{3.803404017063713*^9, 3.803404059271096*^9, 
  3.8034040971620197`*^9, 3.8037402589056253`*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"415d27d5-21c1-4593-9573-57bd48aedc26"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 40 (p.345)", "Subsection",
 CellChangeTimes->{{3.803665735151083*^9, 
  3.803665759095837*^9}},ExpressionUUID->"3e7e1699-fa7a-4243-be79-\
6e392b7aa172"],

Cell[CellGroupData[{

Cell["Exercice 41 (p.345)", "Subsection",
 CellChangeTimes->{{3.8036675188993998`*^9, 
  3.8036675265051003`*^9}},ExpressionUUID->"3aaadb6e-050d-4fcc-95d3-\
57660f4c27fe"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.803667562895542*^9, 3.803667563328505*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"29b45682-9fe8-4c68-9cb2-b8db27cce854"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"x", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "x"}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"fX", "|", "Y"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], "&&", 
      RowBox[{"y", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", ">", "0"}], "&&", 
         RowBox[{"y", ">", "0"}]}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"fY", "|", "X"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ">", "0"}], "&&", 
      RowBox[{"y", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "/", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", ">", "0"}], "&&", 
        RowBox[{"y", ">", "0"}]}], "}"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BooleanQ", "[", 
   RowBox[{
    RowBox[{"a", " ", "b"}], " ", "\[Equal]", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"z", "/", "y"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", ">", "0"}], "&&", 
        RowBox[{"z", "\[Element]", "PositiveReals"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"%", ",", "z"}], "]"}]}], "Input",
 CellChangeTimes->{{3.80366753411652*^9, 3.80366764184074*^9}, {
  3.803668211509445*^9, 3.803668211753565*^9}, {3.8036687717092867`*^9, 
  3.8036688211299047`*^9}, {3.803669362510646*^9, 3.803669417483963*^9}, {
  3.803669459104331*^9, 3.8036695161671667`*^9}, {3.803669546445231*^9, 
  3.803669554747097*^9}, {3.803669618711746*^9, 3.803669667209494*^9}, {
  3.803669718121995*^9, 3.803669723893991*^9}, {3.803669788491911*^9, 
  3.803669793211803*^9}},
 CellLabel->
  "In[659]:=",ExpressionUUID->"4b70caa1-9648-4394-a424-da6e5ea46754"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "y"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.8037402609685926`*^9},
 CellLabel->
  "Out[660]=",ExpressionUUID->"ebfb08ac-4129-4b54-8c90-7ad44a56ff40"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "x"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "y"}], ")"}]}]], " ", "x", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "y"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.803740261044201*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"ea175f15-98ed-4e05-a145-680c7fbb00c2"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "x"}]]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.803740261119182*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"3195545a-b6f9-4745-8702-039baa6228b3"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"x", "-", 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}]}]}]], " ", "x"}]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.803740261187159*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"7ef61c04-c46b-4209-a33f-d7c85714173b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.8037402611909533`*^9},
 CellLabel->
  "Out[664]=",ExpressionUUID->"e1d3102d-8902-4747-8646-0c23ff2acbbd"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.8037402989469833`*^9},
 CellLabel->
  "Out[665]=",ExpressionUUID->"d3bdfe17-184d-409b-bde3-439cc425f5c9"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.803667626885483*^9, 3.803667643103163*^9}, 
   3.803668213154904*^9, 3.8036688234556913`*^9, {3.803668876049409*^9, 
   3.803668889018477*^9}, 3.8036694180382853`*^9, 3.803669516875985*^9, {
   3.803669547857663*^9, 3.8036695670395813`*^9}, 3.8036696312750177`*^9, 
   3.803669668429455*^9, 3.803669725056368*^9, 3.803669794917474*^9, 
   3.8037402989502993`*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"3067083a-2ac5-4c46-9b62-a6662d6d05a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<int x Exp[-x(y+1)] over x\>\"", ",", "\n", " ", 
   RowBox[{"PodStates", " ", "->", " ", 
    RowBox[{
    "{", "\"\<IndefiniteIntegral__Step-by-step solution\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803668280081538*^9, 3.8036682818505163`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"28d3adcc-4d06-423b-a8d6-9136c07aa711"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "int x Exp[-x(y+1)] over x", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"IndefiniteIntegral__Step-by-step solution"}},
    Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[x Exp[-(x (y + 1))], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"x", " ", 
                    RowBox[{"exp", "(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}], ")"}]}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", "y"}], "+", "x", "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"integrate \"", "\"by \"", 
                    "\"parts, \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{"f", 
                    RowBox[{"\[DifferentialD]", "g"}]}]}], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"f", " ", "g"}], "-", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"g", 
                    RowBox[{"\[DifferentialD]", "f"}]}]}]}]}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"where \"", "\"\\n \"", 
                    TemplateBox[{
                    RowBox[{"f", "\[LongEqual]", "x"}], "\",\"", "\" \"", 
                    "\" \"", "\" \"", "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "g"}], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    RowBox[{"\[DifferentialD]", "x"}], "\",\"", "\"\\n\"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "f"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}]}, "RowDefault"], 
                    "\",\"", "\" \"", "\" \"", "\" \"", "\" \"", "\" \""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"g", "\[LongEqual]", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}], "\"\[ThinSpace]\""},
                     "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}], "2"]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", "u"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", "y"}], "+", "x", "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "IndefiniteIntegral__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, -1.48068, \
7.45241}, {y, 14.9462, 25.5591}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[
             GraphicsComplex3DBox[CompressedData["
1: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
Owm9qP2k5Rz1hbbnyEtQjviy8R27H9oOQy/isnEfi0PbZ+hFXDYeZHFouw29
iMvGiSwObc+hF3HZ+JHFoe089CIuG1eyOLT9h17EZeNNFoe+F6AXcdk4lMWh
7wvoRVw2PmVx6HsEehGXjVtZHPp+gV7EZeNZFkf23mF6Eaf1F/0i+p5C/aLv
KdRTWt/xHqQc7zXUa5sT/7PK6TOd969oPUUcyqGn9RF6yqGn9Q56yqGn9Qt6
yqGn9Qh6yqGn9QV6yqGn9QJ6yqGn5R96yqGn5Rx6yqGn5Rl6yqGn5RZ6yqGn
5RN6ypHPR/k8O6Get/7CZnx+ivZ/oAefEdHRJNGuegLeL3ReDOUW/OA/y9e9
qzvhNOqdqH8l6keJ+kuifpGo/yPq54j6M6J+i6h/IuqHiPobon4F7T/AZzr+
QvtDx4lXG6/9EnhbPl67pq3MefyMz13z1lbuk+Xt1Vw/N9PLVSzp/M6c7J06
M4orhPsWPzabE/YsuZIPaGRb97Vknx34uI2fpp2V7AsDX2ledccsyT4mcJup
fp3D/vomm/epa/p+xq1x32TzPlrrNdruc/gmm/dJvX0v5+ywb7J5H5WS02r5
xt9k8z5jhw7y8qkol837GHgPeem7slw279PVr9c7/+llsnmfwA320X7nP8vq
y3enL1PO/fJft1V+xo3RlT5PuV/TyPCX/wu1O3/xtqv08/6S4hoff/nzl8H1
u24SPx8lvrJz/vVcPqcdsFsUUamfEnCn7bNfek/1uxOWSHzeEz+kVcYvPvVu
/anrpT4PtyyZ8YsX1Xp/fbvEZ/1a87ce/uX/fvX0ezslPoe9vTXz5i//+465
abZK4vPLzXXWB/3yf9y15akDJD77dXF1/s//nCunJu9dW+nzvcgzf9/65f/k
j6nDP1lV+lweeXrkb/9dvlVvoFrp59Q57jf+89/R8ey1N+mV/EF+4dP//J9z
17X3frdKn3XHvXa8e3hP5sCJ3o8Obam8n/1Xv/zmW6cqOOrFtINHZoz1m56Z
8yUxcVLVyvu8bdh45n885KOCQ783P3hz+8XrLXwmeK3oZlWp/9Bt3W/edoqC
Q68bObe8fNd+i8TYhv2s/q7UDz3n9Jt3iVJw6Ge3DcpwaRpqsXxe57Pff1bq
Q87t/M1jFig49Peuh3/2bnrM4mhebPqCXZV+Fh849Jtvu6bg0D9ophXQ7vlx
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
77741midXyo49J4/62TrPuqbeiD9hWXzfyu/N+Rvf+H554lHU8ChH3/Lw7O0
bEJKCfkO0V32HaKhZeELho9ozPnsx3sju9aITi4h39OxYd/TgR78/XXt1Jw7
45KDm6zd+lylCY/Tdf7WBw933UkCh3692WUr+6QFSaXkO0ed2HeOrEdbZTea
qc356SfPpgXMfpJYSr7X05J9rwd6cN0lzuaNz89LDJnf7uGJ5pXnYp2sUjh0
R+GnBHDo9Tyf+r3psDUB5ZPm1VEOaXuC8kY5yhXlKFfgRWZ7tU7OVuHlCjy7
yM15Sa9PvJyAO+qvMr7hV4uXE/ALN1vZPxpSwZ87/87Oj3oDHto24M8dfA77
Xg+eI/jg0NqvDM5X4c8RfNFAk4SI2o348wIfz77jA//BE/XDgs+1UeX+gz98
fqNldKPG3Gea/4fP9L0DnymHn+B6H5a/NevxlNdHcLsjz7v+7X6V+wl+1vCL
/uGR+bx+gavc3r/16bl07id4uVmEyoKz53i9AHdj3+WBn+CTVmhXGbz5OC//
4PYuFQuGbIzh5Rm8N/teD/wEn3X65cTQx7t5uQWPvare9NOqg/Hwk85HwE/a
D4GflMNP8HtvNWZk1MvmfoKnt9rdquDMYe4nuHWU/etzJiHcT3CPDg/3dB7p
y/0E/z4grv2GMm/uJ7g9+/4O/ARX+2EU2/OhA/cT3GCMQeuoLnbcT/AA9l0e
+Am+Ik8n42e1jtxP8NAwU59lsW25n3R+BH7Sfin8pBx+gsc0uDW+Z3ko9xO8
pY1O9Okq3txPcP/c/GFJRW7cT3DdxWY59QvNuZ/gKr4llxa37cL95PezTPGd
HfgJXq5edMMzpyIRfoJrFa2+5/Xvu4RS8v2dH18V39+Bn+AvLkyI9QnPiIef
4N2uDO5YRfNUHPyk8zXwk45T4Cfl8BP88YXQmOzy1dxP8Ju6AUs2PRnB/QQ/
6vXCvySzB/cT3CBpaGTLLd+S4Sf4yTWpp9pmPE0qId/TcWHf04Gf4OqtAsZu
HneU+wk+xe6yxvsTm7mf4MvYd3bgJ7jnvTDN+Nd23E/wJ/87XPfHgh7cTzp/
BD/puBV+Ug4/wf2atMoLa+DC/QS3XH4wsMXsNtxP8E2L0xoXhapwP/l3czaF
Xdfrm8b95N/fSZ9WSzNkF/cTfAX7bg78BB98qcuem1fsuJ/gSzuEW2oc6cD9
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
wOm5YeD0vC9w+p0snpcm34nj7xHynSxw+j04cPqdLHD63Tdw+p0scPp9N3D6
nSzeryDnyfB+HRn/Yn5QtE+Z7nMEp/v1wOm+M3C6fwqc7gMCp/tZwOm+DHC6
vwCcrpMHp+u9wUXrlmmeH5zmzxFnIRl3gL8j4wVw2s8Hp/1zcNqvBqf9YXDa
jwXPIP1PcNpvBKf9PXDaTwMPJu0tfCvu7FF4x1PuT8ae+Ont/f7/6/E9UzrO
TW+/7aJbuw+y8SzOAaP8yTC15VaXqvL1xindP31wL7RLLwg/llvveU3OO263
NepuOjOt4OdQ7TsVdTlvcsTyoY/uylTPU6XdR9ZtyHmub8bhBXX2phSz+XHw
aUWbn67PiU72VNu1skl7Lc5tD8TO9za/mFTM5sHB9Q4/bVW7/Emip5PJ9Sf9
m3NeuNjJf+KjTwn4Tjedp357oVeMc+Y/snILfyiHP5TDH/CfH7d/HXHZiPsD
fqnPjS8j8y25P+DmHe3SPlyw5f6AV51Y1sPBdyL3B/xVrWmFa3Vmcn/AVfRM
08c8WsD9AQ/dY7ry+72V3B/wFa9XZb/stzUB3wcEtzR4Mm7Z7KB4lB+aZ4A/
NJ8AH8D9025u6qb5PQ0+gNsM7ln32I4fqfAB/IF5u5O1PFW4D+Bzl80yKdpU
hfsAfqHRoNcTg6pyH8Dt3BxiXu2uxn0Aj41K39RouSr3AbxfSq2aJ2yrcx/A
9dcmBLyvViMe5WceWVeA8jOPzIvBH8pRfsDnnVhl+Hrh83T4Bt56XpG/X9gj
7hu4R9TPb5/sb3PfwH8UxEUbH/07Bb6B32xzeJZD65xk+AY+vGXkhp0PUpPg
G3jNtTqND0bGJMI3cLcTqjkbvh5NgG/gQzINWwfvORgP38BfrfLbEFu4Iw6+
zSbziShXM0j+B9+vpHr4PJu8Z+GziM8g7xH4D/1Sd3WvXZpX08GhvzTldNzN
TWn8uUBvG5L12DQ4NQ0ceqegdePNlkfw5wW9bgeDbSF2x1LBoS+Pqn1fy2sn
f47Qb0rNXjTSfFcKOPS2iXtzNHOX8+cL/cRey531vq1MBod+cfXolVeuuvHn
Dv1Atn4bHHrdU147h10ZzcsD9LlzVPJWDhqfCA59XG7vw1ZHLHk5gX4XW9cN
Dv2LB1aZvks78vIDfeP9yc0S63SLB4d+aF7G9MNvNXm5gn7+RotZ7r5N48Ch
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
6fNKZnFouwE9fV7g9LmcYHFofUd7Qp8Xngt9XtCLOH2O31kcUX6McnPB8x0j
yKchDn3utdh7UPbcmZ7yLoLy4CTIXyEOLSdN2HVl5YTpKdcVlB9PQb4IcWi5
asuuKytXTE+5hqC8+QnyM4hDyyH6G7JyyPSUVxeUz82CPAni0HL7N5vXoOXW
hbX/lGP+hZZPvL8o92V6Wq4SmZ7ywUwvG+8zPeUNmJ4+R73NCj3lD6oq9NT/
8UxP+RGml+V5mJ7yS6vC/Ba0kdd3cOoPOK2/4NQfcFrvwKk/4LS+gFN/wGk5
B6f+gNPyCU79wfol+FB9dtaq1Bpl6RvY/CkdR7di+17peBmcjnO7ME7Hp70Z
p+PKoYzT8eAY7Jsm47immor8KvVBxV7BqQ+l6gpOfbBketo/rDlV0W+k9e78
FAWn5SqEcVqulrI4tFzltP5zPzB5skJPy1vMNAWn5e2v1n/u75WxcQEth6HT
FZyWw3e6f+7XWc/8c/7Ha8af8zl6F2rW8R4ZKnuOde2qKnHu/7fzHZ7ejpY9
X4Pr55Q47z9r9PK5uLaqrHze03np3uNyFUs67jP4vjz7s6Scg5ec1838V7I/
FHzcxk/Tzkr2LYIvCvbcdEaybxH8yZTasW6S/WvgNlP9Oof99U2+DythVNPQ
v77J6kV066sat8Z9k40HtdZrtN3n8E027ns5pklakMM3WT1aUN03/Oywb7Lx
nUrJabV842/ydez6FwtuGX+TPa/rjb+4+lSUy8ZrBt5DXvquLJc99zE2Le78
x+lznDDfv9B/eplsnHUp+U3/UalLZON0tUXKnPcf5pftiXZfJnteuv2UOfQ3
qg69NG/TctlzGf9kiBKH/uvrbdPeTZHPW1n+o8yh39ZB6/jsOPn8zlNtZc7b
jd0frnVoLs8zZO1U5tAvVw8Z5Ggkzyd0rKvMod/v9KbIvp88b3BtujKH/uA/
0ePeWMnrde8Hyhz6WU+Cqs20ltf3vx4rc+5/XtYSzXBvWT42YI0y5+3AplKL
8Ra+snpqN0qZ8/7Gv2ePNnjpJ6uPBQnKHPqZVlM3OnaXz4cONVHmvD333/9g
dbB83jDaT5nzftr+jQun3oqQ1ZdNS9cocf68Gtcbljg1VlYvOqvWUeLQi3wT
1ReRb6L6IiqHIj9F9UhUPkU+i+qXqNyK/BfVO1F5Fr2PRM9LVM5F7ynRc/x/
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
r95T/m47PzfshLlhi0elvDzwc8PYOLeUnIulws7Fsib7+lMtlL/nDn49VHVh
O/dB/Hvu6KfZsH39JmRf/zO2r/8A2de/apjy99nBw9l5U8Fkv/9Q8h128Ch2
3lQIOQcgkZ0DYCYYN+UKxgsagvUk+L/gd7yaWq6MOsvLCXjtAOXvtvP9++Gn
u4xJLOTfKwcf9FT5u+3gqT3XDMm6oM79Qb+3Nxunl5BzmU6yc5mGknMGHCqU
v+cOvmLq9O5mzY25n4h/no3rS8m5TNnsXCZrci6BQ4Tyd97Bp31fNnn10tH8
O+/on+9j5xKYkHMJdNi5BAfIuQTTVZW/287PTWLnGgWT8wqyfJS/zw7eh51r
NJjk87eyfP5Qks+/1kmRz7cm+fzR3RT5/BWC8TXKD+UoJ+Ap26JuPlyom477
AZ9p2uXe24d9+fsX/BrL8+M+wTukvX++/8443m8HT2R5ftw/eOejKeZfcubx
fjs/f57l+YeSPP80lue3Jnn+HSzPj/+F/rlJWpV/U92vpuF/gUcElPtfO5fO
7x989fxtyT02H+f3Cf7GQS9q5+PdvH8LbsDy/Ki/dDyL8gZ+763GjIx62fy9
D57eanerAkl/Htw6yv71OZMQ3j8E9+jwcE9nSX8e/PuAuPYbyryT8b/A1X4Y
xfZ86MD7yeAGYwxaR3WxS8T/BV+Rp5Pxs1plfx48NMzUZ1ls23jcP+/PP5n7
z7Eq3txncIOz9bPVCs25z+AlH8rmu+VU8OuCX3+4y3tBeAb3k4734Sc/z/lC
aEx2+WruJ/hN3YAlmyT9bfCjXi/8SzJ7cD/BDZKGRraU9Lf5+dJrUk+1zXia
hPsHV28VMHazpP8MPsXussb7E5sT8L/APe+FacZL+sPgT/53uO6PBT3icP/o
f56/djJBe3Yb7if4xZIaPXX7pvHnC34q43rVvCuVzxG8geG76vsdnsfBT5oP
gZ/gdw5McOrXdzD3E7xPw8RlTyX9Up6P8nk3tk/iFd7fAF+8cmwzDUm/FDzg
qa/HJRdr7id4kVZqvRmSfib42B2v2jXLvcjHF+Dl++wcqkv6jeA3TzfYoj1m
UCzuH/0014PbfG/43ODPnZ+z5O7fo0Zqb+4n+NrF96Om1gnjzxF8WKHL5WZj
anE/ab4IfvK8fZWds98UqHE/wVsG+tt5S/pv4P0blrrqD5nO/eTnlA7sNsNc
0n8Dd65tUByVHsfHd+AG8dOMHSX9MfAesUZ6awNUuZ+V/THPyasl/StwV9Oz
L11tR8fg/tGf6WV/9q+c5r7cT/DA8g/BVcan8ufLz9XM3DLFIfYTvy54hI9/
ltMpw1j+HWeST4Of4G1z5+579/Eq7+eAGxx2Lpf2c8C1+tU+5T//M+/ngG/4
FFkh7edU9mcGbssO0+F+gt/UOZQl7beAq1wqaBFyrz8f1/DzKkNbHJX2Q/g5
nKpny0ImO0fj/tEf0Au7mlu/gQH3E1x1Z8m37w17cz95v+VjrUKVvKHcT/C9
I/ZsiKkzlo9H6LopM8F5QeB0XRM4XacETtcdgdN1ROA0750rOEcFepoPh57m
h6GneXLoaX4Yepo/h57mh6GneXXoaX6Yf++b5IFDyLkKe24rzlUoEezjXiHY
r10i2JcNPc1TlQj2WUNP8xUlgn3T0NNxa4lgHzT0dPxSIjhHC5yWE3BabsFp
OQGn5RmclhNwWs7BaTkBp+UfnJYT/l1XUi9WCM4dAqf9SXBa/sFl+3mP/fkc
G3DaHwCn5R+cvu/AafkHp+05/14tqRclgvlTtP/o54daX3ePSSlNx7iG+gZO
fQOnvoFT38Cpb+DUN3DqGzj1DZz6Bk5949+PI779HxXxDRo=
              "], {{{
                 EdgeForm[], 
                 Directive[
                  GrayLevel[1], Lighting -> "Neutral"], 
                 GraphicsGroup3DBox[
                  TagBox[{
                    Polygon3DBox[CompressedData["
1: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
Xq5v/C/iCoK8
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
KGOVHF+urz6lTuXvkJblmsTa5P8BSN/Ymw==
                    "]], 
                    Polygon3DBox[CompressedData["
1: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
                    "]]}, 
                   Annotation[#, "Charting`Private`Tag$3267998#1"]& ]]}, {
                 EdgeForm[], 
                 Opacity[0.25], 
                 GraphicsGroup3DBox[{
                   Polygon3DBox[CompressedData["
1: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
idKu83L799iK41G+Kj37XIyrMRXnFmkJ6fDDVa5xi4JrkDT/usx+LH+eE6yN
l8HfyOzPi+IapD+b41jpWOn1FcGaW9pjdfC9RXs3OmpR6YZR8o3cWmQ89l65
dZv0vzSutG6DklO167veuSC3nhhXcd3RvUm5ojnqaulrxabOeEawppcGaI5x
qnieCP62yvugPtLZ0ttTlZeqvE71+U/FOVAabz/8VLDG+37u2JZu3FHy3STH
vj7W0Muxt/C8tuB7X13ue5fuOMNy3xWXwYfkvvs1wZti7egAvzP3PfPBzBps
Vuo7zVdj7UiwLaLPW8H168GS7yOBOY+WfF+4AD4u9z1B56X7123RnzuXnNNO
Z7576A4yNvjOMC6ey+SSc1HKexpy60754Zjc9y7p2Lty569X4SNzazL5TN+S
4+tj+CuxZvXQ+ee+I0l7S1/NjfOqnururJitjzWlVbzPKv8oDy1h7DvBdVM1
YkHqebvk1uW64yzNfRdQrZ+bO2/Kz6WXpMG05yuwfxCsczrk1vrKCffHe7ru
61fl1v26e0pDKB/2jnlM2kPndSLenVXflB+lT1SDVI/0Xfo+3fMVp4rBxbk1
v+r7nNw5QrHQDH83uIZmMQ8rH+s+oHiUn0vXyv8VI61z91NuX57bJ6W17s19
91HekK/MirGzDPv7wZpEWlHaQH71f85aIJE=
                    "], VertexColors -> 
                    None], 
                   Polygon3DBox[CompressedData["
1:eJw1mHm01VUVx3+/333v3N+9lyFDViaLjMAIVxNQDstMyXlYaiIp8ASFlQbo
Q2ZB8eFDZHiMWi4cymytMiwyFXwPnsSjJ1MO6EpFChYqMwQYIFKK9P3wPf1x
1t377PM7wz57f/f33C5DRt5QmyVJcnGaJFX6fTlPkhGSnw9JcrycJHXSO0tf
qUEfl5LkgNo2yWPVN6PkvlMKSdKaeuyCSpL8S9/O1pjdsv1XfUtk66C5K0Xp
6vu3bC+q7y7ZDknvou9flT4rd19JcmPmsf/Rb6P0dmrLJO9X32/1e7b09XE8
c7Fn9v6p2suSe2q9rlovaPzb0hukL5TeX4esllylvgMSXsptmyl9i+Sxah0k
N2uNY/r2QZ3nBzrPLvWdIv1e6fM1x0X65rjGrlQ7Df+ofSZ5qcYs1bep9GHS
22rNbhrbU2t9Ln9eJf066e00Z03F6zXjC7W/5O67Trb+qcc2lnxuzn+37Hul
L5Z+kfTXpE/S+CT4zJy9VPBe2NMKjftcfa+kXpP5esi+Qfo31VbLfqW+7Sv5
a7J/pj3O1ny71Dddtvc5r+Rp7E/25Tr3HNl3q2+G7B/KPlf6HukzpW+TPkby
A3G9X2n8MemPy9agtk/yBLWpsg+S/Y+yD5dP7k4tT9Zcw9WmaswY9a0hFiVP
jvdZrzF3afx46VziVI19IfdarPmO5DvLjs3tGvuA7APUrtYc/VLHw5LcZ+FM
myTv0Pj2mmut+oZKPqSxP9dep6ntkDxUbWKM35s150jpdanvnzho0Pw71feQ
xm/V+UdojtGyr5OtjlxQ3/fl83Hq+5vW2yP9AukTpL8u/aOS74H7mC/9sPZ4
quYeoO8Pal8TNd8Hmr+j+tKic6S7xrZmzp1U7bV4P6Nk3yd9V2YfzSw5htOC
Y4xYm1/xPXAfO2WbKX279Aelby55DuY6XX2DZJtVsR/wxxbZ50nfK30W/inZ
p9xNFuzrA8H7rZN9o+wz1LeNO5f+D+lf1l7WEm9qq9Q3XfYPZa+XvEn2OyTf
G+NxjHwwVq2r5C+kjs9a+aNX4m/4dpO+G5kaf9pr7uHBMUM+rcidk+RDUbY/
aP4tGj8qNd6cob4xmm9y4pgn9smxZbIdz5x7J3Lv90sau1j6BI1fltiH+PKd
zGvh3xOS/652Z2rM+iSzD/tq7C2pfXt7xTnCnls0988qzjH21Cq9q9Z5PXUM
bc2MQ+DRCrVq2T7NvD/WZO23MmMfGHhQcieNWZ96Ps46WvutTRyjxOo46U8k
zllyd7z0ZxPfKXc7JMY8czaDhZpvdeoc/afmu0fj1yXGeLC+UPDeatU2yj5U
fYNlGyZ9l85bkX1V6vNyV8Qt8csZz5RtWu79diZG5d9b9f1N+v621Hg9RPpA
6T8FY4uuC9SHpWofSz6cWcbn+D4rGd+6a77nSs4ZfZ7sD84l8HyQ5Ms05vfg
vfpmJ8Y0sI06R73jzB01xz7pz8f6gq/BdPT9mbF+ir75ib7tqb5HZbtQ8hVg
NxgBdqnvdMm55LbEl9a7PnHOkXt83y24RlGr6qV/V/pm6RXpf82dK8QgsQjm
gX1N1BDZb1R+7JVtj9qFBWMO2HOf7AXqb7VrB/55gbjT+n0S5yS52V32gVX2
Eb66T31tgmsGtWN5bmxcIH0HZ8/su2v020/rNalvkexz1PcBtbDofD1ITpMr
Jdch6tGk3JgMNj+uMblsv1TfudQjjT+nYg7RGuNlleQj6n80cz0iR2eor5ts
p0rupPGrc2Mnd87dH1X/wsz1iBgfpT0MToxhYBn18qrgnBqnb++XfkNwTDZQ
P6Q3BOM1/OJEyXhcU+X6jX+uDY6RKbnva4D086U/Jf0RtW9L/qr6eshWq/ZI
MN5Tr4lxcI87nRbXPy0Yw8Fy8P3VmL+v5F6TtcF/uMTRatcG9lRL/dC3D2fG
V+706qLPe4a+n5q7plJbqbdJyZzuSLVzCL7EnZCfbQu+K3IOPvT14FxsH/wt
fAReAgcit8khcmm/5ppETqutUd/OsrEBjHhTc51NPdD4O9RqJLeLtRY+tVL6
KrUrYzxtlbyv2tzpG9LXSn8/d2xxJ9wNdta6Vn2XBNcMzv9RrAfUMOr3oZhf
b+fmBmAu2EtMcxbukLsM+m2RfhN7CPbROskvBfsODgO/IB+WBnM+xi8J5oLU
fOLzSMRX+MR5kn+kMeflzlHOvyI4dw9VOV/I72b1bc+dW8QIsfJebm5CTaA2
bM7NTeFEcKM+Bec6PoJngjfvJr4TcPfSYN/A5eG3vYOxAvwER4lpYrt3wVz6
6czYBWf6TsGYw97YI3i7KHNswyfOKTinqb3UYHKdeOAuT96p9DruITX+gENw
NvgB/PRFYqrs3N9R5XwfUvb+Uu310oo5Eus9k5k7zQtem7655Gnw99QH6sRZ
uevXYc33hubqFLw29Za6y/kvSF2zWQPOBX49l5mLEWPEWiF1/JKjcOuH431w
h8QyHJG7hWPDJcEQsOSLwfEyUO364BxmbTCF3AZ/m1Jz7CuCOSRckjcRbyzi
kHiEE48P5jxwn6aI13AYaj01H27CGb8VjJmcfYJax9QcF/4FpziJnRFvN5Rd
2/HRoqJrFb5rUHsomMPBz4/F+j9H3/SIvhsUsZHzcKf3S346tz+JJWrz73LH
+rnB93eZfn+cmsPdHowTxGa11miJ+Y48gveF5EW56yWxC3cAn/AL/ukveaHs
veNd3xqxllieF+OhPjfWgU28nY4VHZtT5cfj1b4n7gvOXhtc72oifiZF18g3
ZWsKrp1fCdYHq90ouRDM9ftFH/MGgh+D143BNRt/4ldq+Vn6fU/6ULWbg/OJ
/bJvasW7VcZX6v2y4BrI+OXBtREOCPavj/Wh+f/v8dTc49fySXPcwy2SG9W6
BNecTrLPlf5UxKyBZb/RqIdHI7/hTf4kb+tg/sb3G+OeBpf9fSmYsySab17Z
XAXO8j35q6lsrgRnqi96Px2Da3Ibjf+k2vFLDFxOvJTNPeGgA4uO38MRA28r
u55dHmOG/wfIP2rl+QW/dVuKzl1i7je5OQe1gprRV/L0YOzqGeOZ/Cd+4fTr
q1xTromcpSVyDLAHDgz3wGecBR/gizeKrlVgNtg9pehYICaIFXyCL/AxvhpU
Nt6wFvX+maLvnjvlbtdEflIf8ZsxjGV/cAXq2pyIt9QG3n/8N1Ed47NN5FOV
1PWeOrEg4i21tKbs+ry4ynyIO8DXxAh3Q06Ce/iQXP1Fbl+tlU8Olsz3L4k1
Y0PuNxI8Hj7P24l84u3VNeI9eEzugdlskvc8b4POEb+Glf0tb2PqI+8xcA/8
eys3nyBfB8c9t0Z+OynWO+oHb5/uEW+4X7AKzIc3Dig7HxdUmU/v1p42JsaQ
Z6ntRWMxmEwtp97xX9GsyB9GF+17YmSubI8VHQtgzGO58x087RPX4L3PeTpE
/KDG4fsfRrzC55yD88BNqU/M9USscSdrqOReES//nLseTo7+4L0LNy9FvGyJ
/yeNjnyFM7IP9sNbgjcN70J8BN9lPnzL/zjg3Z9y15eJ8T55s/Ju4454P2Dn
ruEJ/L/Qq2juA6eB23Qrei18cE/M50q8f97i8BD4CHgBlv0P47Gpwg==
                    
                    "], VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJwtlFtsTFEUhreWcWYMEiERElEmHqoVHSKdRMQl8YKkFcL04lIP4jaj006n
JKWmImOMMdEUTdM0JaHqjaqpxjUuDaEe3KkYnU7dg9b9gW9ln4c/Z61///9e
66yz98ko8S73pCmlFoFh4KCh1ASLUp1DlfKQR8lfgzDcarBhiFIJciU64iqe
s4YrNRv4rUrVsdk+kELbbFPKzroDXYhnAZpCUIHuKJoQeIsuji4AV08eBu/h
uuHu4PHj7SSfCZrIj4FpxE/oL0Ib9eTb0F6CmwPmo78LF6TOHlDG2nezxmee
f0E1NRx4R7J+G20Zng54Bzhi6P7EExnBuxMnwFb8F+EypQ76LnSn8bfIe7P2
0+y5Avwi/gA6qHGV9YdofeRLwSq8j8hfSo/kK8BauB7yf9TJ4SP4ebepeO14
b8CXsn4B3XhwwNBzHiAO018P8StQTt0fcO9Ag8wF70S0M/DWGnoWMpMCdAaa
ZWYvTrjtcN/I+6QXvEvgtsDFySeBLHQ32eOWOavp6Uo1MsMY+Tp0WWjc5tk4
hXcTXBu5RXqGuyI+eozhCYI38EE0a8Bk4pXmDKrx/kGbT7wYbpBZuGXucBvh
iuFcUgeuGc5JPMCsWun5OHkbKESXDz8OFKNzwS2EO8mzm/0fgHJ6qaWPvSCJ
7hC6IOuj5IyxXx771ZCfNfSMZFZWUIjOhzeKbzdIwO2A2wzaiceAKeiv47ss
55L4HJwCfkPXlh4C6H/DpXgm4Q8TF1n0O/aRB0AaeQ29OLFXkldSt4GaEfDR
9D6F30mcZ9Hv/Yy8CH6sRc9AOLd55+Tuldr0uZF7WQJyLXqmUvc+6z64QfJ+
UEVdH9w96Ue+Idxc0GLoGXwSL/3top/HVn3/5T/gZY+v5kw94AtxL1jAfg7W
2w39reWbZ8h3t+nvIZ4Q5/k58QurvsNyl8+wv4vzth8ubugzJmctG6y36bnI
LGN4U8T9Vv0vkfsYheslToJMvLl4Gw19Z+XuXiP2wp1Ha5f/gtxpMI94NGev
i55byetAE31kp+vzL/8Muf/yHzgBnwMfosZ/Tla5lw==
                    "], 
                    VertexColors -> None], 
                   
                   Polygon3DBox[{{2680, 1786, 1788, 1005, 215, 2024}, {2419, 
                    1775, 1141, 36, 641, 2520}}, VertexColors -> None]}]}, {
                 EdgeForm[], 
                 Opacity[0.25], 
                 GraphicsGroup3DBox[{
                   Polygon3DBox[CompressedData["
1:eJwtmXn8V1Max++93773e+/vW0oRKVrQUFQoS5bIvkSSQmVJmyUlWyHbkOXF
YIYJiSxlHYx5YXh5NYZsLaSVIkaEkS1rGprP+/d5/jjf57nPPefc8z3nWT7P
czoOHzfgnCxJkgf1UxEdVCTJt6KHl0nyR7WWEr4pOlD0SPUZJDobmiZJg/jp
TZJkC/Hn5knysuQnid9K8ika00l0vuizkveTvK+er9BzJvqa6GMa207yCzT2
Un33K313gOjNkreUfKzkS8V3FX+l+Es05gnNtUR0teQ9JL9G8j013wfiH9W7
7yTvJf56yXtIvlT8/ZK/Lnln8ZMlb1ZNkj7ib839ny5RW6pv76T+70h+j57b
qs9B4m9Xn5la0296P0r0ML2bpNZR7Vo9fyf5YNEX9DxA/X8VvUzrWyc6R/Qh
jX9Q8uWi96ndI/4d0XvV7hb/du49GSh+c9Fper5D/DzRv6k9Kv4D0RNqSTJM
37pafZ7kneQviv698FlcJfk/Cu//NeJ3Uf8+6n+l+LslXy/+NNE7Neav6vOm
6HS1u8QvEH2y8PovV/+3xE8Uf6rkz2vfOoqfJL6v/tNFalurTdXzbZK/Kvq6
9uozzX+uxv1b/GrxZ4p/QO9mqM/i3Lp0gvg2pXVjqPitRWfq3f3il4o+pvaw
+JWif9b4HzXPUNFJ6jdL33xH9Ha9f1qtpnZx8B3Ub4z6/S66Bv1V35biF4ne
qOcd1Ke9xn4q+oTa/xLvKXu7Wusd3KB3op+INsncZ3HiPXhKbVPxP2meZ0Xn
aV9XS/ak2hI9P5Wb/7zq/8n/XSL+Qc5b/LKqzx4dWCF+bmr5xRq7SvQx9lD8
t4Vlk2veC/Zkufo/Lv4R8R9XvS/sz0fi3xJ9AD3XmOO07vcke7bBev242pzE
+oGerNG7XwrLR4i+FGf0X9FX1D4V/73oQr27VH3GaNxi8VeIXyT6WpzvetH5
al+Kr6rPSr27jv9FH+3byeK7yIaW6/lq/rvoIvX/Rv03Vf93xX8vfmvxG6VX
vdXnJvET1O8LyfuJTpC8kHyk5B/q+Ubxq9BxyTeiw7lt8HC1X/X8iebcINpL
8lXifxa/o/jVGnML+yZ6VuH/yH9tIT1YI/mlog1qKzkL0Ss1fzPxZ7Bnhf3V
ZMkv13lcorHXin9c3/xI8t4V+6KPxTcX3VLy8zP7zd1Fz1PbPLMt/CW1Tu6j
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
                    "], 
                    VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJw1mXnYV2Max885v855z/m9GoSa1FCSifRWZEvKEhEl7btKi4QWW5HIZMnF
WAahZAuRBjOXjLlcjSGhfbdETKWSUEoKU/P9+D7zx/O+9/0897Oc57mX733/
6g8a2fnqJIqi1+Ioqqb/X+dR9KjopqKPqoiie7Mo+rP4OeL3S+AHjTcVf5T6
r6uMorpFFPUVv0PjPTVWXf19RT+hvqdEV9P4ctGXapPXNf6t2nTxT2tsjOav
1pqTJT9DfS+o77M0ip6LvUcD8bdL5j39f0h8h3IUTazms3HGqepvqPZo5Dkz
RfeTfG39byT+Hu01TvQk0SMk86bmbs691sHiy/q+neKfF/+i5K7X3Bo6byfx
X2n8gtz3cbD4fTrXSI0v1hm+EP2Txqdq7EfR9UQ/LJlHtcY29U3jrMzX+jer
7w7xN4p/X/tfrPWniG6mvk6ib5bMcaKfUduuuddWWg55+Hmp165Q2yl6sta7
h7vS+A7J3S7+7th3sEH8SM2ZI3682jLRAwufdZD4QaLHVPN5HxH/mOZeWuk7
PEH8FMl3r+a74Y6mqP9x9a2JvecXot9LPfcAtT2iJ0rmrthvyFv+kvp9pqjv
cY1drjmvih6rtkT0stS6UUetUuO/15l6iv5Wc7po/BqdZ5VknlLf9+I3qf0l
9hqsdajku4r+WvIdxY9Xqy1+V+z5g9Ve5qycUbInqh0u3btL8hN015drzwVq
x6vvDI0dklk3nuQNRFeo7yPR+9Wel3wf8d9ovLv4vqK/yy07X22S6GE67wrN
O1XrtdP4JLV+kv9M/ALRYyttN9jPbsnXU9+vmvtftfqih2h8Cfcv+bPFT1Rr
I9mPxb8vupbaobH7anK21LqCztTVvOWp7ame2kGZdYbx5zLr0hqNPy2+oVot
9V2j8eZau5naWVrvBsl8KZmZGv9RYwMkM0+tgcZbFn4D5tbM/DbYEPfF+zyr
vuHsof+tJX+R5LtX+CycCVvvxxqS7y2+v+hxkm8p+V/VN0Tj72rvbWoJNir+
Ko1NEN1a4/dpryMz69azvAf6qjV2iu8vfoDo4Zl1HZ3DN3ye2p5bqDXS2GWS
+UVjQ8UPLqwf7H0u+iv6BWwsss7Ab8mtu9gQtsR5N2nN2eL35vZ5n6b2V/jC
Hlpzg+Z3EN9TdC+1zeI7i+8tehd7xLYhbOkqzV+nc7XXfXUvrI/Y0QHBXvFB
2DH2jG+6TuO3xfaps9Q/Wvytwb88IX6h7ru1+Jdi69eMCn87d7AzvOfXWn9f
ZPsbwfnV11b7XxLO21n0gZIfrfGFGqsSXz341wWa+1hsH7hfdJdK/4cnPqyS
zOmS3671x4teqdZSfP2gH+jEDxq7NegK740fw5/hf+dW2Jf9R309ND5EcjfG
9lH4qpM1/wit9zw+XrLVxX+p8ZL6FmPP8sctY9sYtvasvmGd+PvVNoh+Tu0s
7FXzh+W20e9Ej81su8eJ/53WqlJfLa23Vv3niT9Jc2YRj9Taid+j8XtEb6rw
WpuwN+xRfWdqvHGIX+3RcY0fI/5C7ld7xJlt+Hpsj5iD7sS253t1/sWpfcxN
wT8MwBbF9xPfSHxZ6x9E/NU6XSvtN/GfxBfi1TZsTe0Q0Q0K+/LHiN+ij1T7
ObbNEA+HlR170DF07Rat8UtsmSMK+yR800q1VHRTjddEd9W2av6Z6jtDa9WI
7T/w3/jeH9VqF/aJv/lGtY+IJ5WO48TzKRV+46biT4v99vg37oLv5356avx0
jZ9DDNb4N+qbiqzaONF9Ko0xjhA/Mfea+Ie1qfdapfValaJovcZvEl1HbXds
H4R8T8n/FLvvcI01VIt1v2vRR9F/ZL7oN3jDwjqGriWJ+fu0xpLYMW9t7hhB
rNgX+755r1yy6zW/Xe73YIwYTHzlm94TvTn1tz6sb3lQ46vUV0d9SyX/QWId
4P5XqrUsWefR/aPVosRn5uxLNb+F6FoafxL9UN/rkW2im+iFqd+ON6yW+Q3h
nxA9itgjmemJMRpYjRi0VfNHZY5N3Affjg99SnM/VH9j8Xls/LBM7STx2zR+
beZ4UpXZXgbkxnj4LfwX8QBbwLfjU6aJPrDwWw3TGm9q/IHMtssdVdfZm2i8
BrEFzKS7myaZU2LfwSDRFZl9IToyPdjn5cTXYO/4SManhftZhC5q7hb1XSl6
oM7XPPOb833gN2yrrL7RGhtctq4Ti7ivuer/KnYMeSizTqKb+OSVok/TeY9K
HFMWVXgN1uJ+LtH4Io3PS4yZ7ygcb/D9e/Wt76fGO/jqraL/nXpP9ubOeLtm
mlNT868Q30Pr78gdG9FJdBM8vof11P5Q2MfvluxdmX0/Ph5fDzZjv4/1/yyt
t0sykzJj3A9S42uw782FY9scybxbGIs3FL0/Mj6cp75/JMbME8CamjMrtg/G
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
83/VQ3Rd
                    "], VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJwt00tIVVEYxfGdpV4l0pIiIXtOrOghGELQiyQy1ExLBR2YqDmqqEkPTXta
s4iGFQQZNbAHTRs1qjStzCwl7e0gErRCQoh+h3sHi/ut/17n+87Zd+9l9YfK
DyaFENZTMu1ND2FEsTIlhPwZIdxKDaEU68GSsQXYOqwMe43NxZZilVh5LIQ+
LBXLxlr4tLQQ6tXPDblNx/kqfEAuS26FtQ7+gH53+fe0Xe4q1iGbO1NfmpZr
M+M0FuN30S8sDzuHLeRLaQqrxgqxfH369Os1a49+J7A7WA81yKXzpbSVH5Qb
kquRK8I2Yv3YG6wS24Ktxbqxp1gxdh5bbGYD1Vh7hLVh/9S1WIXf+1gG1mRe
L3+PTvJZ9BMrlJvETvHzaQLbiSVRO59Df7Eyfjld4LPpD1bMz6Oz/Bmao66j
Kv0emtuKjauro73x24W1YA/UL6lZj0y+0t5/9U0bfNtmrNv+VeA7ZIaxj9bq
PFtCz9TTlCF3hP8Ri5+J6Gy8wHfrNR6Ln4nobPRHe4+NYanYJP+ESrBm6pL5
QEVm3ZCppWHrS7A18lf4/fQJW40VYNf42d5vVP0Y+26tEWuiMXUBts1aJ99g
xvXo3SjPjKPYBK2ynhOdN/kKmSGsnV+UEl8bjvrhnfwAbfLsJawRu8m/it4l
+t+wqVh836L9+6ZfVXQ3sMP8rMSd6eff0jE+M3FnBvnPdDm6a4m9/8KP0EU+
N3EHR/nfsXgd3ctRM/aZUU7vkuPfEb1zq//tP5uCeBc=
                    "], 
                    VertexColors -> None]}]}, {}, {}}, {{
                 GrayLevel[0], 
                 Line3DBox[CompressedData["
1:eJwl0u1rzXEcxvGP4zg7bje3w8Y2reVmHaxhySSNaa21lkwjaUnygMeSPd5/
4JkkRpKkSEiaY2ZuNtuZJElakiRJWhJePx68u97X9f11zvecflXdxzuOTYmI
OyhKRSSelX8yESV81fSImXoFny1LiyJyfI29WG/ktXwuX+esVc/p8/V9fC1f
yDudHdXX66X6CV7Hl/AeZ716vV6mn+Yb+DJ+wVmfvkmv0G/wBl7FnzrL6xez
ETtcPG0b0yd4E8qmRRT0Rr+lWR/nJz0zPDViN/bguj6Caxj3uVttn/gWWdCv
8ue4gs22MdtH3sAvJ3fAJYzaN9o+8Hr5Qu/jQziPOtuIbSL5n/g5OZjcxXZW
5mzvZa08k3ynfUCu1juwEs9s72zV/DBqkE/uYF/B21GJt7ZyeQjL8cR5v20p
b8NiDNne2BbwbizCff2xfR5vRQle22bJg5iDQef3bDN4C7J4ZHtlS/MDyOCu
PmBP8V0IvLT9wn7+Wz50flv+xE7bpCzgO7r0H/IW8p77JptsX5P/Gp+xV/8i
Hzi/KbfrR7ANp1L/vjJqZPJSd6bdhfZn/r/nfwE5BVn8
                  "], 
                  VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwt0ntkVnEcx/HfenqaSZJJZpLJJEmSzGS2JFmTdJOZSWX6I9r/+2PrsnVX
bV3WVZJkJjOZyaQlSZKZ1NO21m5tq126mtVW6nWI5+3z/n6+P8c5zzkZe0q3
HkgKIbSicGYIfqFsRgjj8RBiFiPYrsyNhbAPa9Fk35TijNxpHpXt+IJ15m9y
yr5ZTqBQ90O+wiTWm3/JB2h27o8s0k3L1/iLDeYk/LRvMcd5MWJImOv1yTwf
KXgYXU83h+/CbHTo5soCzMOE/SPdfL4bqegy39Mv4JuQhse6Ft1Cvhfp6NYt
kpuRge/2T3SZvASL0WNu0C/hW7AUT3VfdTfkMnOfXC5vRv+X/pm8hRW6AflZ
t5Lf5s9xJ3oXulW6Qb5ajpnv8heoQ5ZuWI7qs3k9fxk9F0Z0a3SfeE6U5gbe
hkbs0G3DfZ7vXffOCmE/f+M7yOMbdQk+7sxv83W7j65xWl7DMB/CKX4Vg/yk
vIIPfAAn+GX08+OyFn28F8f4JfTwo/Ii3vNuVPELeMcr5Xl08U4c4TXo4Ifl
Obzlh2Q1DmLa/Z6VCX2FPBM9Fy+Xxb5p61Ak4/+//X/bk3QV
                  "], 
                  VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwt0j1Pk2EYhuFb0VJRYWPCCiJu+gvcHDDBpAmJi4MhjUFsSsvI4AwToiAV
kA8Twz9w1MmNCVDBlpa2tuIXcXDHeJA4nDmup8Obp2/blykM509FxJTun4lo
51ZbxJNzEdvc0az9gceJiI/8pF099fkeP+uZXWJZc/a89u2KnttVHmjBLqpm
1/XCbvCLFu0lNe2Wlu2vPNRLe0Xf7O9atX/wp9bsdf2yj/TK/s2/7jtzOqLn
rDv6XpdYYoplXuY+e1lhH6u8wn4d2FdZ4wCvqW7f8tw7XlrOsxvOY8w6//Hy
dpxbbOq9vck3fMe32rBfs8giFzRtP+YkC8zrkX2X93ibgxqyb/DmyV15nd1M
MZeMSLhD1l26nNNMO0/4TTudx5nTRTvLC3zIUZ23H7CDGXp9McLk///EP0c9
TbE=
                  "], VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwl02VTFlEYBuAl7O4O7O7u7sTxD/jNAjuxG7s7EBFBRRFbsbv+iiJhYF1n
/HDN/Z772d05e3behFnJiUkxURQVkxIbRbPjomgOc5nHfG5XiKIkmcwCFrKI
xSzhvPlSuYzlrGAlq1hNCmu467q1ch3r2cBGNrGZC+Zb5Fa2sZ0dXNGnyp3s
Yjf3dXvkXvaxnwMc5BAXzQ/LIxzlGMfJ0Z+QJznFaR7qzsiznCMtvBPpYU9c
Ms8IzyQzrMniuj5bXg575CqPdDnyWpiTyw2y9XnyJrfCmYZedyecC/fCO4V3
1D0IeyKfJ9aP5OPwm6c8C8/RP5cveMmrcC661/INb8N11u/kez7wkU/hXt/5
s/xCAV8ppCg83z3FsoRv4bytv8sf/KSUPN0v+Zs//CWKt0d9jIwljlTreFmG
spQjV1deVqAilcjSVZZVqEo1qpOvryFrUovaFOjqyLrUoz4NyNQ3lI1oTBOa
0ozmFJonyBa0pBVFutayDW1pR3sy9B1kRzrRmS50pRsl5t1lD3rSi2+63rIP
felHf9L1A+RABjGYIQxlGD/Mh8sRjGQUoxnDWMYxnjTXTZATmcRkpjCVaZSa
T5eJzGBm/P//8z9/cIBM
                  "], VertexColors -> None]}, {
                 Opacity[0.45], 
                 
                 Line3DBox[{1814, 2821, 2566, 1813, 2820, 2565, 2689, 1812, 
                  2819, 2564, 1811, 2818, 2563, 2688, 1810, 2817, 2562, 1809, 
                  2816, 2561, 1808, 1331, 1807, 2815, 2560, 1806, 2447}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{45, 1152, 44, 1151, 1150, 43, 1149, 42, 1148, 
                  1147, 41, 1146, 40, 1145, 39, 1144, 38, 1143, 37, 1142, 
                  980}, VertexColors -> None], 
                 
                 Line3DBox[{1825, 2045, 2696, 1824, 2823, 2568, 2695, 1823, 
                  2044, 2694, 1822, 2822, 2567, 2693, 1821, 2043, 2692, 1820, 
                  1343, 1819, 2042, 2691, 1818, 1341, 1817, 2041, 2950, 2417, 
                  2448}, VertexColors -> None], 
                 
                 Line3DBox[{1838, 2828, 2573, 1837, 2827, 2572, 2700, 1836, 
                  1358, 1835, 2826, 2571, 2699, 1834, 1355, 1833, 2825, 2570, 
                  1832, 2047, 2698, 1831, 2824, 2569, 1830, 2046, 2697, 1829, 
                  2449}, VertexColors -> None], 
                 
                 Line3DBox[{1863, 2838, 2580, 1861, 2837, 1370, 1859, 2836, 
                  2579, 1857, 2835, 1367, 1855, 2834, 2578, 1853, 2833, 2577, 
                  1851, 2832, 2576, 1849, 2831, 2575, 1847, 2830, 2574, 1845, 
                  2450}, VertexColors -> None], 
                 
                 Line3DBox[{1877, 1383, 1876, 2842, 2584, 2718, 1875, 2059, 
                  2717, 1874, 2841, 2583, 2716, 1873, 2058, 2715, 1872, 2840, 
                  2582, 1871, 2057, 2714, 1870, 2839, 2581, 1869, 2056, 2713, 
                  1868, 2452}, VertexColors -> None], 
                 
                 Line3DBox[{1902, 2852, 2593, 1900, 2851, 2592, 2731, 1898, 
                  2850, 2591, 1896, 2849, 2590, 2727, 1894, 2848, 2589, 1892, 
                  2847, 2588, 1890, 2846, 2587, 1888, 2845, 2586, 1886, 2844, 
                  2585, 1884, 2453}, VertexColors -> None], 
                 
                 Line3DBox[{1916, 2074, 2741, 1915, 2856, 2597, 2740, 1914, 
                  2073, 2739, 1913, 2855, 2596, 2738, 1912, 2072, 2737, 1911, 
                  2854, 2595, 1910, 2071, 2736, 1909, 2853, 2594, 1908, 2070, 
                  2735, 1907, 2455}, VertexColors -> None], 
                 
                 Line3DBox[{1941, 2866, 2606, 1939, 2865, 2605, 2754, 1937, 
                  2864, 2604, 1935, 2863, 2603, 2750, 1933, 2862, 2602, 1931, 
                  2861, 2601, 1929, 2860, 2600, 1927, 2859, 2599, 1925, 2858, 
                  2598, 1923, 2456}, VertexColors -> None], 
                 
                 Line3DBox[{1955, 2089, 2764, 1954, 2870, 2610, 2763, 1953, 
                  2088, 2762, 1952, 2869, 2609, 2761, 1951, 2087, 2760, 1950, 
                  2868, 2608, 1949, 2086, 2759, 1948, 2867, 2607, 1947, 2085, 
                  2758, 1946, 2458}, VertexColors -> None], 
                 
                 Line3DBox[{1980, 2880, 2619, 1978, 2879, 2618, 2777, 1976, 
                  2878, 2617, 1974, 2877, 2616, 2773, 1972, 2876, 2615, 1970, 
                  2875, 2614, 1968, 2874, 2613, 1966, 2873, 2612, 1964, 2872, 
                  2611, 1962, 2459}, VertexColors -> None], 
                 
                 Line3DBox[{1994, 2104, 2787, 1993, 2884, 2623, 2786, 1992, 
                  2103, 2785, 1991, 2883, 2622, 2784, 1990, 2102, 2783, 1989, 
                  2882, 2621, 1988, 2101, 2782, 1987, 2881, 2620, 1986, 2100, 
                  2781, 1985, 2461}, VertexColors -> None], 
                 
                 Line3DBox[{2019, 2894, 2632, 2017, 2893, 2631, 2800, 2015, 
                  2892, 2630, 2013, 2891, 2629, 2796, 2011, 2890, 2628, 2009, 
                  2889, 2627, 2007, 2888, 2626, 2005, 2887, 2625, 2003, 2886, 
                  2624, 2001, 2462}, VertexColors -> None], 
                 
                 Line3DBox[{2034, 2220, 2219, 2916, 2033, 2898, 2636, 2809, 
                  2032, 2118, 2808, 2031, 2897, 2635, 2807, 2030, 2117, 2806, 
                  2029, 2896, 2634, 2028, 2116, 2805, 2027, 2895, 2633, 2026, 
                  2115, 2804, 2025, 2464}, VertexColors -> None], 
                 Line3DBox[{2156, 2039, 2687, 2648, 1801, 2812, 2558, 2686, 
                  1800, 2038, 2685, 1799, 2811, 2557, 2684, 1798, 2037, 2683, 
                  1797, 2810, 2556, 1796, 2036, 2682, 1795, 1320, 1794, 2446},
                   VertexColors -> None], 
                 Line3DBox[{2443, 2442}, VertexColors -> None], 
                 Line3DBox[{2445, 2444}, VertexColors -> None], 
                 
                 Line3DBox[{2451, 1846, 2704, 2049, 1848, 2705, 2050, 1850, 
                  2706, 2051, 1852, 2707, 2052, 1854, 2708, 2053, 1856, 2709, 
                  1368, 1858, 2710, 2054, 1860, 2711, 1371, 1862, 2712, 2055, 
                  1864}, VertexColors -> None], 
                 
                 Line3DBox[{2454, 1885, 2722, 2061, 1887, 2723, 2062, 1889, 
                  2724, 2063, 1891, 2725, 2064, 1893, 2726, 2065, 1895, 2728, 
                  2729, 2066, 1897, 2730, 2067, 1899, 2732, 2733, 2068, 1901, 
                  2734, 2069, 1903}, VertexColors -> None], 
                 
                 Line3DBox[{2457, 1924, 2745, 2076, 1926, 2746, 2077, 1928, 
                  2747, 2078, 1930, 2748, 2079, 1932, 2749, 2080, 1934, 2751, 
                  2752, 2081, 1936, 2753, 2082, 1938, 2755, 2756, 2083, 1940, 
                  2757, 2084, 1942}, VertexColors -> None], 
                 
                 Line3DBox[{2460, 1963, 2768, 2091, 1965, 2769, 2092, 1967, 
                  2770, 2093, 1969, 2771, 2094, 1971, 2772, 2095, 1973, 2774, 
                  2775, 2096, 1975, 2776, 2097, 1977, 2778, 2779, 2098, 1979, 
                  2780, 2099, 1981}, VertexColors -> None], 
                 
                 Line3DBox[{2463, 2002, 2791, 2106, 2004, 2792, 2107, 2006, 
                  2793, 2108, 2008, 2794, 2109, 2010, 2795, 2110, 2012, 2797, 
                  2798, 2111, 2014, 2799, 2112, 2016, 2801, 2802, 2113, 2018, 
                  2803, 2114, 2020}, VertexColors -> None], 
                 Line3DBox[{2466, 2465}, VertexColors -> None], 
                 Line3DBox[{2468, 2467}, VertexColors -> None], 
                 Line3DBox[{2470, 2469}, VertexColors -> None], 
                 Line3DBox[{2472, 2471}, VertexColors -> None], 
                 Line3DBox[{2474, 2473}, VertexColors -> None], 
                 Line3DBox[{1093, 889}, VertexColors -> None], 
                 Line3DBox[{2476, 2551}, VertexColors -> None], 
                 Line3DBox[{2478, 2548}, VertexColors -> None], 
                 Line3DBox[{2480, 2545}, VertexColors -> None], 
                 Line3DBox[{2482, 2481}, VertexColors -> None], 
                 Line3DBox[{2484, 2483}, VertexColors -> None], 
                 Line3DBox[{2486, 2555}, VertexColors -> None], 
                 Line3DBox[{2488, 2553}, VertexColors -> None], 
                 Line3DBox[{2490, 2550}, VertexColors -> None], 
                 Line3DBox[{2492, 2547}, VertexColors -> None], 
                 Line3DBox[{2494, 2493}, VertexColors -> None], 
                 Line3DBox[{2496, 2495}, VertexColors -> None], 
                 Line3DBox[{2498, 2497}, VertexColors -> None]}, {
                 Opacity[0.45], 
                 
                 Line3DBox[{7, 1794, 22, 1806, 37, 1817, 52, 1830, 67, 1847, 
                  1848, 82, 1869, 97, 1886, 1887, 112, 1908, 127, 1925, 1926, 
                  142, 1947, 157, 1964, 1965, 172, 1986, 187, 2003, 2004, 202,
                   2026, 217}, VertexColors -> None], 
                 
                 Line3DBox[{1118, 1320, 1119, 2815, 1330, 1143, 1341, 1157, 
                  2824, 1352, 1171, 2831, 1363, 2705, 1185, 2839, 1374, 1199, 
                  2845, 1385, 2723, 1213, 2853, 1396, 1227, 2859, 1407, 2746, 
                  1241, 2867, 1418, 1255, 2873, 1429, 2769, 1269, 2881, 1440, 
                  1283, 2887, 1451, 2792, 1297, 2895, 1462, 1310}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1120, 1321, 2682, 1121, 1331, 1144, 1342, 2691, 
                  1158, 1353, 2698, 1172, 2832, 1364, 2706, 1186, 1375, 2714, 
                  1200, 2846, 1386, 2724, 1214, 1397, 2736, 1228, 2860, 1408, 
                  2747, 1242, 1419, 2759, 1256, 2874, 1430, 2770, 1270, 1441, 
                  2782, 1284, 2888, 1452, 2793, 1298, 1463, 2805, 1311}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{9, 1796, 24, 1808, 39, 1819, 54, 1832, 69, 1851, 
                  1852, 84, 1871, 99, 1890, 1891, 114, 1910, 129, 1929, 1930, 
                  144, 1949, 159, 1968, 1969, 174, 1988, 189, 2007, 2008, 204,
                   2028, 219}, VertexColors -> None], 
                 
                 Line3DBox[{1122, 2810, 1322, 1123, 2816, 1332, 1145, 1343, 
                  1159, 2825, 1354, 1173, 2833, 1365, 2707, 1187, 2840, 1376, 
                  1201, 2847, 1387, 2725, 1215, 2854, 1398, 1229, 2861, 1409, 
                  2748, 1243, 2868, 1420, 1257, 2875, 1431, 2771, 1271, 2882, 
                  1442, 1285, 2889, 1453, 2794, 1299, 2896, 1464, 1312}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1124, 1323, 2683, 1125, 2817, 1333, 1146, 1344, 
                  2692, 1160, 1355, 1174, 2834, 1366, 2708, 1188, 1377, 2715, 
                  1202, 2848, 1388, 2726, 1216, 1399, 2737, 1230, 2862, 1410, 
                  2749, 1244, 1421, 2760, 1258, 2876, 1432, 2772, 1272, 1443, 
                  2783, 1286, 2890, 1454, 2795, 1300, 1465, 2806, 1313}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1126, 1324, 2684, 1128, 1334, 2688, 1147, 1345, 
                  2693, 1161, 1356, 2699, 1175, 1367, 2709, 1189, 1378, 2716, 
                  1203, 1389, 2727, 2728, 1217, 1400, 2738, 1231, 1411, 2750, 
                  2751, 1245, 1422, 2761, 1259, 1433, 2773, 2774, 1273, 1444, 
                  2784, 1287, 1455, 2796, 2797, 1301, 1466, 2807, 1314}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1130, 1326, 2685, 1131, 2819, 1336, 1149, 1347, 
                  2694, 1163, 1358, 1177, 2836, 1369, 2710, 1191, 1380, 2717, 
                  1205, 2850, 1391, 2730, 1219, 1402, 2739, 1233, 2864, 1413, 
                  2753, 1247, 1424, 2762, 1261, 2878, 1435, 2776, 1275, 1446, 
                  2785, 1289, 2892, 1457, 2799, 1303, 1468, 2808, 1316}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1132, 1327, 2686, 1134, 1337, 2689, 1150, 1348, 
                  2695, 1164, 1359, 2700, 1178, 1370, 2711, 1192, 1381, 2718, 
                  1206, 1392, 2731, 2732, 1220, 1403, 2740, 1234, 1414, 2754, 
                  2755, 1248, 1425, 2763, 1262, 1436, 2777, 2778, 1276, 1447, 
                  2786, 1290, 1458, 2800, 2801, 1304, 1469, 2809, 1317}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1136, 1520, 1521, 2687, 1137, 2821, 1339, 1152, 
                  1350, 2696, 1166, 2828, 1361, 1180, 2838, 1372, 2712, 1194, 
                  1383, 1208, 2852, 1394, 2734, 1222, 1405, 2741, 1236, 2866, 
                  1416, 2757, 1250, 1427, 2764, 1264, 2880, 1438, 2780, 1278, 
                  1449, 2787, 1292, 2894, 1460, 2803, 1306, 1601, 2916, 1602, 
                  1603}, VertexColors -> None], 
                 Line3DBox[{1790, 1308}, VertexColors -> None], 
                 
                 Line3DBox[{1309, 2804, 1461, 1296, 2791, 1450, 2886, 1282, 
                  2781, 1439, 1268, 2768, 1428, 2872, 1254, 2758, 1417, 1240, 
                  2745, 1406, 2858, 1226, 2735, 1395, 1212, 2722, 1384, 2844, 
                  1198, 2713, 1373, 1184, 2704, 1362, 2830, 1170, 2697, 1351, 
                  1156, 2950, 1340, 1142, 1789}, VertexColors -> None], 
                 
                 Line3DBox[{1315, 1467, 2897, 1302, 2798, 1456, 2891, 1288, 
                  1445, 2883, 1274, 2775, 1434, 2877, 1260, 1423, 2869, 1246, 
                  2752, 1412, 2863, 1232, 1401, 2855, 1218, 2729, 1390, 2849, 
                  1204, 1379, 2841, 1190, 1368, 2835, 1176, 1357, 2826, 1162, 
                  1346, 2822, 1148, 1335, 2818, 1129, 1325, 2811, 1127}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{1318, 1470, 2898, 1305, 2802, 1459, 2893, 1291, 
                  1448, 2884, 1277, 2779, 1437, 2879, 1263, 1426, 2870, 1249, 
                  2756, 1415, 2865, 1235, 1404, 2856, 1221, 2733, 1393, 2851, 
                  1207, 1382, 2842, 1193, 1371, 2837, 1179, 1360, 2827, 1165, 
                  1349, 2823, 1151, 1338, 2820, 1135, 1328, 2812, 1133}, 
                  VertexColors -> None]}, {}, {}}}, 
              VertexColors -> CompressedData["
1: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
K4vnXqfPBlPnp6WL5hb0OwLf669l1VPj4p8DDrg64IrOl3vR843rPEZF8dBT
eTJczRc3+4EH4KEn83Vxy5fGbV4vaz9XcWaQhzxkdcCVta6UdY6BfuXqB5xf
OG7nlbLOQ0Wde8oaly96AAcccMABBxxwwPmCJ8z0050yTUQEta8M9nqnhvi+
VmtJs+sp7Pxb8NNU4z7VXf1c2wM4njjX6wTkQZ6P8oCrBo7beQs44OqMi/fp
q/5fpzz9NZ+nDFlAyn/ooHMnFq3HZPNR03iaj5roOtCNqp/yzR/nPAXBue6X
coztK5Lbpa+IrP4hsvqEcM3Pzo4dAgr3XbrzWy70L2L7NrzVpW+DrP4Msvow
4LauCktz6H4C7X6R+7nQL6uOXla9vKy6eNx4E2xl6ruH+Thzol9WXbOs+mXc
+JGFR/Zi8NJ4bvTLqjOVVU+KGz+y8HPseaLDUb0VLn67svFXzQ9XVVxZzwU3
HgCXXg8ZaWto/yd3ymiF1iNzjcubV8NYC1re7XtbLOz/hq2Dni6nDvpl9b/q
vhPrufwsclNkLxHxKHVcxAiB/DrrIY8Zf0ZnPZ7rRIxzVZet7Odl4XciVu9b
EZFUkdjv7mP5dd9mrD3xmNd9c433dF25steJyZ2rP+qR+g+VzC8wVKG6da7x
nq6LV/Y68W5aUHGc1H/S4o6vKaKf73X3XOM9Xdev7HVSe/M9J8ofcF+zzlGV
+gZwjXPdl6C7OFfxfHnrx0EYbJpM6okRPa1oQM7VLDZOch7zuKss/IlOWtE5
Em98lheK9kPj6n0qj+eyrIgx1VmtxH7PW+m5EyT9w3V/Zvz5uqYSKX/evp45
5wO88eBT5nt53TILCq/aGJzek3z6p49tKIsREenuTs6r2iX+dosR428vjJP2
t5vY9WyJiT8pC9drv0d/R7gT16zQ7wjy+Jx7NtM6PUVE5PsYPF2O9OM1Yf3S
mV38Ur78v4CbpxWN6+q836P7/Wy/e5oFpLzvQtNUIxXy30JfY/DrGT17ftav
XJBHnecel4oC0POc736OCYtvUNPvEbjlrXGd39vd58WX+SpKXt1w3L5HKPs7
SFd+9n40rsz68k3iv2XvuD4J+5M4eFHX5bv8YuzsVxb+f0tebnI=
               "], 
              VertexNormals -> CompressedData["
1:eJzsvXk8VP3//y+phFIUUrKEhMpOtrEXlZDslVS2ZKtsLfY9W0RFypJEWWef
4SBEkSxZS0IlCUVk7TtjptdMc/v1ua7399bvuj6fz3f6836b23TmcV7nnNfz
4TyeT0E7N5PTjAwMDAmsDAzLGX73bxz2b/G5+2E3r9/NxDPxsR56IuyN/8mF
crMv+iaX4Xork8svbUnB/eR+ReHh313asU0/xuKieBHYn1ypfubbKZ9xzMXQ
zjs2Qi2YnzzoXd1ATM4qDL+VicZ4y2f0T+5+x3rBpFgAfeHc6qxo9CrACz8w
Z+7UUETh2zeEHT0hhPrJnx1AhqxdYYRc4ct9WH9QBfmT54ldqUW+PY3Y7Hdm
V1WDKeKf0u0/5cE8H+8hhHzx+52+udwoOwh0th6SGBG/HYE7mH3LIMXYDuis
pX4+Jo0hBWvKcOljScZ5oPORqOgrXm3ZGO5WTIvW61Cgs90+1ROp7iXoU6IH
BdZKJgM9dzkzBvKwVaDuedef2QTdA3pe3WZXIBf3DOmzgyP78BM40LPh0omg
NKcOhGdlxXC5+2OgJ9edIoUtqAF486COmnVfM/yf0u0/5Z1RKj6XvhnhGQqb
uVZu3wZ07qspnBryNcXVTI/fa+TdCXTWOLg3he2GOXZ1TcfDTwpyQOfqaET+
hLkVJptf85j+GWWgs72q3cKWShu0zOH2rsEQDaCzdoHWfFD3MVRkeL4rclYb
6HzxITuzyRFb5DQi+ZhB1F6g84bIiiM1m08gXs4XJViL7Qc6N4dr2Tk/PgE/
8XZimuWZ4b+us3dUz+sNvpJlyXqGgVZPp4CeyH3cYXb9ovihTbFfGdHfgZ52
pvDlaGZBnMiBmaYx8Wmg5zMc9u4JWR5sK/PDUb/OCaCntORKj/DcdZhdawJH
/ObHgJ48pZN3Dp5Zic6wmUvufjAE9FR9iHTne7CAfDIm/ezwqX6gp4+k3MVd
NhMIqxaG3dfR3UDPtOfz+78yfIQ3qt7dmbKsFeh5AD53U3pZX6nU1rOuqGtP
S/8pPX/Ht9oeF9PYwV52Wb1L2qu/A+i8vtFSYd/bRVz+RvGazKkmoPNCbhqH
ifkINpIdfmTQtwroPHNgygjR0onZ8dDq8VhIKdC57LIP2mx9Dbrb1TNntX0W
0Bm+uDDX5FeMmsfdHB32uAZ0VovLfhoWnIbMsRYPZp0KADpvrV3Wnfk1DMFo
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
Pv4o3N7y6g24vnTCsHsRy8aQSKXodObeWsDvR5NyKOiwX3Mou2bT20OnriN4
fkAZvCmegL+ciea/GWgGH/m6S2ohRB6sh7CIiweHh9ThtnunfBfD+AC/TM6n
WNDkU7KFi9NtUt+VVIQFHvReoORTHlz7Vm+jmVO8DsMcnbo5CqyfAKkro4rL
Y4tFJR2Clt30AHzNpSsu/j2GRS0dT4VGa2TBunrem/vCHiVXlLwogoFF8/7x
9SZwKt35iJwCXufpUwE9kVlwH8bYSOWcwLVjbVLVBHnEM8F5Nz4rqL5s5ALm
2op7h/MF9cD5NewoVai034BWso94IjxIyc8qXFMTygwvQXpftR+YDqTkZXTj
rBMWwowQZyYerevZKgHOS3zweG/8us+lebqLh09+oORiysMKkhe0Iku6JfOZ
lFmcgc4cDgbL35eLFLPtr79dVErJv+Q1vXbcl1BVeAcvkiDKev+/7XtKjXmH
P+kxC+CPmgfyxVv2A/3LXaHb7pHr8PNvui5Uo1sAf/J2e4+zIgJ7oSgpNsAr
gNJvp8jitvdwJvYAjKPMT/As4Hsa4+bqGQww3Qil2ym+lLznFScNw+ZxOQy7
tO35QkcmwLVzcDuZnXtRKiHjW2E/isF5tFuYrZPvq0VVsyjJzM3eAlyp+M1x
TVUP5CLi6onRIUruW2zxttOKBgskT9lbKGSHNOAfnpLyQe+if80H5XC0ortK
h+Fs3ltYryvUAM7sYBGX15BUeuCLwEBUnidYD3LNPBfb4y+VjjeZmfLctgS8
cSMpN/SJ+9fckLrzj7cO1mtLOEyQZTwmo2CdlBmo2sdXo4oE2KpzsyRvgevr
onfGQNHKu0XjbhMfkrIDAZ8+87oGx6ZfaKwiLhi/bRdYVxVj4XdhzVKFB+Jf
b+9Q3vCPrTfbw6ehwzdmcd0Nc+bc9mVgnZj0CohLlIRgv7hNMDpwUPK/x458
9k8wX4tZ+84tsKL+FbjfOrsv52/3uo462iinxZXuCM7v5pa6RlgWH9L0/erH
Z0Yp+abKDe+PrOLJhstc2nLMeZk/OF/CydUih16Jl+aol9i9P0HJMWF/xK/8
Xl5cHPQYwXZELgHo3xJg81Rlj2JRbcGVUwIvKH1C2CxyTT+1FRV819++7k56
YsFf6XD4zoGFR5gs3N706xvgL64AHbq/2K948+0lBsm2LbxtJxqsc91iD6Ea
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

               "]], 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
              DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["x", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["y", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
              PlotRange -> {{-1.4806753600087337`, 7.452407688226445}, {
               14.946168411430827`, 
               25.559124902442917`}, {-8.17203068770388*^-15, 
               4.903218412622328*^-15}}, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n  "}]}],
    Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, \
-1.48068, 7.45241}, {y, 14.9462, 25.5591}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max4734$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`max4736$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min4733$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min4735$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$3268120$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min4733$\
3268125$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4734$3268126$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min4735$\
3268127$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4736$3268128$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max4734$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`max4736$\
$ = 0.5, CalculateUtilities`GraphicsUtilities`Private`min4733$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$3268120$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4733$\
3268125$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4734$\
3268126$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4735$\
3268127$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4736$\
3268128$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    ContourPlot[((-
                    E^((-$CellContext`x) (1 + $CellContext`y))) (
                    1 + $CellContext`y)^(-2)) (
                    1 + $CellContext`x + $CellContext`x $CellContext`y), \
{$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$], 
                    (
                    Piecewise[{{
                    2.985866164108855 + 
                    4.774934421289806 Tan[1.5040801783846716` #], # < 0}}, 
                    2.985866164108855 + 
                    4.774934421289807 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$], \
-1.4806759980861854`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$]], \

                    (Piecewise[{{
                    2.985866164108855 + 
                    4.774934421289806 Tan[1.5040801783846716` #], # < 0}}, 
                    2.985866164108855 + 
                    4.774934421289807 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$ + 
                    0.008933084324390082, 
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$]], 
                    7.452408326303896]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$], 
                    (
                    Piecewise[{{
                    20.25264665693687 + 
                    5.6728646747100715` Tan[1.5040801783846716` #], # < 0}}, 
                    20.25264665693687 + 
                    5.6728646747100715` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$], 
                    14.946167653362398`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$]], \

                    (Piecewise[{{
                    20.25264665693687 + 
                    5.6728646747100715` Tan[1.5040801783846716` #], # < 0}}, 
                    20.25264665693687 + 
                    5.6728646747100715` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$ + 
                    0.010612958007148947`, 
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$]], 
                    25.559125660511345`]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4733$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4734$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4735$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4736$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVt9v0zAQbikwfjP4D5B4RrAiBA9Igw7GpAElKe/\
1kkti4drBdrbBPw8+u0matasU0wGa0odTfWk+33333fUeHYkg6fd6PXXVmA+\
CxckWnh4aMxKzXBQ8fneaS1CKCp5cwWe3jAlB7wEjPyB2vuvGvBdyRrQ7v8b3CYsKRjR81ZRRTUFN9\
yXJMxqp2jOW9Nj8ZMpERBj9CY+HOy9ePh2+cjAYy5hoDZKrYVvIPJNEQdJDoGvGvGWEf3PHB+\
XxU8FYCN8L4BGo+8Y7kSQ2MIIThvl433q5mbqDiWnCYyLjC6fJynPU9gKlJeXpBGY5vnE+Wc/\
aAhOZKsfN3ZKbdQpy4d/AByK0MTmPTdqeLYF+YVwy+\
s7K6p9zN8Dzblt4KU5WE4f5vWHIG9H0GNQynU9a18kxUnWtjX7O1UXNl40Gef6Uqf+\
XDqnSy2HstA0DZkemxqu1twz/vC28yLHr5+K+\
Z8xn5ygBVw2HSnAfRVyweRTNlAdOou3TVblxOIzbFd8hOn0qWOEEJs6yX2x/\
bFfg9aYQYu2mG5AOr2dAADkYV2y53aMp1aOMSBIZ4Pl1/\
bLJJqIOxePO9rWnPKZmgDlC1i1PaA6ShboTHWVf/\
qi4lVzONBnyfsA1pCDXiv4m1kcacnk8EZ6RhHhBU6/eHFZJjYn0lv2gBAlzwilC0l/mY7+\
5h4uVQKr2JapLOhYHtjSn/kn0ywIfAk911tyxPUeXd9tiNoE4qVUX0CRZnDabY7rfZLpxQ3Og+\
5LgWxL/gd5tCt2m8Fc3haU9uFsTujWhWxO6NaFbE/7fNcFGjP9KvwHL4LiW"]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], 
       "\n  "}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form of the integral", "scanner" -> 
     "Integral", "id" -> "AlternateForm", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form of the integral", "scanner" -> 
     "Integral", "id" -> "ExpandedForm", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}]}], "-", 
                   FractionBox[
                    RowBox[{"x", " ", "y", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]], "-", 
                   FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "ExpandedForm__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = 0", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAt `1`x=0.", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, 0, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], "+", 
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "+", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    SuperscriptBox["x", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox["x", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "5"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 0, 5, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]]}], ",", "0", ",", 
                    FractionBox["1", "2"], ",", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "y"}], ")"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]}]}], "}"}], ",", "0",
                     ",", "5", ",", "1"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Taylor series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = \[Infinity]", 
     "scanner" -> "Series", "id" -> 
     "SeriesExpansionOfTheIntegralAt `1`x=Infinity", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, Infinity, \
4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "x"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
              RowBox[{"(", 
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["x", 
                    RowBox[{"y", "+", "1"}]]}], "-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "x"], ")"}], "13"], ")"}], 
                    SeriesData[$CellContext`x, 
                    DirectedInfinity[1], {}, -1, 13, 1], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", "y"}]]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]]}]}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "13", ",", "1"}], "]"}]}, 
                 "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                ")"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "int", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "IntegralsWord", "desc" -> "an integral", "input" -> 
          "*C.int-_*IntegralsWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathematicalFunctionIdentityPropertyClass", "desc" -> 
          "a function property", "input" -> 
          "*C.int-_*MathematicalFunctionIdentityPropertyClass-"}, {}]}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "", "timedout" -> "Plot", "timedoutpods" -> "", "timing" -> "2.501", 
    "parsetiming" -> "0.68", "parsetimedout" -> "false", "recalculated" -> 
    "https://www4d.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa3993176g608ddi2dai84000012c966iac176294g4427725388962737750", "id" -> 
    "MSP3994176g608ddi2dai8400005cfi196ce2bdi9a0", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "29", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3995176g608ddi2dai8400003eh9fg86335bc2984427725388962737750", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2020, 7, 13, 18, 31, 28.60136`8.20896166592648}, "Line" -> 18, 
    "SessionID" -> 26364357541821158487}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "int x Exp[-x(y+1)] over x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1416., {1327., 1337.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.803667889410035*^9, 3.8036679421967993`*^9}, {
   3.8036679863183517`*^9, 3.803668008396181*^9}, 3.8036680707126207`*^9, {
   3.8036681801768503`*^9, 3.803668207537087*^9}, 3.8036682887727203`*^9, {
   3.803668584572397*^9, 3.803668597706293*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"8406b824-049c-4daf-bf78-a6761ec30c12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"x", "^", "3"}]}], "]"}], ",", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.80374779402736*^9, 3.803747811127912*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"815d425f-1b79-4aa2-87f9-e718e868bc85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox["x", "3"]}]], " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.803747812386426*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a499e68b-8ace-4094-bfa7-39da9283d9ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 53 (p.347)", "Subsection",
 CellChangeTimes->{{3.803999855350484*^9, 
  3.803999873752048*^9}},ExpressionUUID->"46e615d2-7fdf-4135-9781-\
6acbbf835908"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"theta", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"y", "/", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Jacobien", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"theta", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Det", "@", "%"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "==", 
     RowBox[{"r", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "&&", 
    RowBox[{"theta", "\[Equal]", 
     RowBox[{"theta", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8040002446866426`*^9, 3.8040004383037558`*^9}, {
   3.804000513576067*^9, 3.804000548941469*^9}, {3.804000963545809*^9, 
   3.804000990856612*^9}, {3.804001064702166*^9, 3.80400107908604*^9}, {
   3.804001134806087*^9, 3.804001170135556*^9}, {3.804001516493143*^9, 
   3.80400151885966*^9}, 3.804001581652397*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"0086c69e-da36-48ef-a062-79abbd3787ca"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["x", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      FractionBox["y", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]]},
     {
      RowBox[{"-", 
       FractionBox["y", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}], 
      FractionBox["x", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.804002644112218*^9},
 CellLabel->
  "Out[65]//MatrixForm=",ExpressionUUID->"d91def33-1c47-4fc3-bb9c-\
9354694ee23c"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]]]], "Output",
 CellChangeTimes->{3.804002644116391*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"fb4a3794-2f97-49cf-adfb-48e3b960ef24"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "\[Equal]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x_", "2"], "+", 
       SuperscriptBox["y_", "2"]}]]}], "&&", 
    RowBox[{"theta", "\[Equal]", 
     RowBox[{"ArcTan", "[", 
      FractionBox["y", "x"], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.804002644872007*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"31296da2-b32b-4adb-8296-ec1e748767e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 54 (p.347)", "Subsection",
 CellChangeTimes->{{3.8040025125643044`*^9, 
  3.8040025211737537`*^9}},ExpressionUUID->"3b013231-21f8-4fc1-89c5-\
b42e47fd0e3e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "u"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", 
   RowBox[{"u_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "z"}], "]"}], 
   RowBox[{"Cos", "[", "u", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", 
   RowBox[{"u_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "z"}], "]"}], 
   RowBox[{"Sin", "[", "u", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "z"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "z"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"u", ",", "z"}], "}"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Det", "@", "%"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", 
   RowBox[{"u", ",", "z"}], "]"}], "/", 
  RowBox[{"x", "[", 
   RowBox[{"u", ",", "z"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Cos", "[", 
  RowBox[{"ArcTan", "[", 
   RowBox[{"y", "/", "x"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sin", "[", 
  RowBox[{"ArcTan", "[", 
   RowBox[{"y", "/", "x"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8040025243524*^9, 3.804002649578341*^9}, {
   3.8040026830286303`*^9, 3.8040026951695833`*^9}, 3.804002727524563*^9, {
   3.804002994447122*^9, 3.804003043398905*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"7b733726-56bc-48d2-becd-684feee3f3f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox["2"]}], " ", 
       SqrtBox["z"], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], 
      FractionBox[
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox["z"]}]]},
     {
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox["z"], " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], 
      FractionBox[
       RowBox[{"Sin", "[", "u", "]"}], 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox["z"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.804003044449807*^9}},
 CellLabel->
  "Out[89]//MatrixForm=",ExpressionUUID->"9a798c7f-d2e3-44aa-b489-\
c0e42142f231"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.80400304445303*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"44b5fe6c-6bf3-4aa5-8c4b-bb327aff5ac4"],

Cell[BoxData[
 RowBox[{"Tan", "[", "u", "]"}]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.804003044454865*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"de1eaa2d-7900-4155-88e6-4bf4f3b038d8"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     SuperscriptBox["y", "2"], 
     SuperscriptBox["x", "2"]]}]]]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.804003044456562*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"a11f557b-787b-48d9-a8f2-7b53efa560e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 58 (p.341)", "Subsection",
 CellChangeTimes->{{3.804066371774867*^9, 
  3.804066388301742*^9}},ExpressionUUID->"a702ebe5-db99-4e8f-9f31-\
c9a29d64156c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"x1", "+", "x2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", "x1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g1", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], ",", 
       RowBox[{"g2", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Det", "@", "%"}]}]}], "Input",
 CellChangeTimes->{{3.8040663906292973`*^9, 3.804066468592503*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"86efebce-1607-4d17-ae08-7a836b4c97e3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1"},
     {
      SuperscriptBox["\[ExponentialE]", "x1"], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.804003044458478*^9}, 3.8040664699417973`*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"08395e14-040f-43eb-94ef-\
66736448f592"],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["\[ExponentialE]", "x1"]}]], "Output",
 CellChangeTimes->{{3.804000331328179*^9, 3.804000442305216*^9}, {
   3.804000524180344*^9, 3.804000549372118*^9}, 3.8040011706555643`*^9, 
   3.804001519767474*^9, 3.804001587354295*^9, {3.80400263470839*^9, 
   3.804002650137044*^9}, 3.804002695626842*^9, {3.804003023098284*^9, 
   3.804003044458478*^9}, 3.804066469945063*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"fc791bc1-c355-4cb4-9082-33e64da98870"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 68 (p.446)", "Subsection",
 CellChangeTimes->{{3.8058867732328777`*^9, 
  3.8058867802108927`*^9}},ExpressionUUID->"4bc1e96f-64a4-41be-87c3-\
cf3173a9af0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"aA", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "/", "10"}], ")"}], 
    RowBox[{"Poisson", "[", 
     RowBox[{"2", ",", "0"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "10"}], ")"}], 
    RowBox[{"Poisson", "[", 
     RowBox[{"3", ",", "0"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"bB", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "/", "10"}], ")"}], 
    RowBox[{"Poisson", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "/", "10"}], ")"}], 
    RowBox[{"Poisson", "[", 
     RowBox[{"3", ",", "3"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6", "/", "10"}], ")"}], 
   RowBox[{"Poisson", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "*", 
   RowBox[{"Poisson", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "/", "10"}], ")"}], 
   RowBox[{"Poisson", "[", 
    RowBox[{"3", ",", "0"}], "]"}], "*", 
   RowBox[{"Poisson", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "aA"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.8058867898487463`*^9, 3.805886827211087*^9}, {
  3.805887018040473*^9, 3.8058870285730124`*^9}, {3.805887121695491*^9, 
  3.8058871476302557`*^9}, {3.805887472983129*^9, 3.8058874868330193`*^9}, {
  3.805887855010908*^9, 3.805887898879694*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"180a1eb1-0374-45ba-a132-a8c42f34c8ff"],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "3"]}]], "+", 
  FractionBox["3", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.8058878994443903`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"09017964-170f-43c4-90e0-edda1eb39e43"],

Cell[BoxData["0.10111599728911319`"], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.8058878994487467`*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"2e4fd325-502c-44bc-8877-cb2bf0b49747"],

Cell[BoxData[
 RowBox[{
  FractionBox["9", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "3"]}]], "+", 
  FractionBox["4", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.805887899454204*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"c443ce72-69f0-4716-871b-f5c7d15c2e42"],

Cell[BoxData["0.19788494965144526`"], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.805887899457345*^9}},
 CellLabel->
  "Out[121]=",ExpressionUUID->"5163aa1f-c80a-479a-a12f-5549f3777cdf"],

Cell[BoxData[
 RowBox[{
  FractionBox["9", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "6"]}]], "+", 
  FractionBox["4", 
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", "4"]}]]}]], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.8058878994652147`*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"5a377a24-7a38-4e09-896d-7fda0adff5bf"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox["9", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", "6"]}]], "+", 
   FractionBox["4", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", "4"]}]]}], 
  RowBox[{
   FractionBox["2", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", "3"]}]], "+", 
   FractionBox["3", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", "2"]}]]}]]], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.805887899467927*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"dce4a342-7019-45c9-8edc-5ee1d8bc63c1"],

Cell[BoxData["0.18903304661412618`"], "Output",
 CellChangeTimes->{{3.805886818655427*^9, 3.805886828729134*^9}, {
  3.805887022602323*^9, 3.8058870288997393`*^9}, {3.805887142369478*^9, 
  3.805887148491765*^9}, {3.805887474060685*^9, 3.8058874875747843`*^9}, {
  3.8058878864132*^9, 3.805887899471393*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"4d08dbcd-bdf4-470f-9ce1-b121a0de782f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auto-\[EAcute]valuation", "Section",
 CellChangeTimes->{{3.803986781806395*^9, 
  3.80398678845576*^9}},ExpressionUUID->"d6cad418-e1f0-4928-8cf7-\
8e218025bdd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFunction", "[", 
  RowBox[{
   RowBox[{"#", " ", "c"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.804003786959643*^9, 3.804003843091007*^9}, {
  3.804004264153791*^9, 3.8040042682672367`*^9}, {3.8040043879201612`*^9, 
  3.804004388950803*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"d898acc3-76cf-4610-9162-1e8bcf16fafc"],

Cell[BoxData[
 RowBox[{
  FractionBox["#1", "c"], "&"}]], "Output",
 CellChangeTimes->{{3.804003809970311*^9, 3.804003843940742*^9}, 
   3.8040042689558477`*^9, 3.804004389535639*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"1c078fe4-9eb8-4396-8d17-f6025122973d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Log", "[", "z", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{"b", "^", "2"}], " ", "/", "4"}], ",", "0"}], "}"}]}], "]"}],
     "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80406530761202*^9, 3.804065347995492*^9}, 
   3.8040654565751266`*^9, 3.804065490909039*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"5f048ce8-f648-4857-95c3-dbc2992b2549"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "36"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.804065379990958*^9, {3.804065485993429*^9, 3.8040655148860273`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"37bfc338-bb2c-4e2b-864e-39239630ab34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", 
    RowBox[{"z1_", ",", "z2_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}], "z1"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}], "z2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y2", "[", 
    RowBox[{"z1_", ",", "z2_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}], "z2"}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}], "z1"}]}]}], ";", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y1", "[", 
         RowBox[{"z1", ",", "z2"}], "]"}], ",", 
        RowBox[{"y2", "[", 
         RowBox[{"z1", ",", "z2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"z1", ",", "z2"}], "}"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Det", "@", "%"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8040718629587717`*^9, 3.804072030613991*^9}, {
  3.804072090025325*^9, 
  3.804072097807317*^9}},ExpressionUUID->"2a4e0f48-76c1-4846-96f3-\
ea5b5340dc98"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.804072031726972*^9, {3.804072061847725*^9, 3.804072090950099*^9}},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"9b2d0bd7-9b31-4ba7-9d3d-\
6fc3c0f4952b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.804072031726972*^9, {3.804072061847725*^9, 3.80407209095277*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"91dbca02-1e5b-4c42-8609-23a649c6208b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examen Final 2017", "Subsubsection",
 CellChangeTimes->{{3.804088330737815*^9, 
  3.804088346475152*^9}},ExpressionUUID->"50f6f76a-735b-4bff-9cb3-\
92cd167c90a4"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.8040735154795437`*^9, 3.804073517566763*^9}, 
   3.804073915291491*^9, 3.804075246249608*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"e37cf6f3-1e7b-40e4-adb5-bab4506cb33d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"x", " ", "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"x", "/", "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.804097741612482*^9, 3.804097797899246*^9}, {
  3.804097837430676*^9, 3.804097853337138*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"249e2a85-4d4d-427f-8d9d-2c29de5523eb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"x", " ", "y"}]},
      {
       RowBox[{"x", " ", "y"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$, {{$CellContext`x, $CellContext`y}}]]]], "Output",
 CellChangeTimes->{3.8040978538584023`*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"2455eacd-efa9-4aee-85f6-\
6986e0683204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "[", 
      RowBox[{"z1_", ",", "z2_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"a", " ", "z1"}], "+", 
      RowBox[{"b", " ", "z2"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y2", "[", 
      RowBox[{"z1_", ",", "z2_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"c", " ", "z1"}], "+", 
      RowBox[{"d", " ", "z2"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Jacobien", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{
      RowBox[{"a", " ", "z1"}], "+", 
      RowBox[{"b", " ", "z2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", "=", 
     RowBox[{
      RowBox[{"c", " ", "z1"}], "+", 
      RowBox[{"d", " ", "z2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jacob", "[", 
      RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"FullSimplify", "@", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"z1", ",", "z2"}], "}"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"jacob", "[", 
    RowBox[{"s1", ",", "s2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"j", "=", 
    RowBox[{"FullSimplify", "@", 
     RowBox[{"Det", "@", "%"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"y1", ",", "y2"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{"mm", "=", 
    RowBox[{"%", ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "y1", "}"}], ",", 
       RowBox[{"{", "y2", "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Solution", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"z1", "=", 
    RowBox[{
     RowBox[{"mm", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"z2", "=", 
    RowBox[{
     RowBox[{"mm", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Normale", 
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fnorm", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"densite1", "[", 
      RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"fnorm", "[", "z1", "]"}], " ", 
       RowBox[{"fnorm", "[", "z2", "]"}], 
       RowBox[{"Abs", "[", 
        RowBox[{"1", "/", "j"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"densite1", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Exp", 
     RowBox[{"(", 
      RowBox[{"lambda", "=", "l"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fexp", "[", 
      RowBox[{"x_", ",", "lambda_"}], "]"}], ":=", 
     RowBox[{"lambda", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "lambda"}], " ", "x"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"densite2", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"fexp", "[", 
       RowBox[{"z1", ",", "l1"}], "]"}], " ", 
      RowBox[{"fexp", "[", 
       RowBox[{"z2", ",", "l2"}], "]"}], 
      RowBox[{"Abs", "[", 
       RowBox[{"1", "/", "j"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"densite2", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S1", "=", 
      RowBox[{
       RowBox[{"a", " ", "x"}], " ", "+", 
       RowBox[{"b", " ", "y"}], "+", " ", 
       RowBox[{"c", " ", "z"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S2", "=", 
      RowBox[{
       RowBox[{"d", " ", "x"}], " ", "+", 
       RowBox[{"e", " ", "y"}], " ", "+", 
       RowBox[{"f", " ", "z"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S3", "=", 
      RowBox[{
       RowBox[{"a", " ", "j"}], " ", "+", 
       RowBox[{"h", " ", "y"}], " ", "+", 
       RowBox[{"l", " ", "z"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"jacob3", "[", 
       RowBox[{"s1_", ",", "s2_", ",", "s3_"}], "]"}], ":=", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z"}], "}"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"jacob3", "[", 
        RowBox[{"S1", ",", "S2", ",", "S3"}], "]"}], "\[IndentingNewLine]", 
       "jacobien"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"FullSimplify", "@", 
         RowBox[{"Det", "@", "%"}]}], "\[IndentingNewLine]", 
        RowBox[{"Clear", "[", 
         RowBox[{
         "x", ",", "y", ",", "z", ",", "z1", ",", "z2", ",", "z3", ",", "mm", 
          ",", "j"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{"Inverse", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "h", ",", "l"}], "}"}]}], "}"}], "]"}]}], "//", 
       
       RowBox[{"MatrixForm", "\[IndentingNewLine]", 
        RowBox[{"mm", "=", 
         RowBox[{"%", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "x", "}"}], ",", 
            RowBox[{"{", "y", "}"}], ",", 
            RowBox[{"{", "z", "}"}]}], "}"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Solution", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"z1", "=", 
      RowBox[{
       RowBox[{"mm", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z2", "=", 
      RowBox[{
       RowBox[{"mm", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z3", "=", 
      RowBox[{
       RowBox[{"mm", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fnorm", "[", 
       RowBox[{"x_", ",", "lambda_"}], "]"}], ":=", 
      RowBox[{"lambda", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "lambda"}], " ", "x"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"fnorm", "[", "x_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", " ", "Pi"}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"densite3", "[", 
       RowBox[{
       "a_", ",", "b_", ",", "c_", ",", "d_", ",", "e_", ",", "f_", ",", "j_",
         ",", "h_", ",", "l_"}], "]"}], ":=", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"fnorm", "[", "z1", "]"}], " ", 
        RowBox[{"fnorm", "[", "z2", "]"}], " ", 
        RowBox[{"fnorm", "[", "z3", "]"}], 
        RowBox[{"Abs", "[", 
         RowBox[{"1", "/", "jacobien"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"densite3", "[", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "j", ",", 
       "h", ",", "l"}], "]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8040726158617487`*^9, 3.804072666743033*^9}, 
   3.804072699309802*^9, {3.804072776030027*^9, 3.804072968468701*^9}, {
   3.8040730409843388`*^9, 3.8040730518942537`*^9}, {3.804073129108382*^9, 
   3.804073273318819*^9}, {3.804073325572055*^9, 3.8040733354618587`*^9}, {
   3.8040733904330873`*^9, 3.804073406663875*^9}, {3.804073450336638*^9, 
   3.804073494207778*^9}, {3.804073533002256*^9, 3.804073588368579*^9}, {
   3.8040739087320023`*^9, 3.804073912219702*^9}, {3.804075086052837*^9, 
   3.8040750940804358`*^9}, {3.8040751904495373`*^9, 3.804075240852738*^9}, {
   3.8040752903814983`*^9, 3.804075501107188*^9}, {3.8040756855964823`*^9, 
   3.804075700823922*^9}, {3.804075809482168*^9, 3.804076026180067*^9}, {
   3.804076074998767*^9, 3.804076081101883*^9}, {3.80407611626796*^9, 
   3.804076116607319*^9}, {3.804076156917077*^9, 3.804076250864798*^9}, 
   3.804177881665389*^9, {3.805791658141851*^9, 3.805791817900155*^9}, {
   3.805792132764248*^9, 
   3.805792132932538*^9}},ExpressionUUID->"a428afe9-4961-4742-b451-\
1828f46b5f41"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.8057918381581907`*^9},
 CellLabel->
  "Out[4]//MatrixForm=",ExpressionUUID->"c78ffd67-f9b4-4293-b01a-\
11e381cd5213"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "b"}], " ", "c"}], "+", 
  RowBox[{"a", " ", "d"}]}]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.805791838197975*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ec96223b-2f4c-4303-874d-aec7892585ee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["d", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b"}], " ", "c"}], "+", 
        RowBox[{"a", " ", "d"}]}]], 
      RowBox[{"-", 
       FractionBox["b", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", "c"}], "+", 
         RowBox[{"a", " ", "d"}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox["c", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", "c"}], "+", 
         RowBox[{"a", " ", "d"}]}]]}], 
      FractionBox["a", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b"}], " ", "c"}], "+", 
        RowBox[{"a", " ", "d"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.805791838204266*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"d036967f-65f6-423c-8569-\
56475afa692a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"d", " ", "y1"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "y2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"c", " ", "y1"}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b"}], " ", "c"}], "+", 
        RowBox[{"a", " ", "d"}]}]]}], "+", 
     FractionBox[
      RowBox[{"a", " ", "y2"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.8057918382082033`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b0422584-91f5-4f0a-9c5a-cd23409b0f3b"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"d", " ", "y1"}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], " ", "c"}], "+", 
    RowBox[{"a", " ", "d"}]}]], "-", 
  FractionBox[
   RowBox[{"b", " ", "y2"}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], " ", "c"}], "+", 
    RowBox[{"a", " ", "d"}]}]]}]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.805791838211968*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d6edca85-5528-4a38-afd4-e010b2b80495"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"c", " ", "y1"}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "c"}], "+", 
     RowBox[{"a", " ", "d"}]}]]}], "+", 
  FractionBox[
   RowBox[{"a", " ", "y2"}], 
   RowBox[{
    RowBox[{
     RowBox[{"-", "b"}], " ", "c"}], "+", 
    RowBox[{"a", " ", "d"}]}]]}]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.8057918382144403`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f090eff5-f4ea-40eb-8468-746af3c657b0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "2"], "+", 
         SuperscriptBox["d", "2"]}], ")"}], " ", 
       SuperscriptBox["y1", "2"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "c"}], "+", 
         RowBox[{"b", " ", "d"}]}], ")"}], " ", "y1", " ", "y2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", 
       SuperscriptBox["y2", "2"]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", "c"}], "-", 
         RowBox[{"a", " ", "d"}]}], ")"}], "2"]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"b", " ", "c"}], "-", 
     RowBox[{"a", " ", "d"}]}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.80579183990983*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2f83afe9-1718-416e-b564-90dd7e358a4c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{
      RowBox[{"d", " ", "l1", " ", "y1"}], "-", 
      RowBox[{"c", " ", "l2", " ", "y1"}], "-", 
      RowBox[{"b", " ", "l1", " ", "y2"}], "+", 
      RowBox[{"a", " ", "l2", " ", "y2"}]}], 
     RowBox[{
      RowBox[{"b", " ", "c"}], "-", 
      RowBox[{"a", " ", "d"}]}]]], " ", "l1", " ", "l2"}], 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"b", " ", "c"}], "-", 
    RowBox[{"a", " ", "d"}]}], "]"}]]], "Output",
 CellChangeTimes->{{3.804072640511222*^9, 3.804072694141171*^9}, {
   3.8040727921758623`*^9, 3.804072962170944*^9}, {3.804073150178136*^9, 
   3.804073273760951*^9}, {3.8040733359253597`*^9, 3.804073345308165*^9}, {
   3.804073454014101*^9, 3.804073561204267*^9}, 3.804073595149241*^9, 
   3.804073922091981*^9, 3.804074953516203*^9, {3.804075096042598*^9, 
   3.804075105561858*^9}, 3.804075186296506*^9, {3.804075241650609*^9, 
   3.804075249852537*^9}, {3.804075399290661*^9, 3.804075420370987*^9}, 
   3.8040754742023163`*^9, 3.8040755081172333`*^9, {3.804076034797106*^9, 
   3.80407604432592*^9}, {3.804076085524225*^9, 3.8040761334790373`*^9}, 
   3.804076261198352*^9, 3.804177994184054*^9, 3.805791634087088*^9, 
   3.805791841075145*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1258fb39-66b9-4379-ba56-b2dea6c5b791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{"Abs", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"g", "[", "x", "]"}], "]"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.8040804438285627`*^9, 3.8040805025738287`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"1e76bc46-b935-48f5-9a85-ee6282d95875"],

Cell[BoxData[
 FormBox[
  TemplateBox[{TemplateBox[{"x"}, "Abs"]},
   "Inverse"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.804080481687705*^9, 3.804080519935858*^9}},
 CellLabel->
  "Out[8]//TraditionalForm=",ExpressionUUID->"658a18e0-c861-4642-843f-\
0b3425452c65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3", "/", 
     RowBox[{"(", 
      RowBox[{"12", 
       RowBox[{"y", "^", "2"}]}], ")"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "y"}], "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "y"}], "-", "1"}], ")"}], "^", "2"}]}], ")"}]}], 
     "+", "2"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8040852265656357`*^9, 3.804085296970377*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4e8c5a41-554c-4317-b4ff-f94804a11f21"],

Cell[BoxData[
 RowBox[{"3", "-", 
  RowBox[{"2", " ", "y"}]}]], "Output",
 CellChangeTimes->{3.804085299713182*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"605e2d1f-1717-4bf9-be04-449435506b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", "2"}], ")"}], "/", "2"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8040859335084953`*^9, 3.804085963820137*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"676a23cb-4d91-41fe-bc5c-06ed32765fcd"],

Cell[BoxData[
 FormBox[
  TemplateBox[{RowBox[{"(", 
      FractionBox[
       RowBox[{"x", "+", "2"}], "2"], ")"}]},
   "Inverse"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8040859524498177`*^9, 3.804085964573637*^9}},
 CellLabel->
  "Out[13]//TraditionalForm=",ExpressionUUID->"84b79b2f-5cbc-4612-957c-\
58176d3a65de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"Sin", "[", "x", "]"}], "]"}], "//", "TraditionalForm"}]], "Input",\

 CellChangeTimes->{{3.8040859744715853`*^9, 3.804085993464233*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"3351d0af-7346-41f1-a008-ccdb9aad8775"],

Cell[BoxData[
 FormBox[
  TemplateBox[{RowBox[{"sin", "(", "x", ")"}]},
   "Inverse"], TraditionalForm]], "Output",
 CellChangeTimes->{3.804085993881912*^9},
 CellLabel->
  "Out[14]//TraditionalForm=",ExpressionUUID->"275d1b33-919c-460b-a6d0-\
a418d2afeec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFunction", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "#", ")"}], "^", "n"}], "&"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.804086042324185*^9, 3.804086051450618*^9}, {
  3.804086348835847*^9, 3.804086426821197*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f3d44e8a-ffe9-4e9c-983e-aa98c79d67b2"],

Cell[BoxData[
 TemplateBox[{
  "InverseFunction","ifun",
   "\"Inverse functions are being used. Values may be lost for multivalued \
inverses.\"",2,22,4,26367062917650865146,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.804086427778224*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"8116c0c1-20a3-429a-b2ad-083c808dfc2e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["#1", 
    FractionBox["1", "n"]], "&"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.804086051965288*^9, {3.804086350664743*^9, 3.804086427800055*^9}},
 CellLabel->
  "Out[22]//TraditionalForm=",ExpressionUUID->"03c3f84f-eb2a-4a6e-85f8-\
1d619a4bedcd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"x", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "x"}], 
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"x", ">", "0"}]}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"y", ">", "0"}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"y", ">", "0"}]}]}], "]"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.804087518323998*^9, 3.804087618473424*^9}, {
  3.8040876576334267`*^9, 3.80408768451266*^9}, {3.8040877302980003`*^9, 
  3.804087738928151*^9}, {3.804087873986375*^9, 3.804087903941256*^9}, {
  3.804088218620372*^9, 
  3.804088221304138*^9}},ExpressionUUID->"4802c2c5-e36a-48ca-9aae-\
7a0410d8fe13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<int x Exp[-x(y+1)] over x\>\"", ",", "\n", " ", 
   RowBox[{"PodStates", " ", "->", " ", 
    RowBox[{
    "{", "\"\<IndefiniteIntegral__Step-by-step solution\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.804088223046857*^9, 3.8040882600239763`*^9}, {
  3.804088294457664*^9, 3.804088299915852*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"44bbfd44-0262-4762-baaf-ddde6949f210"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "int x Exp[-x(y+1)] over x", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"IndefiniteIntegral__Step-by-step solution"}},
    Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[x Exp[-(x (y + 1))], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"x", " ", 
                    RowBox[{"exp", "(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}], ")"}]}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", "y"}], "+", "x", "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"integrate \"", "\"by \"", 
                    "\"parts, \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{"f", 
                    RowBox[{"\[DifferentialD]", "g"}]}]}], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"f", " ", "g"}], "-", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"g", 
                    RowBox[{"\[DifferentialD]", "f"}]}]}]}]}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"where \"", "\"\\n \"", 
                    TemplateBox[{
                    RowBox[{"f", "\[LongEqual]", "x"}], "\",\"", "\" \"", 
                    "\" \"", "\" \"", "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "g"}], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    RowBox[{"\[DifferentialD]", "x"}], "\",\"", "\"\\n\"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "f"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}]}, "RowDefault"], 
                    "\",\"", "\" \"", "\" \"", "\" \"", "\" \"", "\" \""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"g", "\[LongEqual]", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}], "\"\[ThinSpace]\""},
                     "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}], "2"]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    SuperscriptBox["\[ExponentialE]", "u"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]]}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}]], "-", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", "u"], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", "y"}], "+", "x", "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "IndefiniteIntegral__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, -3.22921, \
3.22921}, {y, -3.84382, 3.84382}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[
             GraphicsComplex3DBox[CompressedData["
1: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
MjGaHE+9zpfUOp4Ei2sfWqZofV2KpWf151yLcGcZlrzBDz1TZo0sa13h+zWn
bvn7szkvODeKx5P6hXzvXz9PcvDzJJ//18+THPw8ycHPk3zhXz9PcvDzJDf+
6+dJDn6e5C5//TzJwc+THPz8f+uRYnHwt6xx/vW3JP/rl1gc/O1/27+excHf
ktzmr78l+fS//pbku/762/+2Qz2Lg7/l+F0s+4C/JTn4W5JD3EJyOAdJDvfT
/7Z/I4tDXojkkO8iucHf/AbJIR9Fcsgv/ffvbWHxQ3/jc5JDfonkECeQHM4p
ksP9i+Rw3yc53N9JDvUOkkNdieR2f/O6JIe6EsmhrvTf66eRxVX+3q9JDnl4
kkMenuRwHyH5h79xGsk3XLowevV0aZ7lrPhjZioC3ll1LNj7vDiLD79Uv+HO
69/MQoJbz81x6ru0lVlEcLffcTvcm2sZUo/tFvu65pGFLD1RqU2NO33fMZ8O
JvzDv23Oq94X/oUi5S/PGVBpo17O4jed7mybVNdAkc/d/uLVxljLDmoxwYcc
LtEfuVyUJvWc1qx7+ktOksUb4zp0XkbI0OTv1adkf7XbS7LsFu/T7WzwQpTF
I6tKy3/IdLLsU3437ZfFg0YW1325v/LY2QoWP7r/Xk26xzeW3QbcjSo5/PUV
RXJet0RdQmQ+y26G8d71znQtyz6SSkFV3bdbWPb8viy65Kz4b5a8derm7efG
ibPsdjlld7VloRT9mRiPb6Gy0zsVWZZ95pfNu6BrKcUj7axy9cOChH0SLK5Y
MUNpw20xXgqh/2ldRJpYggiPHE/d9C0jqPwulj0LS9Y93qvXzpDjHNy8ZEzo
4WaW/PNF5iGVn+pZfGHDKUczoxrWvOwP3LE1MquEpb/00ouyNfW5rH0Upu/R
aDL2M0tPichyqc/RV1lcv/B06fegRNa8P3reWCo1IJs176Pv9trqsbWYNb+d
lVqOgz5XseQ3Dhik/7V/PUs+LWr4U9+EJtZ6yFHR17Hb38Yaz13paQ9H6HSx
9GSNvXu5ZYsITcpPHTEydbmJGGtdbdv/tFfUYAkWD0gabzG0RZJmrdvBr88d
T5Fmyfd0nv6x9IEsi7tNSU26OEqGtX7MvOjEa8nSPMd3S9QnuAji0j6zIs5O
aJLkORA8t3aCedpACZb8Y7/gntuMxVjcZb7OZ3knEZae443zNBcN72JIPmDh
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
VTfhymNz3Yu56uxcdQSuPCpXfoMrv8pV3+HKt3Pd37n6AbjqHVx5Xa48DFe+
l6sOxVUX4MozcPUtcNVluPLMXPkirvwzV72Mq37BlQ/h6q/gqh9x5b258lpc
+XCuuh5XnYUrb8PVB8JV5+LKw3Pl37jy81z1R656EFd+iatfhasex1UX4MoT
ctULuOqkXHUrrjwYV18NV92Qq07Blc/kql9w1XO56mtc+Tqu/h+u+iZX3YQr
78pVT+GqO3PVAbnyilx9Slx1WK58O1d+mCsPz1Uf58pzcuWRuPqpuPJaXP0b
nHlCjn4krnsrV58SV/2LK5/AVRfj6nfiui9z9UFx1de48hhcdTeufirOezpH
nxVX/Y4rf8JV1+Pq1+LKD3D1cXHVB7nyNlx1Q65+MK68BFefGFf9kStfxFWX
5Oo348qHcPWhcdU3ufJUXHVPrn42rjwMV58bV/2UKz/GVVfl6pfjyv9w9dFx
1We58nJcdVuufjyuvBNXnx5X/ZcrH8hVF+bq9+PKd3H1AXLVl7nykFx1Z65+
Qq48G1efIVf9miv/yVXX5upX5MrvcfUxctXHufKuXHVzrn5IrrwiV58kV/2d
K9/LVWfn6rfkymdy9WH+X+ueXPVNrnoZV5/z/7XuwNVXyVVf4Kp3cNUpuOom
XH2eXP1dXPVErv5SrrokV98pV78ZV38a13sHXHVSrroqV98sV387V92Wqy+X
q/7L1d/LVafm6sPnqoNz1aO53uPgqptzvQ/C9T4CV72eq8+Z6z0UrvopVz2R
q27IVWfk6sfmqu9z1a+5+gS46uD/1/osV52dq17MVV/mer+Dqx+D6z0Rrj4N
rvp7XcS16Cu20jyoR9jUncuV+2nLiLSVqL4pl8C/r3coNiL8l88c5CA/Jimh
deTzLUyvv/MO8k9+Ln2cE2LNGJVIXerRiX+/iRdYEu5V9mkjyoMej7TUlDu+
e1EeuPpW/XY65hSzfM1darliB+q5v3jvvqG2rshx/N929x6g6cX8fe8M5S9V
WbkyG92Zq1bZNxom1SF33NHSojLDB+VBz9sKyTcVjbdQHnh+Q5LGtbYgxvFm
3VU3nzLUo+mwZJfl1IfIQX6l4pqxy9++Yub+jatBfo9G4zq7F2HIQd4ie8+P
iyvfMW79LsxOfvoe+a9BV8pGdscyf7+/ivUam2tW165YRVNO/OdSID/n2oqQ
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
Qsr9mZ7dF311Y18b0rknq8MIc8XqmTfGa0rQX9AzuPf6yCfnmxOHHtO/3gV9
lxjQOSn0NFzxysoh6n/zj+2/MB7C+h482/R2Bzrfx3iIPvEh/uGZltSPGA/b
WD9ydQbJt0THxCI7c9IDO6cMqF7YK76U9n2w81Jkto15Tnc6t63LT2qETvfv
iBMCTGm9Bh//Z9u+KVGD6HdvMf1/92xP3jCxCeVpdXXCfKF6ZI+/hVE9qN+v
M77+UO3bGc2MJfXXo3yhYtDRTl979KF+ucH42DZhs4N29iE/g7ezH1nUV7kP
+RN8neq1DnO1TCSw35vZuTenuuj2xjbULrY/ErJKds9MrGpH8neYnu4t45Md
ooxo/ONcO3FVs5QUExXKWwIZPxqwYHNtfDbtL7Dv67y1Q2r1//J9+MGV8fFf
js5ON/Kj/dp9tu97v0fTv/EeJcpLoeersmF08o9fFP8f191fEuLfbz7ZIrMP
+R/8ioaoh//37mQnuHhYVJSNTXuy51nd74omOCR4qYS0JO7N6qXKOcdvHKvW
oX3BwcNms1zVXlrNsftdm3mgSkT3c5ieoy76pt118mn/dY7Zv37g6uk3jRWp
3++x9mqfaNuyUYsSivNhTM86n7nT9ipHEb/I7NFOUr+zY+0jOq+/zfRrt1ds
22uuMsUBN6ZnVdaArV1P5lHcPsPkjQZcPaK+SJnGWyCzp/vbxS8Ch1eRfCTT
M/vQaYmFv1SPJ7OnqMO4r5O+SPOE+0y/wto1zwsE6b2OE0zPwvt63cYI2bQu
wJ6bf483qzmgSOP8EbNnhZ7gZNyzjOSfMz0mFoOL8o9lEoc9WcY/HydcS6b6
D6uHC2EtdyxsPa6aOKuriwrCr74KT0iS1jmZvPGVAdYPz/4mDnt85rZt/Wn7
V+Kwp8OeflctH8URhz2dj7YzSS6USM9Vmf5Re0/Pvd/jJ/GNTI+l6RK1FbPC
qW52nMlPNlNsuiy/lHgEs2eJ485vgtVH4klMT8vYW+728cHE3Zg9/XVUHDS+
3KQ85w6TH3fyu9XKNWKaRzeYfOEn8bh4q5E0L26zeouPdie9Jwk9iB9hdf6i
hTuLBjYx4eoD2aLmrG6DPBb3D8/WpCRPssikcX6L6deo/K12vvU7mkfQP3vb
tLHngnJo/F9i8rc+F595MfUNjU8Wx0T6t6wVl72TcmemR+vTvCbtExIo/4lk
dqruMo+Mmp9K4/ki09Pn9b0Qk+fS+yRPWL1oJjuPwDjE7/az/OWg1DySOH5X
tWLilI6+IZTn4HdnRjxa1u36Mxqf3kzPe8VlI84f9Cf5IPa7sez8AuMNvzt2
W0hmt5xbxPG7l1dZ2Bzp4U11zmj2u3ZuB+eeWnibxqE707Nl/C6/OZfdSP4x
+9027LwD48oPfn7X9pbb+5PEHdnvrlfYvu942E6K26jX8fUNXzn8JNPD1zHo
Psz77IVruvWn8QZuwOp49esJBaKBMe02ek8JpfEGeZV7hTdWtfgqqn/OXiBy
3rzG6mNIIncfpkBkZtrhVeiCJNp3o37I7+v5eziwH9w7M2bSwBW2ZD+4Bav7
wZ57rN74pfp7gOPk52Q/5KvGunSNdC4XUTxn8h0NtnbSHRpN9l9h9Ul3vZhH
1/433uBnF64+Cc6fT4Gbc3VCcD85dULcG/nM6oRo1zH2uw/yI8zG1wRz/aIo
ntjba3Pv3zXULpxn6f/MSOptKb2nhDrn+0VtCgYtf0Ltkncvhb/Pj37hOewH
3365Z/sAsTXJ8/q5OoY4l9UP0V7URbUdzM7YqPhReyF/YeMN18oPjcRoF+ql
cYsaBDn0DaT2ol6q0myirXOVn8Cdm4v5cci/p6h/T0xVxj+8PNrL8/rjXFXG
D5AvGrskMXX5RG78S+W5c3mx+F7J9R77rnHjXFWsHt19RHVyczFXJxE3tX9Z
sq/2Dl9XEVu1GpJX2eUW+Yd/RwP7eQ77eQ47US/VUBj47PVLd/4+tviX5vyt
W1PbkJ2ox57ve6Jykcc1vp4pbrH90ayEW1eJQ4/TzmudFGZeprjamulxq5h+
Kic9PIyrN4oLu5945lN9O4y7tyxOTTh/L8TrMn+vRtJ3uvcU5Sl9qT4A3nT3
xtDQ+9L7Eqijjh89/c+lt9J6LLjqvHvhg34LtD6iLtojIaBCY9UlEfyMe8hJ
rD6J8QCu/uXa97U7/ajuB76J1f3gZ7pH/WtVy6vRL8hO1LvmDI22+vAgjuwE
fzD+/pnvoldUT4OeIq4uBy421R0/7EAytQvcYWb0XKsxEbS+g+9dfna/ZX4t
1bvA81i9C/MO96gbZ0YrXjSRkB/At936O98vK5HaC+7RQy9+crtsshP85M5f
e0zefSZ7wJX8gxYfTflC9oA/YHUV2IP71S2vTHy+4HupUL8u/VvoffRF+M2F
P8lO8LEZLdYNefabq/f+Fro1+NpZ9Xg12Q/e3f1gg3ZzFSX166i/hd/Hzy9p
tliJ9iPgZ0c1XlNSpCSB/8F9tJ/aHVBXov0CeGF1nw4BPSopb8H+/fLZlmM1
B3an+gDpufty39RMZaozgKv9vlZQWybtr+C69V36Dpr5gedoL8/RLp7Dfp7D
Tp5jXvMc/YV9eh+2H4ed4NpP9PUc0hrgf5GId7bfdtbZS43ahfvn7We9tC19
qkHxEHwq2/+iveCzVaZvbn3yI41P8FnDTyX+uviDxid4eCsT3RvX8ihfBf8+
K/LVsQYZFPfAm7m6Bxirv6RxiP3FwNmTW6gZdaHzKfCS9GkDEm8nizDewP1a
NUzY2C6e7ATf1Mvw/JEoaf0cXIPtC2A/uEG6ZdS9kljKz8HnsXwe7QJXeLI7
VDEvQKhfn8wWzWB5ONoLnqZlv+xuhDt3jvBTtLpBZVzLhzdF9e/N/hQda2Vz
33bdM2oXeEJH+1HG3aIoL+LvM0M/3gm+OJdrsaRlJOkHDx7fbNGYmEekH/zl
ktqCb+ohZCfypYa2oxduuRtPesD71fz84h12i/SA9+7kqjXnsD/pQf5g2/d0
9EvvFBEX58V+N89mLs65wMd58Vytypzim7dID9bxgR49zj0re0d6wA2M7d41
d3UiPeDRJZXnlLOl6zK9k8qyGO7bNIrOBVA/n2b95mLgiyAan+CrTx7v8nZg
OMVJ8G0+HWe5bYimcwHwFj6zWj7eFE/xEzz/nJAfPusNtQt8xDw36wRj6XsN
8IZVbQ53mBhH9Xbwmo7DskZ3r6B3JYiT7o3Oay57l0TjhPjVlmOG6KRx905r
hFsfD/y8pvWe/ACuVno79MyvLPID+AKP0ydDRuRy905rBMd5BzXsvuWTH8A/
aiVnmb4uJD+Aj0pZal3h84M7X64R9nwpmTH3cAnlA+Az3lleMHQtpX4En2OZ
PmrnnlKa7+DTNyWOeXK8mPwJvkY3+8jXs9J1Flz8bPbwO9O30zoL/mbPYsdO
HqXk57rzu59CjjC9q7JVS6qvgu94sj/fZkMrSf3z3J9C/rZx7Z9d16ZzB/D1
7bVneaS2prgNnnC0UEvxdxtJ/fPTn0KUrlGzCLV2dO4AfiF9rVZwdTtav8BN
lVVb7I1tL6l//vhTuFJ4dVvjZTpUbwQv/+C4VfexDq134JF33TWbPNShdRy8
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
6foO+b1a5vu/qsQTh3zjM+fyG5yIkPqfyc9l34UDh/y2Z51dXZc8lPYLkz+s
sEt8wPMxcch/2haqNtzjurS/mPw09j03cMhnJt316LjKXdqPTH6/1ovY6Gpv
4pD3Xvc2okThKPIukl+8VpI/0vwUccgHbomPWrR5J42HQO5+EcYDzyn+cJzi
D+MH5g5YuLzXcBoP4L+rPvsNeNCFxgP40DZzFqr/+kPzCPyGmeqYxukx1L/g
bUcbXGy0XZpvgGsPWHqwunkg9Rd43jjPCbZ7r1K/kPyc4QpdPp8i/5OdFgab
HEP2kJ/B3VzF17P2riJ/gpemNrylu3ka+dOLO0+BP+Vx/n0u/MzLw8/g3zf1
aOU7ZSL5GXwU+34I/Ay+4+ztkYeKlcSYd+DF7Pt78D/4DSPNkJ3WEeR/cLt9
e7W3fntMHPZ3bld2cOpaP+oXyNc+6T52eeY14pBXV3I2VVp6gfoL8htigvpn
OZwiDnmFN10HhkxxpH6EvHfl4pK5tduIQ36cit3RNhtXUf9CPr6weaeBBxYS
h/wlp7eprhUTqN8hf97W9brh2ZHEIX854ZRgp2NO4wHyJdd3JPYb04c45L3/
dDjtua4DjZMB3P1hjAeeo995jn4HVxzW7YLd7iHU7+ANJlfdHfK2uRj9BX5q
WnlhScIN6hfwS1+ibaYOlvof/P3sg83iJZvIz+BmLnMKo8ZMI3+Cb1JyNFnV
1YL8Bj7tuZVWydp25B/wEy5r2zqN/RMG/xhx9+vgn87cO2XMF14efuM5/AZe
yb6HD7+BzwlrqWVqrE3zBXwx+34j5gv4s+NOPpNF/jQvwPfYG8SF3b9MHPZr
rfH0TlH0JP9Dfsu4dv7uhxyJQ37ouQ9V827soH6BvO9ewwmtRIuJQ37uk5qg
Mtvp1F+QX/o85tCm5UOJQ94hrMWN9wV9qR8hnzo9sOPCrI7EIf/K/e/HhBPN
qH8hX95RrWjXo99h4JDv0rL2d6rTlzD0O+QbuR7sNfFDCnHIp96dMzg0IyIM
/YL/gf2cVZmqfLQLjWfwN8+bLosTu5LfwCfPzHray3s9+Qd85cHmc/UrR5If
wLdb7ExZE9SJ2gt+6tPea/v0K6ld4COOTX9xflMc2Q++MWtI5OnR3mHO/+ps
Dahuo1RQ5q3ye52w6l89rYrqLXMyfryvrDknHPkn/4l4u3ELGyl/eyI4/eNl
IvCli3rrdzqqw95tKcrUZ5yZPPbLifv9rJ851YrOMXnw1fO/pJZn9xUXszoV
9h0Z1kZp4t1m4kPMfvAbKrbPyvS7i1cw+8G7KlcePTavTOTG6pbgflOM13ee
ky1Y4n++WB7yvMsPtXSnIezdbhXxQ1duK3tqdhVDD3jw6KQvJvZK4hP/7Emm
/CqiZMXjHKN44TBrL7h6/yuSRLfH7H20IuU/lTXjtP5+cBdW/vvdxsRbLsod
YNdjmwA/8Osy2gsePHGyuW7+MPERZg/4matz3Dq8eCjA/+A9rxateFt4WoD/
wdv8uDl1S9fFZA/4iE7hi5x9TYUzzA+YF8U/NbWOjjIVn2G/C36j/ZI7y75c
ZeOnjPjOrZvSPi5YR34A19SLyP+qa8DGYWPi/qed/17MygnzYHVdjGfJ3Oke
saqrBTGr04IvK+08sNa8o3CwbtzS+HzxumfW4zsZIuY34md1k7Yb7u0vdmR2
og6m9zXr1dQ3WvAzcc0Vii7lWfriaaxuDP6ieGbnhF79xdly6jzLWLtQx7jw
usm7oZmjxKy9NJ77XbtfmJ6FOpJ0/9KC7V+O1dlJ49CqxV6Pd02ai9ew8YA8
8LTJ8mUe903EbJ4S91maeGGPWWsx8ydxyTzD2e5N1MRLWT0fXFwxo3qvfqHo
JIsD4J/+6DxYcTBF5F7XjzLj04HLAwewPPAoswfy4icne9ra6IvZOJTJN4bU
+18nKUe7wOMjv7m/XWkq9mTtAn/7znf9o92dxbAffMa2kNO/4r+KPNjv8uv4
Fm5d/sjW5ePsdyE/ZVOrQ1YV1ixuNJZgHEJPOZu/PK+uqqvP8/wIi288d2N2
8ty63nf2pHw6O0fg+To2TnjOxj/xsDVvHBpMtBN71ftunpp4cPDKwPnLLcQL
2DgBbx5wZMLf6BYsDnwiPtCy0bTEwkoRiye07tzYsUvS7JitUDeek2l9KezT
NGabQTjlJ+B6CeUDP13xFx1m85rmaXCRS7VRgmghOw8Cd03/0NPLvJDVx0pJ
T6/L4T/GWLYSg0O+R4rWvoXeTcVZ/+bvL+Jr7BqdH+xhQnUzfl1j6x2dI5x1
WqsYNvGEIGL9Ar4zd+Tn341OI+5JsN4F613OP/oiRFjN+gXyXTSfz8sbd1U4
xPqF2rWnk7Pn/AeCO+sX8LdDJuU8vxyAeCtA/0+ltZ83PUsQTrB+ofOCy+oG
O40ihOlcvR3/w+7E+gXy67uY2n1p+ELwZOd34IMihYkPp74UtrL4D37M61pZ
x8AI4TTTA3tiI09fMd/7UdjP+hG8k5mJ9dJvz4VlLN6C/3VYelShd0vEVTp3
mLnSOKzk5R6sF+TPsWuu3/UJ8hFWMI54G93WzkCpOloor/dOR0GSoLV5xfJN
sXROBP12TH8L7rwjjZ131LL5Cz0Dtu656PM6ga37DYh/D7xx+ee+JAHjBLzL
QrXALSZpAuIb+NA1JXPiNqULiOfg3fINtdPaZSPvIh4/+HEPj1O5AuIeuPXr
uyG9BuUJiHvgbRbdfZm+q5DqWvBbjMsujUnjsoUDrL8gH67nsSZifJFwo97/
lylIDO70zrU2+UHzFHpUVvUwXTchTXBg4wHy3osCivp4fBcwf8FbbfRossIy
T8D8BTe5YVH7uecHZk8Z8WNX9+/Kn1HI4kkVcce2TZ2a/2lA6zJ4V7eoB68O
NBPX5QMNKM9MHj0/Ij9xGK2/+L8/UX7THlen9ED9lvrL2CF2wvpeUQLWO8hn
qizzGHJXX4J1Ddzlkmpnb28DyTnmT3DzzbHhw8IMJXuYH8CH2m5Y0nmZoWQp
axd43N4vpoMu6ktY/Kf84dSiBkMWp3dleXUD4p39izqVzumD9YV4aKJjYpGd
OfkB+q90u6aS86MztRfnAiqF+sc1jL4L2dx5wSx2XjDMOfi+tZ0y1f8v7zqe
XPFCUQz/IJ8J79Hgh+qXdrTug0uGeS0M2XdMhP01eLJC8eImn01pHw0+fsva
ElFqJzofRz15gkOCl0pIS8p/wNd+GDDx67mmlCeAr8pJTZ5w7qcI8wU81kXf
tLtOvmgZW9fA1/vMnbZXOYrmEXhQ9NnsLO904SzrX9g5fVnrB7ecKmkeQV5/
hZGVlvpn4TqbR+CzsgZs7Xoyj+YL+I2xW00qUj+z9/KfRNDfZtDLfjusK2ge
UT0//MOgmaM+CWxdJj7tvl63MUI2zSNw1643A2bvyRAw3qB/bJfAWvc7P7Af
JPlhv/31NGakCFPZ/ALPCL/6KjwhScD4BH+rvE5L7d0LAeMN+g810ff73CaX
rWsNSH5xeOvQ4G6RAsYtuK7pErUVs8IF5M/gg1/vSPib/4jiMI2Hk9+tVq4R
ixGHwV3edvJve9WSjatSyqv1mns2ezGmVuTB+gt5teibdWX0gheCBVfnb8rq
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
xhv4trwf9g9UcgRl5gfwyMbNqpLdPwkDWdwGP56lVBtmni8srIsPxB2tnCqU
vn0RXFlcAjfdcPCV4cRvwva6OCPVc3Nr6PeA7+y8JoC4neHciQvX/hBsmf/p
3NBeuLN5xQ92vv+W+GjXwyajVn5j3/8vJH5+4b7a1U9T2P9elRO/ubTHi77B
paLt3Lsngb172srxZ4xjvoPbsPdQ1lz94SOrP4Sw/kU8n2wwv8v8hT3pfTHk
xzI977l6RX9Wr8B8B5/M3ltNYuMB+qfMKHqif0gf+SfJT2fyu7j3WUPY+6xs
rh6yhdVDktj4gX6TnJSIS669kPeS/AimR4urn6iy+skk7v3XJvb+q5bFGeg/
9Wl/w0N7DCQjOfnNTH4W916sCXsvtoWrz7ix+sx0Nj6hv/ON7y8/WhhKVnF1
m2OsbhOhpHwzrmUCvTtzY+/OlrJxS/l//KWbM/wNJY3VmvuYTXpgxcuj/g/+
iL1Tm8TVhe6xutB5Ns6hf3lZS2P3/+Uz67h60QNWL7Lm3rvdZe/d6s6Ls0mP
UeToznMPGLJ9hFTel8njfA1ck72Pa8HVozJYPWowi2/QPzGxZP+OywaSTK5O
FcfqVLbcO7ss9s6u7h13JekxMXdRcW/UC/sdkq9i8jjX49/lvePqYM196+pg
UXXxkPRrfP2T7L+/h2QIVx9bwupjW7j3fcbsfR+Lw5SPLTB6nDLyXRdJfxbP
+e9TPWXzneeI5zxHPOd5JIvnPE9l85HnJSye87wBi+c8t2TxnOcL2Hz5v7+7
lS3DHdi84Ple5J8cH8fGOc9XIf/kv9PFxjPPZyIv5bgZG588Z+u7DGd5iAxP
Rr7KcZbPyPBJyFc5/oKNH56HII/lOBtXNN46Nz4es/x0BwnLu2Tkx3HvQ13Y
+1DkS+CN2fvQHK6uO5XVdRHnkVd/TF9qumZQI7EmV++tflZX753IvTNVYe9M
Ec+hZ1T579+m3gki5A90n+GE8PzlhwwR4jPVbyfsn6FyrEhAvAX3bd17bY9f
FYIrxg/jSud7R5svraJ8gO6rGMRPOGL3md0PzCZ506yGNtuCK4QTjEN+36Dh
bmsqP1H+AL45ZvmwvqrZFPegZ4pQWJQSXkZ5BeRr7N7bLxuaLiC+Qd7n4pT7
wzYXC2/YuIL8x657NizJShQQr8hO74Gnj/kUYH2n+urmW/3PnnWOQX5I+yBd
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

              "], {{{
                 EdgeForm[], 
                 Directive[
                  GrayLevel[1], Lighting -> "Neutral"], 
                 GraphicsGroup3DBox[
                  TagBox[{
                    Polygon3DBox[CompressedData["
1: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
PkX9n6B2U9V/bcJyOWs9z5fnfGPO8uOywHJ7r5Tn0HLmi9o8EunvYzS23VV3
G3JjZBPAvnJ+aB5sLAvVzyi1nS++caq/Q/Ur8/5B16iP/mp/QtY6eH0dN8Xm
rfNz1GaCxjeXb02/VaK/YC7o3KXi2Ye9SMcj9S6WazwrRC9I+H6Hq79e+k6e
Rs/S7yzxPCOep0QPZa0W/XXOetO3Kh9Qn5NFv84z1O888axUeX/03WETW6r7
Ga7659XHV+p/TJX3jBfTHgNj+VL3eLLGsBs2mJJtxdiMn1ObI5HNkDf1m6z6
T1U/P2O9ex/VjcmaB96jdK331E9rve9Ly9YXaku2A2IP/FZt+6MzV3v/HZ+1
HQZ7zELdy+Xi76R2SfYR9ZNFb816v8ulvd/OidnP8braP5vw3Nim4+cSXt8W
i35X9HeiH1GfU7A9qu2jrNWiO6rv+aKnIqeVrdPNFj1C5eKM99ul4n9T7Z9P
2GeBDIJNZjSydMn911f5qZ7b8aJ3UT/zMral7JmzPQt7Uf20fTHYi7AbvZ33
tZBJjs9YTv4rbb8C/oUWoq/M2n6IHXE7cjP6VMa6Ojo79gBsYdjEtqILZ61v
Yq/qGHrePqBybsb2hJ2Z62nrvvfy3nTtkp5/t5JlemT7IegvGevvNRnbl9Ff
S2nrPei/v2btN5gv+n8qf9R4lmCP1Xgewl6BrK9v4hJ9Dxeqz0lF67PICcg1
j4hnrXhai2c9thg9t7Zlz3Xm/HTxLNO5W1RerPovsHUiA6j8QO0maGzr0t7z
NkV74kadW8F+ovJNHY8Tz1sqHxDPG+gk6u9FdHLVr9Lxa9E3wrfCPGY+P4Fv
RTwvIOPw7Re81mL/f0c848Xzrsps0TI8svxL6vcgtTu+7DWZ/fE7bHehbf/P
6fyonO3P2KEnR3oH+sfnkhf20fP/TOWXkX/lJuw8Weu7u6j/x1mbxf8EcmLB
vjbs0Dvoej1V/46uc17B/oUPQtu/kfFWqFxUsYw+Trxz0DvEf7mOyzrujv5G
28jXMy7Sj1NVtq0Pzthumcc+p/4PE88a8b+MTCv65pzt/fXEuyvvPWE/Gr66
3uL/UmWy4O/mTtVvjNnf11blgSofxh+pc4+oXF5l39/OMdtf8XvgzxkY6TX4
vwLJMtOwS6g8NbQdKMs+Fum8X2Gz1X09o/5e0X0vUflwwntfLfq86Od5H9j9
IzpT8v54bGjb68zoOV+gfr5S/VWqT6rtXQn3i++N+cY+NbFsObuV3tcLOj4l
4X1nRcHfy/dqe5iOcwnbo/uq/ifRe+maCyvWwcaWPXeR69anrQPRP3vnsIRt
s5ujfYj9aFzKvi/Of6WyodpvFt+e6nOF+szVuv8Bok/O2ma7Ne/5/C3fhfgf
VPmleH7L+5vCb7KH6j9SP81V/5boR1S3UfQLBe+ryBIjE7YBspZdLp4JKu+l
b/Gu07ktup9PQn+7i3X9F1TOS1g2+Cz0vrG0Yrs+8smP6J4Fv/tLQ+/H3OOW
tH0Nz4m+TOX8ivWBEbrmi8y5hPfxl/VblLC8gV+MvfgsdO6SdShk+UN0LpWw
r+c5fWPX6lptVC6oWH8YHfn3kOU+Ubm24LV3U2i/B3rqNpWb9VwHa969q7mw
d9l7N3v452nrNa+mraujs9+pthdpTnTT9360ygviXtOmRHo7+jt+mZ46N5I9
EZuH6k+O2WY7tui1upfKw/UbwX5XsC0J28VJae81R4jnDrWbWPT+ewx+/LjX
cOSA8XHzsM9hj2V9Zp1mve2JPTxvmYL9mv1vXNz13NuVOneSyp3K3iMOVP1h
6n+66gezxob2xeGTOyRmXy40fhrkh96i7xLvKxn7UkepfC1j/8u5kV8UnxP+
Jnx9+GUPjuYoc3VaynsJY748Zf0QXWFGaD0QXQ+59MKi99mjsMPodzD3XLR+
iJ54q/gv0PEhqu9dtG0CGwU+0HFF21uOLFo/RE/EX79njf3Fe6m8WOd6iO5T
tEyPbF+NXskc0zxar3Kg5tKZWesRg0S/kbGv+dYq+9rwmR2HbJ21XnO86Ncz
9ufih4PnFx2foPq3MvYvY5+/Te2PUzlc69C54jkv5vsdI3o8bZOWB9qpvFq/
TqrfkjS+Ab9SM+SBwPIDcxq8QVu+sYp51yRso7kM/7LKK/JePyYlbFP9IbLb
94/kAuYWunFV3HOa+cx491XdJJVf63cGMqrK/fTsBotn/xrbgLjOvbr3j1gT
8bnwformObXoNYi16GqV32T8TfFt9Yquhbx7ju7lPNHjYsZRZMV3le7lbNWP
ZXwxfwvQE1T+W+Ux8y1sFO+pOn5S5Xf6XSm6DzJYxWv3vQX7JJmT3WJ+h3tj
a2TO6h5Owq5Y4zWCteIbvctF2FeqfHyUjttjaxX/1pzrWc9XaH78Kb77QvvB
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
0yNP8/8Dw3uDMQ==
                    "]], 
                    Polygon3DBox[CompressedData["
1:eJwtnXm8FfMbx+eec3LvmZlzz5zlpkQLZSk7WSIqlITsW7ZKtqRFSUKyJ3ub
skt2qeySkn2nRZaICCEp4le23+ftM3/M636f+S7znTkz3+/zfJ7P89xWfQYe
cW4mCIJmtUGQ09+ry0HwSTYIdq4JgqtUPq0aBE1VPiMMgvqGIDhPcj+1eysO
gimSV0u+Oh8EL+rcL8Ug+EHyhZIfl/yl5BEa41WN94jkLyRP1XGxyhtpvD/V
9kcdF6v9TJ1brrpLJbfQ9aYWgqCk8RslQaBTweZqM0mFzhrvfI33q849r7qd
1O43yaerz6NREPyr+hdU94zOv6b+j0mu041dr3NnqTxFx69qf5raH6fyrdyj
6t7U/UxW+38k36H2c3TuY43/uMa5XvIgyTPV5iDVX6L+f0l+R/U3Sf5R8oka
7yiV/6r4WVyj+f6i+f6k41KVn9C5b3R/fSQnattHc83res9ozBHq/6jqR6k8
TmP0Ufl1lSep/hzJM1T/veSpkrfTfH6R3EdjPBT5fm7O+jeZrPI2qv9J8smq
v1/1E3RuteRTJR+j8r06zlTbLdRuusYbpPn0lfyGxr9V8pP6e57aD1X7L/Qb
NdK5xWo7X8+gh+63m+5B1cEDuqeJ6ttdciPJD0u+VXJH9XlQ7Uep/Ymqq1P/
vXWuldr0lNxPbbZSuZXmtofqNtKYjSVvrf6TVfeUrj9MF7hB54apfL7OncGz
Vvl2tf9Jx0Uab3fN72k96/a61v/U/mzJj2vMu3R/f0g+U/IJ/DZqP0Lt20t+
Uu2HarxbVH8w75zq/ta5eRp/rOS1qttXbTvp2FznDtN8p+kYpfITuv6Nal+r
Yy/VV9L6HySfL3kXjT9LJ1dJHiV5T8nPSs7p/jSNYFONP0Hj16nuR431hObw
rPr31bmq2vbT3GP1/VjyKWp7s/rMUf0HknuF/iZ6a6xPJPdR/TjVz1X9p+rz
g57BQj3vZrpercrvaeyN1H4n9btMF18oeTPJK9X/PfVvrf4bqf9B6n+f5nKI
6jdV/dlqP73oseerTWuN/Z3an6fyfTr3kerekTxV8jLJNRrvXcnN8147DlT9
Ko33lMa7XfKrOn940d/vfho70ngLJOyZ9/NNVP6M9YRnI/kltX1c8sdqe5Hm
06Dxn9T9TNTgj/EbqNxEY+yiZ/Wp6oep/ZdqP0D971b9e5IX5H2O8vs6NlP7
1ur3neY0UfIkzW9vlZer/S66ztdqO0h97pW8QPXfVH2O8kIdV6hNWf0/4puQ
fKDK9ZrPGrUv8rzUdqH+jtB8qprvLNYYvnWda6drd5Eca4H9Q+f25PfTua3q
g2CRxthUv9db6n+3rv+56v/V+EskHyf5Ksl7qbxYxzGSL5O8q8pHaLyxmksP
yVdpvAfV5wEdb+l6W/A+6/5eUf3zqv9M/X5Xn4n6+37AA9e7pf53qX6J2t3B
u6O6NWrzm8ZYp+M93d+dqtcjDt5VuZnat5X8ie7v/ZK+NZ6N+t7Gmqe6dZLH
aYx31f4ffn+Vf9W5/6m8vuixr837G+Mab+i4jalovv9UPed3VL4p8L18pHPH
qv0VkndXeYOOT3S9u3W9Y1R/ga75ksobdO4B9V2oY0PBa/xOavtnxWvtaI2x
SvJ3ee9R7E1rdHyo9nvq+e+gReseyYtUd6TaXMTz5LfUsZfkLSU3qDxDxzmS
75L8gtpfrusv0vULuuajGusP1U9W/Yeqz+j5Xqn6JarfM/D7cobqr5PcjTHU
/lTV3yN5k8D3w7O6XnXzAz8zzlH3d973fr3af6/25wZ+f+don95M9/qc5J/1
EW+qMX/UXBbr3ISi99Tv9Gwez3qvrVH9h6zt7FmSn9NxnfqGeuZ/qe10Pa82
GvNZHVN1rQE6ZmXdhrYZ9hy1RUc4QPJr6nOr5vaB5D8kf6Zn2Y7fs07PS/JX
Gu9NjfWS5nOLyln1b6yX6Rm9P8v0fN5gPprvt+qzleR/Kr73GzTmb/z2qmuu
vhPVfp36/aox1+pYqfpXVP+vjt9D139e9P57vebbW2PcyLuh+k00p5x+3/2r
3g/GZb2H3MneruN0ld/mHW7wM+XZ3hN6rfhZx2Uq76Xxn9fcZtV6reab/lvP
+wb1P5W1Tf0nqu25usYNqj8InUfy91WvmayVS3Ss1vGzjm/5jau+hwkqvxf4
3n5Rn/G63mG63ovsF5J3DL0n9uB56norNP5Z6FNlj3GL+r8TeOx+Ovcw+5/k
tgkvrZ65ntu9Gu8H1TdXfasa7x99VP+n5Al6vtP5viU35TtM1wz0s0mS79Rx
vNpfzRqq8XbT89xGz3O85JPU/3a1bRr4+39W87lI85kh+cOiz1E3Pe+14nkd
o1SepXOLVX+J6t9W/zcDv4+nSX5I8jmSp2o+c9R+jNrPlfxV0ToD+2eH0LrE
kUU/m4MlFyS/y57Ed60+T6vvGzruUPkzfi+db6fOh2n8fSQ/qvXrPfW5Vn33
0f1druutljxG8r6SX9DzP1TtE73sGckHqn6extso8nwLVb/zv+v4Ke9vgW/o
Bz2/mVl/Ly/yvavuJbX/WvILkq/KW59cJvmpqvcx9rMuKs/SMUT1UyXPU/1M
yQMl3yP5RcnXaj4HqfyKrjEB/Yy1LLQ+na/6nkfk09+TeemYrfIVaj9G7Qer
/ib2C34j9h6df0b3t6vub6Tua0eeAWuJzv9d9fM4QOXFarMF34+e2R0q76Q2
52jsFei/7PXqe4DajtO99NX79Df6lvoN1/eyi9p3lVys9ft9mM7/rnOtNd49
Gu9ulXfWGAOKXg9Z21dIboM+zbjqW1Df7VW/s9rXq/01GuNgjfW66heqfksd
r6k8Tkc3lUtqv5Pa36H2U9R+R43Xv+jvuaP6vqdzm+v6m+p6m6h9Ex0n6Xpn
6NhC5f4ap6y2d+p+hub8DgxSeaTGba/ygWpTUXmp3pHZ+jta58ajOxb8/XdX
/VyVb9HRR/37Y8/ouvdq/HNVt0rnP2D+7JFaR57UGPP53jWfPLqF2t/Gelrx
us76PlflTzSvn2r8TD5W+TMdP9f4nj9VOYt9o/7nqf2huvcv1OenjbxeMT7r
Oe/mKsnbaS77ak7va+57832rf0b1G6X9p+j6+0iuzfid2InfQ8dJavuE2jZv
8Jq5i+7l96zX0vmF9P1Sm5dUflPtFqu8jY43VH6kYN1hex0Pq/x95T81JNgE
nUS/x2Mar1Rw/QWJdWp0w1l569pT1OZvjXOj5lSv8iM694HuoUbtu6r9bTq3
KPaalFG5GTpjuv/PljxX7W/Q+BvUvrWez4uSr5d8iMa7Q9e6XmN3UV1ev0c7
yefxHqluf52Lam3TtMlbh8XW4Z0fr/6n5fwtzJE8VvIfrLEa/wqVD1PdO5I3
471X/VKtn/XaH5fo3h9Qm4c0fnuNN6hoG6pF3mscttU92IRq/6juZ1e1n6r2
U9V+F9Wfq/oJGr+fxh+i8V/VOnC75EE565iX63qbVb0fc02uPU397+d717mB
6n+nzn2qdqH6H8LzU/2tqt9B9WerforkSZJ3Z80t+Zu7Q9cYkvO3iI6ArvCq
jpc1vymq65/zOzNC494jeYTkPPqK5B3VJ1TdJSr3aPBxm9qcm3PdRJVPV/kU
zWcvlY/QHFqj62uAUG03Sbx3XCL5OXRNnZunsbbQ89lYc1mu42T1X6/+u6k8
rcE2yM/qs4P63if5DT2LsYHtrROxWVVur9+9s+q6qe1Hml9n9b9W5xZpTosy
3g/yKr+qcx/y7uh4ReU/dG6D6gewBqo8q2jb5WV0RtZXHR/pdxmvczNU96/a
dFf73uo/IfHe06nGa/pz6lPQnDfWvdwoeXbR60EPte+nNpMTr/mb67l8k/Ve
gD6ILXOC6q9Xfa3kesnDsEd1rUc1xiPs27pOG/WtVP08N9Xc20tuJrml5D3Q
WVUuVf29baL6XVV/lJ7Hn7r+MWAwOvdQalP8Th9dr8Q6qePLVN/dTfWbSd5Y
7U+UHGk+Vc1nuOqPKNlmbYEun7ct21THNpK3UJ8O6vu27m1y1t/zW+jx6l+U
fH7g7zMvuYT+qzkcj/2oMQ/EFlL/TpJD1ZfT692p9i/r/Psaq6WO+cxL19ta
dZurvKfa7w6Gpet00jvzPmsf9ln6/G5nb9f463X/R7MHqXyX+vVUuZXe947s
JxXbx311P5+yF1f8+58ueSn6QcW28lDJK9EPNMa/Gm+gzh2k8p86/knlSSl+
0Eb39rTONWeR0Xxy4Dc6d2yDdcytNN8fstY9XyzYnmDNmgPGpWN81nN8VeU1
FdvC5+r6X1X9PFnrzlL9Hfot1lasW6BjLFd9I9VH6Me63nG61isF4yOHqP3L
YGsV28aD1X6F2o9Uu6aqv0n1R+vZbND9/M37ovNHNxizaqd+P2eNZY3Sc9td
9Qep/cYqT468VzTlPPaU/u6p+oNrjEHyzn6od/eWwO/y7ZHnspnqOrBeRt5r
GyTvWjRmt4OutzZrLO9qnd9L4x3KeqzywzqOVflwHVvU2ibvpvaFnG11vs+s
+g7R9SZjC+jc01njhc9L3kbt16v9V7TX8/tecztSc6jL+Hv9W/1r1L6X7v8Y
8EPJGcmD0VFVvqXkvWvjwPZP08S68kg9z2f0PDPodWl978g67aF8u4F13RaJ
ba1Jav+q2h+uujN4r9XnVNVfqXM76N6Wa47vqu+Bqu8e+ptnLR2i/m1Vn6i+
kq6dV2p+b6l+jMpf6fzbure9JHfOW2f+z7bIW5feVc/jjPR+bi0a82E+6/LG
grrqWqdpPg2az8ns3YmxoXtV/7bqWyXGNu6S/GbV82S+sfbDatGYB7bQ2ryx
kKZ63z5I53O+6kqJf4teqt+6wXvC/uF/Zs5/91dXNdb0nc5tm64nz6n/x3zP
zFHy85JVHWzPM9fvMTtjPLCmZLxjtuq/Uf1HsfWZ6TljwujMfG8Pg2UGtuE3
TWwL3KTyzrre4xrjqYzxv3+x/zVGCz2vaZJ7RbZ156h/W/V5Km8M7ACwmsDY
2NYFY7adNMbYovXJR3PGgLEp46qxnA3qs2ODMdvd0WeyxnKX8j7pWqfqWruo
rome3/vq3yEwPvaFzrXX/re17LcTVLe3+tao/lLVHw0+pDGuzHlN/YBvoWr7
bTddbyP1vVftL1R9E35/3dtsyfdJfpvvQ+UcOkrO78znmsv9fFNZ64w3S56u
Nteq/hzJszXmNDBy1Q+U3KZkDGidxn0ha2yoi9rnU7x+mdo/oTnsoXN/Zq1v
nKtzw3WvrfS8hqh9VfUXSN5c8nlF6ye0HRkY2+CdX6r+r+f8LeTB58FKVX+s
2jeq+l17WXMYr7YN7A+hn98Zqt9O4x0FfiP5Hc23pcZYgK6sZ/d61TYs70O7
0FhLfcXYzzOqTxp8fKLrv5pz3fOSL5XcUvMdDB4j+RLJB6m+MfottqnkX1kv
db0YGyO1J67l29O4f2iuc9kjWbsT1x0KBgqeXvW7OlHjbNJgzL4OXaZgLP8j
/X05ZxsoKvj7mKKxvlaf/2mMbTXmEZL35fnp+pfo+v0aGTNsnXi/mZWzD+EQ
tX9KbTqpvK1+g701/gTWvNRe3E3laZrP8bH3wK1Uvl/HSbHXyK1Vvg9MM7ZO
taXK94K/FvwML6Nv1c/+erW5Dt213thrRmt5p6L3cLC6lpH3dvwDO/Eda7yW
VX8PYMUddYxOrA83Zy6Sz5U8XvLNksuSv05ss6NvLs/blgeDYL1eljc2Ab6/
u8Z/Q31apfbspiq3wYZU/+aJ17Pxav9y1TY/tvnSvLGA2ep/je5vHfsd+oXO
/RP5mZVVvlNHpHtcDT5ctf+iHd+H6ltInqQ+4wHjwO2x7zXWPuA52F/gpOAB
OtdV56rMT0cutk7fhPdLx1rVf4r+XbW9vEnGNvCZmvtU7KmC37lalR/Q0S+2
jbmNyi+AnxSso2KvPgg+GlsHbYc9p+M9vlHsZY33qOQ3JQ+TXJb8kOTzYuuI
26m8i8ova6w9+H30HBaU/S1gHw1M/G0czHqj+osL1vn2V5+FGeuCe6r8psod
VH9FZJ/fs2DYOfsCeSfbqs3zGb+r26k8R+Xd1P4S7FOdm8H1A68fYC7oHm/m
jcWAyaDLv5M3VvNB2c8We2yPkvWlGTljiviU5qdrZid8Lmr7mtq8nrE/qBH2
RIN9ioNUv0fZmDLY92t5Y80Pq8301P5ifXsInZ75Bl4vzlffLjnrtHurz17c
n+7jA41/mPoPV/1+Odt3w9h71L8Le5/adGzw/bJWbqf68/V8L6ra93Om6ouq
31fHzip/rHPHVd1nRz2zeRmPtQ94oOTXJL8iea6OlzL2x2VVHl61PsraMKvB
82eta6f68xL32V/z2THyWO9KfjdjvLVW5e31TPbDd6XjQrW/TPdwaM7PY19s
FtUfKPlCzqv/n6F9RGCaYJvrKsbSwNS+1VyGqq4z673GO0pt31f9D/q+Nuj6
15eMaetPMC1vrJt3gHdhUOi9BR83vm504tvKxj/AjsGUh1Xtk8Q3yT3fXbY+
ii8Zn+yQqvVhfLk3sudV7WPF1wpmMrHs/f+12BjSzWXbt9fGxp96lr0nsTeN
Uf3hktvrODdrPGMLTXxc4ndpLTqx5DeL3hvmYROp7YPqf1beOhIyPh98P/gY
TpZ8k+TzY9vv+0p+S/2HZ+1j7yT5BtU/GFoH3KJifHFU1j7w7vie2c9i4w/7
le2TwTfzML8B/mjNr0a6XqDjZvUPdfQKbMNEKh+p9r/r9+iv+v01/9HsuRrr
g4z1kcskb5+xTb5Q8hFqv07te6l9F8mXq34H1S3hkHyp5G0zfqfYry9Cx8r4
HX2R/Uxy24y/yVdLtq/BVvGpnQNWDWasurd0vMneILlrxj5l/AfYY2D/+BwG
VP0+8y1so+Nitb1QdS/q3ToMvErte6n+KJUrYDAqD2b9yvsbmC/5JjAl1a3D
Z6r2t0juJnm95HvKtnmxfbGHDy9ZR0JXmgNmh39b8hvg6Toulnya5AVZ+3xH
l71GslbyTHm2YclYB5jHRypvVPLayRr6hspD0E81v66B7/9tHe9k/Ex4NnUl
Y4dgiPgDJ+n3baRr/YZNJ/k89e+aN77B73GZ5FNjt6nRfK6Q/GRomxvbmz2d
vR0fI75G1nzW/oMkt+H90XFo1nvAwrLXXNberjq3ueTdS8aS95fcSvJjJWP9
W+OjkHxw4rX4Wc3vq8T3w71tgw+ubB0FXaWL5BaSL0fHDo2Jgo2OwqbS/Zys
Nr/xfrK+h7bhseXx6WEXoHP1AUtI7MvAp9G3bPxpIz23LaWvPF4xPhWFtjGx
NcFXmoTmyMCVuUptH1B5ZWB/Dnhn29A+E3wnD0u+Im+bgN8bPK99aJ396KJ1
QHRBfEL4hu7TucdUno6PCPwITDC2TwTfyKWSu+ft01oP1l4y9gMG9D+VD1f9
b/reeuh761Tyes3egE6MbgwnBW4K/sL+Zfuvtoc3AsaV2AeJLxKd/z7V3wvG
lLcPgfnwzfDtvJLx93CU6v/Q9Ubqel1LxiTAJsDHe0o+E/2e+eWMj2KTY5tv
pOMR3gcdI1X/heQ2Fduv50lemvP6hX69Tmvu55JbS/5Y9R35bdnTJW+W2JbB
pslKHlO1bdhcc1qv8vvquyC16Y6p2P/8Wmg8tm3FGD9Y/xLVN5d8lsa7Xff2
mup/Ufm0Bu/b7N+TdT/9JJ8YGoMFiwWDBYudLPl2nkfR2AAYwa2p/+rq0DYy
tjI+aHzR7FmX6l76Su6Qt/0/sWR/6z952zzYPkeW/W7NzXn9ZT2mzDvXm2cH
pwP7OWv+V5jYFnoP+6RiPgT6OfLGFdtU2FZ8o23Vvl/Rts5rOooVYxLY/O9I
bqiY+1BpZPy0p+bVTeeqqYz/uio5r9++TscEfMnq3zFv+5nxWoKlN7L9tqPO
n65rztC3FdTa37xKY9yla7XUfBrA9/jmcrZZG6m8U8m+t4tYD0vWEdEV6UPf
vyVPyplz8pfKTRLr7+gXG8q2p+BCsaafWLK+CdcMzthovR9boJ+wHuv3Xqe2
TyTGdi9U+0tZH3VAuFuDfszvrf6N9X4/qHP3l+wTYP17RPKDks9R/YDQOiG6
YX/289A+BHwJgxL3fUvj/Q98Wf33lfxXxt/zmWpfxA8l+V7GS1x+Q+1/U/ks
1Z8W2seArwEMDywPn3j3kjEJsAk4bvjXr5PcWfIqybewnmCzZ8wxG182Zgl2
CZ52iPrfoPr9uF/VT1L9jZL3z5iDB19tDD6njDHXdWp/jeSOrD0Zr7dgamBr
8O96lOwDYf2fpvr7Sl7vn8R+0TFcdWeofe/QPkt8l+yZ7J1D2Z/RB0ou469p
XjJGDXY8TOcuKXmNYa0ZIvlC+vKMM7bHG5eMsQ/DVtC5kSXPibnxmw4t+Z65
d/oMV3lEyWNh721Sso8OX9tgnbtA5dM137rYa8SdjCV5v7x19tmScyXbRthI
L5Wsg6OLb8X1i8YYB2MrSR6mcqZk2wYb53mel8brkreN/gSKbsm+X3zAs0r2
6bL/3SX57pJtJGylNjpGqG7Pkn1HvNOt9Xu1LHuvfV1jrNH7M1bjx9J3Wutc
E9YfdMls8B9hpEfktRt8+Q98qvp2n+Ec2LrO9Y+N3x+qtrN1/kqNdXbsuozO
HaJzs/RbhpIPkvy05EMjc4MS9K/YuhH+gfUav6Txnw1dd7DaP6e2B0fmTjHG
6WDckifz22ftLztc8jX4g7P2Xw3WUVE5h/6tutXgKOiqko/B96H5FlQ+nn6a
78Vq3wzdXOfmRtZpuPazkXWd5/W3f43HHKK2xbLHu0jlq8Gu8l6PNkNf07nL
Ys/tCI0xT333UvshWfv8tiz5GZdUd0rkZ99Gf7fMGj8AR7hO/bfK+hvnuwev
PilvG3N2Yh0L3W2fFE9pFHmtLLKeRbYl0Z1uk1wb2xZEV5opuWXsNZX2V6l8
LXuR/raSfCTvp9renDc2yPswNjafbbHmcKGewXYl87s+kHyB5HYl89velnw+
PmPJL4LtZv1OvKDxxmuMPbLWH9Ejt9X4HbPm8OFfvF3Hfll/7yG/Xdn46+yU
//C47nlUjTlN+L/RUdBHVsbWXQ6LzLXjmkN17sS812t8csMlT9dxVtb6YJ/Y
OgS6xG8F20bYcPBxty3YtsvCf5V8nK55O7wpHfdn7fMbq/LjGqN/1vrvWSp/
ruM+lV+usU8MWw88cprOLYvNfYMrRZsvVJ6hY0DWPq9BsX3OrGX4zPDvYCN+
r/Y1oW1HbDL4xfCMsdXw3+CPxcZ7OrbNB98W3i22IHy41bqXj3WPLcCLy+YD
zyiY/4oPHdtzIPZJYh3yCdbf2LolfjZ0m6mqXxrbtsIW4Bl8GVtH5vl8FVt3
/iNvbB4+IbxCbFL4hx/HtlV3UP0dWWP08BF3S3Vd/P34/e/V0SPr/bBJbNsW
rDLWHHfnPYv9bWOPYZfdJblb1vtdifcptK8Afhw8OWx8+OQ7Fmz7Y9PDL961
YFu/NrQujU79TWwdFvnb2LotOvi9WfvY0c3x7+IrOoL3LNXNwWvx73+tNn/l
/azo81lsnR397PkUz030vFfXmAOIv5f3Bf/p3en78GGtdWF04pdrrYvDF79U
8ufwmjTvWtX3BL/RHG7SuS9Uv5vkSZLvTP2bX2M/FcyV7SV5peQtVW5TMF//
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
TvQO
                    "]], 
                    Polygon3DBox[CompressedData["
1:eJwt2Xm8ztUWBvCfTK9zDt4zKA2KCEUplG6jVEQDGSJEhjKkDKlUQshU3e5V
Gm9uptKk0E1Kt3nUoIylSaloQEjjzf2uzz5/PM7ez37WWnuv3373pF7/4Z2v
2CfLsq4VsqyyvyuKs+wFxEm5LNtVI8s61cqyp0uzrJ16WzimKMt+wFWm+xub
cQVZdhzugrIs+4ruoWpZVgcOhndxz9Ct4K8l2xZwsvqgmll2KdTRPop9Lf7+
y3aq9inQib8duP21X6i9qHqWfVgxyway6YM7X/vdBanPRfzth+uuPqQwy2qL
NYBuK3/L9KE1vEf3Z15fcN35vwBa8fGjGE/hWqkfB01w3+NG0zZlcxV/E8Re
U5Jl02CjPtRSv1Ksa2muEPcI9YfU+9B3o/kV/7Zybb6G4EeqXyjGq5WybD3t
sXJ6C7uK+t2K7nqao2m74nbTvokrVh+Iv1x9L7SIvqg3wHeiG4ZriBuuf3nc
XL6G4BrghuGq4WbjLqQ9RflUaCovE+SlAv5YujH8HYHvTPMUbrn2pnKwU/86
ysEI/g6nG8XffnQP0mw2jkfksz40iLyyfRY3iN2l8W3ptrEdhN+kXFGMreZU
F3mpyv5E/m7EnaStB80OMV7HFaj3ww9VX8HfNXxdDWfit/N3IO1F2ufL3/Xy
2Ms4+uK6ab8PfwEfNfi/GtcycgxtjeefdIvxDemaGMcHdEvUd4mxVv9vgLHw
DLs9uA3KE2A8PItbzf5D2K1tHW45bjocIkc94BI/mHHazsJ9wv+nsFOMMjHa
4z5T/xx2x3zA1YE9ykP05yn9/pfxnk33Jc1X8Ku2ujQdcF+obypM+oNwR+AW
s3ka18HYPpHTHWK/p1+jYb48v6SvTemW0S2nO4fuM7of6N6guRyGwZM0zeAl
up/k6iM5ncv23/pzmXjPsr0V/znbUtw1uIX+PkrzGHwAq2Anv2vK8/ej8tvK
I2A4LMZtx72rfCWMgiW4bbiVyiNhrj6/wM9D4mT68Kr+LJGb49WLxXuRZrP6
4353Q3DN2b9Jswkm6dODbAfjvqGpivuBm/ns3se/Bz+JtZqPZTQT5XCHcfWG
mvIyKeYjbV12v8Ld/L2l3g6aqFehexC3Xr0OPKS8wd9t/G6HQcp9Qyf2a9q2
qdcqTt//cdxCbXfgSiIurkf8TnG34cbpz13yW2oO/WncjWi+43MuXfeq5jO8
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
TJbU
                    "]], 
                    
                    Polygon3DBox[{{5099, 2499, 2405, 2404, 2774, 4267}, {5191,
                     3030, 3031, 2176, 2175, 5053}, {4187, 2636, 2346, 2347, 
                    2637, 4188}, {4182, 2627, 2341, 2342, 2628, 4183}, {4178, 
                    2618, 2335, 2336, 2619, 4179}, {4018, 4017, 5180, 2775, 
                    2776, 5181}, {5098, 2498, 2402, 2401, 2769, 4265}, {4010, 
                    4009, 5173, 2765, 2766, 5174}, {5093, 2477, 2347, 2346, 
                    2608, 4170}, {4014, 4013, 5176, 2770, 2771, 5177}, {5189, 
                    3026, 3027, 2144, 2143, 5049}, {5190, 3028, 3029, 2160, 
                    2159, 5051}}]}, 
                   Annotation[#, "Charting`Private`Tag$2140477#1"]& ]]}, {
                 EdgeForm[], 
                 Opacity[0.25], 
                 GraphicsGroup3DBox[{
                   Polygon3DBox[CompressedData["
1:eJw1mHe8V8URxX/4vHNNfLnm+fMlMTExmpiYqDSpYu+FoiCCinSsFI0oqIAN
RemgUekC0lEBewMLxYICihUEERTEAgKKLeV8czZ/7GfO3Xt37+7szJmZPahz
r5Y99yiVSutqlEoVkncWpVJLyd6SV6vVUmejvUulkZXuf0N9Q6JUqq3+jRoz
sVwqLVTftdUaq/6a6t+g/mvVV0e4scYuE167V6l07D6l0uC8VDpf85wu+YL6
n1R/ffX/VWNvzzzmUOE7hOsK/014sPCRwluqSqUvtNgH9M8RWs/Zmud1zTFc
uLnwcuEeaofp2wb67yCNPVx4vdbzgeaYpOdvNH6N8P3CXfXuHeFxwl+q/23h
scKfC68WHiP8mfD7whOFdwofITlazw019j3JCXr+Wv1fCi8Q7i55pdZwhN43
1Bqmaa0v6vk66ecBvTte31wuOVlygeQHGnuv5Al6biv5rtp44W3qf0njFks/
jaSfL7T37eqbofm2C+8Sni08Wns/T3tfyT8K6+ko/XeE5qgnvFl776f++sJN
1N9JeNMePrO7NLatxq5irL5vU2E9jhJuIPyZxo7TOTVV31b1/UVtYOazv1m4
Q4X/vUnr2aI5J2s9NxbWzdH6V19901q4mb7pUliXz0uu1Bz/1Lt1er5Iz+9L
Pi15o/ou0vfnsoZKyxXqX8IY6aGJ9HCYvhmeeT+HC4/MvNa/Cw/NvOdhYdv5
ROu/Hr0Kt9BcU8r+fx+dRX/1X1hhm75JuL1wa+EBwu2EWwl3KLzGZyVvUP/5
Fba5fsIXCJ8jfIfe/ULPMyVX6P93C6/RmFXC9whvEH5L+D7hzcK3Ce8b9p1B
wvsJbxK+U/hX4TUPLrz3PpJfqH8+/87sH+Xw2r4SfoR1oEu1Y8HqH1L4TK4v
rKffca56Hib827A9jBA+QHiL8BDh3wh/Kjy0sD30L+xzvw7rZJTwH8L2sE34
UeEe+E3Zurmm2ut6L62Nbzem7w9kf2Gfb5j7P5dLNsi910tz6+D9pAfW8mFa
D3p6N+nq3rJtpHe197E+7YX9fZT2yJ42pH2x9rVp/eh1TdLtLyXfVvtY+BDJ
WzJz3K2Z39H/CT4ODwhvVv/csL99Ijw77IfrhR9gbcIbhKeHfeAj4WmsX/hz
4XnCV0h+rDZDeKv6PxWeI7xDeIvwg8K7hd8Uvjfsn2sTR8APHwpPQS/C64Sn
smfhz4Qf4l9a/1bhhxOH3KxWhHl4k/As4a/0/RvCd4X9jX3vE7ZhdDYy6Q29
jki65QxHpXO8Tt8Ha8CnhPOwX28Unhnm5UGF+aMn/qL+vcJx5S7hPyZ9wp0H
JnsYILx32Df7C/88zNU3Cleyxxr2L3zuKrgtfE747bzCvnSN5MOF9/wPyUF7
+n/86xZ937HCttFS/Xdn5rJF6p8k3FHtBeH7JTupDRQ+Sq2zxrwkOVl9nZN9
oC90BQewPtYG1+In2BhxC/9slWInvELMJA6wzxZpD+yF2HVhsjnsDc6DC7D/
JfrvFOEuas8JT5TskGLL9Mzx5WXh+ZJ91JYKz5O8Vu1F4Ycke6dzXpT5rLHB
aZntcJnwVMmuaq+GYxLx6AnhcZLt1J4RniDZXu0p4fGSFyUeui8zF2FrxK22
iYfGZOaix4THckZqi4Uf5owyc9n/eZ04g31gG8SRhimWwMMNEhdzdo3S+cHJ
9RIv3yrZWK1ThW2TGAD/Ezvqh3WJ/RIPiAV8B9/9j+vCMax2ihHkGcQJ8pY/
h3MXcoaDw3lD/8SHxEliGraL3bJWeBOOIo5gl5wn8a5mOOb1TL5AbnJrWi9z
DUz2xTxD97Xv3iNuaxK2T+x0yF7m8p/CcblWWGfkNfgefgffY+t8R4yrHY5z
xKa64fhEzKoTtlniJfGgTYoNxAhyh9vC/8SvG+X2++6Sz6v/QX1/tdqTwrMk
e2HHufm4nuS5ufXaWPLs3PZbX7J5brs+UnJWbl9sItkqzc9/zsx9/rUkz0mx
gJhwTG69bdc/e+Re76mSB4X3jg4uKZxzLZY8LrdP7dD7Y3P72dfsKcUaYs5l
uX30ZMkzcu+1pmSz3BxZN7cNcqacLXaEP2JL6B5bRf/oEt9Hnw8V5qxekkeH
OYfzOCs3h9WWnF84rveVXFA4Bt8g2TQ3f9RhXbn59SjJBwvzbHfmzH3O25K9
Y8PY0COF4/GAwnF4RuZY3K1wDkuu+VGV49IE2VXrwvwxkjMvzHOj8MXCPj0C
rirs08MkWxX23eGSbQrz0OjC62OdV+a202PCXIodHp1s8XHJmXrXU+1p4dmS
V6otFJ4LP6s9KzxH8iq1V4SPU+tWYTtskmxxbZVj3diy6wR85Ud8O50v59wt
N9eeKPmc1ne/fKaW8sM/hfkW3sWnb8rs1/h0v8x+3Sk3lx/P3EnP6Puk3Bz1
bXhe5v9G+LTcvvtD2Baxye+FT8ntR98Jn5Cb83eF52X+nWGbw/Z2h30G3+ma
2x/wiyG5fQbfuTh3zgIPMuaDMK+xpnVhruR/H4c5hTWRc8GPrPV1ydtTzCXn
Gpji7Gth/WL35D6Dw/5J3gTPsp9XOZ9wjfMy5xauQahRLgjnIcSN88Ox40ni
ZzifeZxYEc55ZlSah/CLx/ChsC1Ow57CtvQocSacwzxCrAif91thLsYnV4S5
GF9aJXlH2GdewXbC/k9e9lzm3Gx5mH85y3uIN8Jv7un4c144BlHDsU/2SJ71
UuZca2eV869R+8lntL7TwvaPLZ8etuc3EhfDTdMrzfH46XLiW5jHXycOh+tK
4nPvcIx+M8zF8NQ74ZiBrZC7MZ6x1KOMZ+xr8G64VqWWZO83S64O8zu2RX09
FDugNgrHAHyDGpfxjCWvXJh5b+QIbcN5wtSya9zN2veiwufWGR8qu0bZqP5Z
Zetpm/D0sm3hc+HLCs+9tHCtR558u2S/atdpI6XD66tdu44QHl92DbReY+dW
OvbBXfgs599RckzZNdMavilbB3UUG3dqnmf0/j717ar2WicJHyg/75L7LuJg
4Uty14mHCF+RuxbuW+37heFawwHq75D7ruBQ4V65a17mxq7bF87lsVdslXqZ
fPi2VFMPx5ckX9D7y8I14VJ4LqzHxikO9pRcAh+Ha13s64qwjS2G18P6fYI4
E64XnoLXw/nzMuJJmMefF740rBfuYfDZWySfJicN5/PPkCeG65HZlc6biDUD
qn3ngj3PqXQORdzZX3u/MPc9yaxK51PkzzMrnS+QP+NP3cI+Rf54STiHxI4u
DtvSs9hpuH6h1sH/saEXySXD5009xD7ZYymc1xJL9gjnoHDInuEYAP9XhPNa
/KVGOK/FVrNwnkqO+p+UU+LL1A0rk81TiyxPvk/tyHkR+6n5yPPILagv8Rd4
ljsezo+zoyaDy+Ax4lXTcMwiRjUPxynqG86JMyKOnR2OZdSm5JRw+mTprkU4
znKfxFlyjtRMryXuJaduFs6rqXVWJH77d+Z6g1qjTsoN2kt+VWUd41Pfpryc
sT9mzs/IzajhVidO+D7FWtZG/fdW4tIfMtc81DvfZa4ryAl2p3jMHuumXKij
5DcpfqOHXZlrAHKFnSkXJA/8KXPtRD6xI3P9QO2wPXMNQA5RM+Va4yX/lbk+
oTapnXKkdpJfZ84b4FhqvlWJ5+eUzTH9q11HEtuIa5PUd1Y4b/m0yueGj1N/
nBKuQahjzkjroWY6OVw3UUMTb4g13D/hz/jyuipzEZzE/cn+ejen8J0NfovP
kv+emfbOvQ62jp1TW+OT+CP3NtV6no0NqJ0UzqmovU4M11/ka6eGc7atVR4H
T3JvhM/j79zBVul5VuE7SDgFPqHuJ3ay1iNTjt05d939M72bUfg+khhJfKTm
5i6DPGMquV049+PuAR/GtqhxWyfbq5Vy8gty18fnJJuZWXaufUO168tz0zly
10q+cVPhexH4CC6ibmiZ7JO7TPIJ4gf3S7/X81zJ/wLEhUB/
                    "], 
                    VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1: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
FO/p5OJtsHdD/j/dx1JX
                    "], VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJwl0ktLlVEUh/FFUZ6BFJEOGzQXiagQAicOGjgINHUgJikipahIiEQ4KPFS
em6KBoFCEAh+ALWivNbEW2M9iEglIhHkB/B3OIM/73qed+29137PudnSXdN1
ISJuyCUZux7xXNF+JWJd5vBPz+6iiHdy72LERHHELteBp+QOl+W2uVaclVtc
mtvh2vGk3OYyXLIkYoW/ezViIRHx+1rEkHO6nPuE/yozOKVvTV2hb03fib4k
fnA54kDvkcFr8Su9z3CT+pNM4zfSy7XhVfmIB6WTa8Zf5D3e9Gw0W1LKzJc0
3xbXjNNSzqW4ca7KuTnrc86twWl5yB1xp1wdHrXnklkXE4U79pf6btxn9eP8
N9P7Gmfc7QeudLc9vf/zd+P7vH/Kf5d5/FY2vF9PFL7FC/uluBzeTxT2GOAy
nrVm+WX9P7PU4/H8b6dnVzbwS33pkkJ937k7/F/nZnGDtX+sPbO2Aaekmjvk
jrlHeMR+PbhVvSwf8Kx8U7fk/yPeDeNz+xZcrQ==
                    "], VertexColors -> 
                    None]}]}, {
                 EdgeForm[], 
                 Opacity[0.25], 
                 GraphicsGroup3DBox[{
                   Polygon3DBox[CompressedData["
1:eJwtmXl0VdUVxi/hPshLcm9e3hBQoC0oCMqMIGOYghKCyCAiihNWBkW0f9jV
OlTriCOxYJWqVeta1qEuayUMDjgxqYCtM1jUqhVQ29UiCFYh/X75zh8n57xz
99nnnH328O2drnMvmb64LIqiev1pq358GkW/iaPoL0kUfVoRRbdobqXmehai
6Fdtouhs9Rn9XqbxN/r+XT6KrtfaJTVRdKTWHaG2XN/6i263xv3Un8UajR8T
7Ua1B/X9b7ko+kzrV4j/D9rrPn2/qq2/faVxbew9Vunb5ZpfWxVFHbVvlImi
Dur3VkbR7fr+82wUtYh2kVpW55ik7w1qw9R+EM1DolkqmpO07+81/qv2XZP3
Gf9erVaKoqf0fZfOeKvWd9Neb2ubPpr/Wud7QfSviu4ezY0ual50f9S4VvNN
Gg/VPuepP1f032q/yaLZIX6rRHOt+m80d7f2OiBeV4r3bdrjAf3+XvP3q2/W
/SbrPieLT6P6rrHn12v9GPH6SuveFe/JfFcboXam1nQT3Rnqa7THuRrn1Y/V
OWP128Vnrs7UTnv107vsFF1n8Tte3z5oH0VHicf76geqb9baYWqTJZN1kvEm
7XWyxn/SGcrEY5XW9NbaOvUN4pMTbSNnVstr3El7Tcv6fZs0V6Ezb9I9F2vt
+KLl8IXO9ZJ4Pi6e2yW3I8K+7NFe3w6V601Sn4P597RmiPqVaneJ1yDRr9Z4
hNoAjZ+J/Z234s0eE5/x4pPoHCt0hlj7RpLbHt2lXOd4VLTt1T+pvSdo/XyN
26TWl1P1Dg9o7eVasltnbBJtddClj7V+ZOr3bS959dc+W9V3175N+r4WGWn9
Rq09oP4OzT2suc2Rz7pG7W7Rflfp+Vh9o/Z4VONIPAdyn9i/X0+97g31Q3TO
fRqvFu0ZOttYnfmnoh+jNi6M60RztO54ns74hPb4SvS/ZH3J750TzRaNP9b4
esljtcbnarxBPGeLZxfR3qL5ftov0f7DxCvS+b5T16XCNo29HNTvXaL/ic75
fN72ht1NEq+PtLZK5+mSWqbIdl7B5y+Kxzna8321rqn3+lbvvB9ZqX8zZ12H
Z0PBdrFUujq5YDneqfFe6eN/RJ+KV0XW/qcya99SJp7viPc/1CZpvFBzz+fs
TzbqvC3t9HYa71E/udr6X67vfUXbSefsrX5exu+Yiu+H4tNT+4zPWU+u0twM
8ZykdrtomnSek7SmXmsG4A9F00c8F4r3+oL5n67xL/R9QWzbi/Br4nNIfJvF
f7Z+v6D7dszYBtD/CvX3xpY3vuJa9bWi7xjmkP9ZWndjmXXsZp1jDffSXvU6
QyQeb4hnXdDJas4U7sW7nqKzztDvqeqb9XG8xheg/4l9Dr4Hv82+8N2sbxMz
lueDou8d3vQitSmi/VT3uEF8P+d86qeIzzVlfu8leuO3ZB/bRTtS605Ve1Xn
+nWwU/zqHNHfUmbdPT72/CFUT7QPxv52nPol6jcxL54/Fu2L9Jq/SfP/i3w/
7JD7np/4jY4R3R9ij1l7bGr59NL8aaK5ocy6/d9y89mrfnjOOr9JMhyj8WGN
12v8UGydxLZPylgnsc8W8fmnvh1OLJOp+rZIfSfx7aD56fhF/X4ttt3dk1gf
hqbWU3hNVD9dNF2RkfrT1XpofLX6GrXNse13QdZx54B4DM7aZj/S+Kai999Z
dBxBZsgV+WOL9xXtH/GT72rNN7KjtZLViYljALrah5hTsC0Q+yrF50nJqkHz
t2v9OtFfJjl8JhmNFJ/Py/2eM8KbTkutm51179V6hM9EM1F8eqs9ovkN1Y6V
X2i+r/oTiK/iv0c8i1n7q5L6lzS/K7J/Rm5bpD9vq38vxCniVSm17X+ovabq
DkXxPCUxRgGroNsfqL0vPos1t0N0C2PHgrqi1z1e9NzhYJvEavQBvSBOYaP/
Ljpe8n1wwVjl2Ng+k/h4re69Le/YsQuMon5C3vjkfNGvzDs+Eief1rhS4z+r
/7LCd49SYw/OX6pwnL1Oaxu19jrJ4i7RnKq16/KO7/gKMAz6jI7P0/me1Vv2
KzmeHi2arXnHlGvEZ4v6VXnH5YvFc4DoDqIfNfYV6DD+FdwD/rlR8xv0+wjt
vYVYn9qmwQ/5gCsKYJhyY5h96i/LGv+UBQyG7eMDBmVbr9fqV18Wr6f0btsK
9te8XVXWOBI8uTPgE7ATGOrYkrHmypzj1evad21qe8QGiQ/gzGWaH1WwzeIP
X8kbi37Jm6aWKbJFR/bEngd/XCK6NUGff1RhnHl64lifzTjeg4U6BJ98jPYo
ZazPryUBe4h/9wrL+Rz8eJX1YW3iuME7XpDYh+HLNmjfoQWfY4fkXZ7xXo/i
axLbZrl4jhTNarCHaGYWHE+JUysCH2wbH4g/vK3GWBZMe5543Js19pmv8ZCs
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

                    "], VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJw1mXeUVdUVxu+buTPz3pu597159w1iABVQilKTSAClV2lSbNhQVIo9f5iV
4DK6rIgFAhpwiVGTtYwYXYbIDKBRxCCDoKDEEguClWKJIggqJd+P7+aPw5z9
zj7lnrP3t7+9aTv1molXVwRBMC8TBKH+ds7rH/UXVgbBVVEQXJoEweCqIDhG
P59bCIIWGt+r/kLpfFcbBP9pCILj4yCol85d5SAYKv2S+j00PkP6UzXeUXPu
0SajNHaKdHtp/FRt9orW763fAslfSqerdE+WXC3dQxrvpf57WuOvgXXQHar5
A9Wv0089c0HwpuZUxNZBt7t0dmhuo+T3JV+k8Vukt0LynfVB0CTdSskVao3q
vy793dkguEN73qXxYfptiNZfJP010tlRCoKZoc/0sNa7mO/VWedIvlf6OzV+
pcYPq/1Kaw3TN9Wqf7rW2KNDrpb+BK0zS+ttl26NdLarP1v3m1X/n0Xtq7va
pTU/1P1NkX5Z/Zu0/u1a/0Kt10nrjdV6GfX76Xy91b9Ta0zO+b4Ohpa7S3+z
1vuL1vtBb7NK6y2TfKvknzT3RK39ruaHOd8Bd9FBex3S3Pt1nirpNOqM9Vrv
Ock/19ysWp3201AwRt/fjfOHvu+u6p+t1kHjRbVB6l+j+Us0VpTOMvW3aM+T
tE8rjY9NfEbOyjdMlXyhWg/1t0m/k/pzNf43nbeFfjtN8hKt0U39rmoXSD4/
cb+L2nnq/0H6T0n/Z5LHSH5f+52o/VpKHi25Uv2dWrsJ+9A3T9Bvs9Vvp/Ez
Euug+6TWGFvy97bWeHv9dqbGZqqN5Cxa5yPesmhf4JvPSc/zO8wz9Pkuw0bT
92kseL+2khdKbpI8UuuMkLxO8jb1WxR9l9fpbM/ovRq579A2tFTnmaL5OY1l
1ZrVPynxWtMlb5H+Bun0kO69spehmrtCZ5yhx/qFfntVY/3020Hpnyz5Nclv
SD5J/RPV1kpuVuui/u2a31djr3DfoW0IW1ojubPkuzU+UPLliW37m8D2sV7j
/5X/fK32d42N0TeN03hzpe11m87TM/adcDfT8JEqv8Ejuo/pkodLvkH7PaX1
3mVPjR2vPV/U2qvU2qvfVm1T0d/D2AlqqzX2uuQO6l+v/UZIflbtKL5N8uda
v5n3lDxL8jCNjY7tSw9rv8Oy/Sadr7X+7tee/9L4BwXbb1lzVkgepPmHsVfJ
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
                    "], 
                    VertexColors -> None], 
                   Polygon3DBox[CompressedData["
1:eJwl01toznEYB/BnTvNuY+PdUF7JYQ4ZhlpOOU0OxdhCVnIMCXOl5AI3Ily4
pFy4EnFBORc5bDObSMqxGHIIRSkhxuff/+Lb+/t+n+/3eZ7393vfQWu31TV0
iogq6AorsxG78iIKMhEZWIXvgY2K9T0ZCiK6lEZUOPenjfI5nm8CtPSOGN0l
Yl2PiOF8s0oiHsrmqV3pHPG9KOJEWcShXhHHzcgrjBjIV6jfPb6+fJ+NOM3b
hDfpt1qvKEz9zfh9mGhGAe26fgvwrbx1dvmDL+S/SLsG9UkWmvW7jo/lO0Ha
bk4ne1fiZ+mzed7aY68Z5/CXao/yI17DDH1z+FLeIc6PEx0/ZucaWo42Fp8k
X0ybDp+cg/benreL7Uj7Yd9l5uRod9zLs2w6I5k1APbznKe/kT2Pd7Pjq2ya
T/r8k+2AfXzNfP1odXgt7KRV834w9p9cufxB2gEY5DwYKtTq9ari65Ato70w
axrPUT16yBVl0rd/Tm8xYyDfcrWr7nUD32x3c9l5puwU33udXge85U/frUNm
OP8tngb6UvVavhy9QPYSPateo18prUr/LXy1fOdoNbyb8XaoLk532sT/UW4Y
7Qf+E9ppI/EG56nOb7p7D3ia3Hdx+tbJm/81o9rcJlojjJJ5x1/hc5H6b5lf
UEZbjI/JpvecvNtn2RmyT2lP8tN3zyk14nft89v5m+xXaMXX0Kcm+8MO3sN4
PpxM3lr+DNzA56vPU/8g9x4K3Vsf9/Agk75vMn90NtWT+juo4p8st4Q+2Hmu
8zioS+5JdoRd18tWyrbZZTqtnLaKNpLWSNtUmv735tCKaBd4SuRbnFvtlnE/
bf6Xu/mO8EzUf4xZp5L/Ee8X/frR8miT5G7Sy2VX8A5NfkM8/wGsO47U
                    
                    "], VertexColors -> None], 
                   
                   Polygon3DBox[{{4969, 3658, 3656, 2281, 2280, 5064}, {4725, 
                    952, 2302, 3847, 3768, 5261}, {4880, 3549, 2356, 2357, 
                    3550, 4881}, {5252, 3551, 3769, 1797, 1996, 4882}, {5095, 
                    2479, 2357, 2356, 3629, 4941}}, VertexColors -> 
                    None]}]}, {}, {}}, {{
                 GrayLevel[0], 
                 Line3DBox[CompressedData["
1:eJwl09lXTVEcB/Bd3YbbqBErlatIpEhmmSJDhMwzkVmZQ2RoQG9erWUtf4E3
/gCPFm+Gd29mMvTqc3j43O8+v7v37+x77j6Jju72rqQQwgd6YiFE45cpIcQM
WvJCGOO6TVbIThcJ9ZGCEPrMrVN7JXvVG9T7jZvUBl03ux41b0itNCOECZRR
TgUT+ZSrn5xEJVVMZpz7TZHVTKWGaUxnxJpaOYM66pnJZ/VZsoHZNDKHUr3m
ynnMZwELWcRPaxbLJpawlGV8UV8uV9DMSlZFe9erRa5mDWtZRyu/rFkvN9DG
RjbxVX2zbGcLW9lGQq/tcgc72cVu9vDbmr1yH/s5wEG+qR+SHRzmCJ3Rc9Pr
qDzGcU5wklP8sea0PEMX3Zzlu/o5eZ4LXORS9Mz1uix7uMJVrtHLqDXX5Q36
uMktfqjflnfoZ4DB6D/Ta0je5R73GeZ5umfhXGTlh/DRORkwr9W5GXbuHhQa
mJNEMinEeO8eqTKNdN6alyHjZJJFkT7ZMod3vs+VeRRH51jm80K9QBZG8ynx
XbF8rV4ix0bnj/E8sc832SE8sq/6uHvY2kPjOuNM40YfcftvUqtVi0fvg3G6
2uMczy/276eEYgufqdWYoGWolmmySlaSapyQpodyWYY2oVQmyyLrnyb9fz//
Aq4gVq8=
                  "], VertexColors -> None], 
                 
                 Line3DBox[{2353, 12, 2074, 2009, 1766, 2017, 2003, 5081, 
                  2002, 3809, 2006, 2008, 2007, 5080, 1992, 1767, 3849, 1994, 
                  1995, 5075, 1996, 1797, 3850, 1998, 1799, 1997, 1798, 5070, 
                  1967, 2033, 1790, 3859, 1964, 1991, 1768, 1791, 1769, 60, 
                  4688, 904, 3945, 45, 1345, 3930, 30, 4177, 270, 830, 15, 
                  805, 441, 2358, 14, 2355, 2354, 13, 1343, 2353}, 
                  VertexColors -> None], 
                 Line3DBox[{1770, 76, 1597}, VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwl09lLVVEUB+BtSmpmmlrZnDaPFEVRFPQ3+FBBvdRbPRQ2mM2zFvVUEATN
kxBEpbfZBrIeJKKBBKfUMrPJima16Tv08PFbe521973nnHtzFi3LWxoXQvhG
nmK+XJgRQkl8CEVpISyxzk4OoTIxhOeZFvI8cTwixcxjWUEVT7nLZfZmhZDk
+j31FYZTRz21dHetypkP1e+6hnBfPULdVb9U/tZ7T4N+zLpNfVWWMdtMF1np
2kU5kmuM4nr0GfrxcjTl3OCD/XX6c9RzGctNxvC2h+/h2i31PMbxjBc08MC1
ZjmeJhpJ4DZnOeB5HfScqj2i1JQQznmWNepk57YlhHDBujw1hNPqWv10M6V6
depD9h2mXn1EPpNH5TEa1MdlozwhT9KkzrQ/Zn+J855bF8iMLu45PYQn1p2e
TwcV6hYZkzWymlPqO3K/jMkyitXrnDfdu893L4XWC5yZ2zOEdv3d6n3mFuvP
tW5KCuGM+x7KX3J54173yE/sYpb5HPmHIexkpt5HWczg6B0ziNf2FkXviB3M
MDdQ/mIA25mu1ya30Z9O+tFq71b5ni1MM9dXdpDNZqbqvZOb6EM7vXll78bo
/bOBKeZ6yZ9ksZ7Jem/kOjL5QQYt9q6NvjtrmGSup/xOOoVM1GuVq0njGz14
aW9B9PmsYoK5VPk1+l+wMvqt6bXIFdH/jC90o9ne5dEZ5Ee/Y3PJ8jNJXGJY
4v//8z+vWJFg
                  "], VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwNy1kzFmAYx+FbiCMOG6amxWR0QlpUQgspS+itDnpTSijS+/YtmslUCJG9
xfIxnPgwTuwqmqnr4JrfzP38n5Od6UQqIyLeMZodkdSB3Ii/hyNWcyKWucoA
2fkRE/qeOxzYLOkZ94dayVvGSVPiflv37Rb1AVdIkeXti76hnj82C1rsfl8v
088Yrzntfkt/2/3UBJfoI9PbqPZSxy+bH1rkfk8reMUILznlXqt7dt+1jYv0
cMjbZ+3mJrs23/SEe6teoIthXnDc/Ybu2M1rC+fpJMPbkD7nOts2c3rM/a6e
4xmDdHDU/Zpu2c1qM+U8Jbx90ifUsGkzo4XuTXqWdj7ymAL3at2wm9ZGykjy
Ly/igz6iinWbr3rEnwYtZYoVJlnz/h/VjUDJ
                  "], VertexColors -> 
                  None], 
                 Line3DBox[CompressedData["
1:eJwl0TlPAlEYheGDgAPK5oAaOqX2PxiFX2BLZ2OHiR2lHb0ghQ2ViVqZiDGx
xYRCBRU3jHFBBWVx39c3sXhy7vnuzJ1L6B8dH4lZJE1gwSrFyahfGrBLGa+U
oC+TaTJHrmGW9RGZJVdNqc8mVek5+qFPmufASc7aoYfIOfqMUyrRN1xSitkS
7+zSN+nT9Lyb7zDbY1Zglma2Qt+nH3ikM4d0jgoucIkrVFHmvjXyGjeoo4Em
pgLSIHdrsb7FHe7xgCLvPZJPeMYLXrHN/I18xwc+8YVj5t+kwXk/5C/E77Jg
i7020gobhnjGTp4wbycNJLnLMHMHayc60AkX3Aizd8rzHtZe+NAFE35E2A+Q
3ehBL9Z5PkguGtKY+f8f/gGG/klH
                  "], VertexColors -> None], 
                 Line3DBox[{4658, 869, 1599}, VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwV0EdKHQAQgOERFN3os5zAvSAIgiB4iBwh++hF7C0xsRt7791EjbEllmdi
L9ew4+fi44dhZjP5Hys+lKdExCea0yKSqRGjeRGVGRFVVFNDLfdZEXVaTwMF
iYhGbaKZz3wh07xFv/KNVh7ctmk7HRTa6dQuuunhO1nmvdpHPwM8uh3UIYYp
sjOio4wxzgQJ80mdYpoZntzO6hzzFNtZ0EWWWGaFbPNVXeMHP3l2u64bbFJi
55du8Zttdsgx39U99vnDi9u/esAhpXaO9JgkJ/wj1/y/nnLGOa9uL/SSK8rs
XOsNt9y9/yHdH3Ij3gAWkk1I
                  "], VertexColors -> None]}, {}, {
                 Opacity[0.45], 
                 
                 Line3DBox[{3910, 4169, 5090, 5378, 3909, 5269, 4100, 3911, 
                  5270, 5091, 5325, 3912, 5271, 4101, 3913, 5272, 5092, 5326, 
                  3914, 5273, 4102, 3915, 5380, 4170, 5093, 5379, 4319, 4498, 
                  5134, 5274, 4404, 4443, 4444, 4171, 5381, 4735, 4131, 4320, 
                  5094, 5368, 4700, 4701, 5122, 5275, 4174, 4103, 4702, 5533, 
                  4703, 4132, 4990, 5257, 5369, 4927, 4926, 5076}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3918, 5096, 5327, 3917, 2481, 3919, 5384, 4178, 
                  4179, 5383, 3920, 2623, 4181, 3921, 5387, 4182, 4183, 5386, 
                  3922, 2632, 4185, 3923, 5389, 4187, 4188, 5430, 3924, 4504, 
                  2639, 4405, 4189, 4636, 4847, 5570, 4637, 4172, 4321, 4173, 
                  5534, 3925, 5123, 5382, 4175, 4133, 4704, 3926, 5370, 4134, 
                  4176, 4135, 5576, 4873, 3927, 4950, 3535, 5062, 5066}, 
                  VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwN0EkvXgEYxfEHraGRmGpBV9Z0w0ZiKJ8Ar3naWPOaFqaWmroQlv0WRRBE
BSGIBqkghi9iid/i5JzzP8+9yb0lfYOJZEpEJGkhJ+JXbkQiP6L/c8Tvwogl
eR5/zIsY1XvxT/ID1es9+pz9Tr+nLOrG6my38qzthr94zynWZcvU/9MXbBnr
xH66u8K+Ytc8gzrwb/Zi7FKfcfOPj2DttnT5giqzI6ZtZ/I5faQ2e627U/mH
7YQP6634B/mYyj333XYoH1Eatdhr3B3IU7Z9PqQ346nyX9qjQWzSviPvUgol
3FTj2/KEbYsn9SY85E3aoAFs3L4ml/m2df7mvze6q7IVYavYmJs/vFRfwRvs
r+6e9YqCiCe+qL8Dvtk+ZQ==
                  "], VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwVz0krxHEcx/GvpEkzDGZIiBnKmiNPQDQz9inblVw52NdykeXm4OAgZX9I
rp6EEvKaw7vP8v386v/Pr26WN6oiYh3n6YjBBr4p4qE5IslfIZWJSGQjHrHm
ltJdo93mzO2C76Af8jidQKEx4gu93jwhzdfZFemC3Te9lBvpmFzPl/gf9Nk/
I8NvYRuTWLT7pTe2WVqw6dLt8FP4Q7/uBS38LvYwjSW78O233rbKRZucbp+f
QbXbgO4VbfIBDjGLZbsa97vKf8olm7zuiJ9Dwm1I94ZO+RgnmMeKXa37vbe5
yn/YdOtO+TKSbsO6d/TII/InRtEt/wPBUyvW
                  "], VertexColors -> 
                  None], 
                 Line3DBox[CompressedData["
1:eJwV0Lkyw3EYheFPo4jErtEpzLgOlyB2M4woVGJfOgom1kQSskisF2C7Iu4B
Q+dJ8c533nN+xT8ZyqyOZdsiYgnlroiP3ohPnGGvP+J5IOJJLtke3Xe+q5+T
H9DkO7xov+P3mMW2rmG7lS9tTfeNb+ln5AZu+CYv2OstxzQ2dHVbTc7bqu4r
X9dPyRXU+Bq/sF/xa0xiVVe1leVzW8l94Vn9hFzESMrvsxVa34ZxrNgr3uXl
U9tfT8QBX9B3yr9IJyNObN/yD1IY9WbYm2P9F9/n8zwpVxMROf2hfIRcd8Sg
vd1+pM+0/i++zNNyR19EAovyPxUqO1M=
                  "], VertexColors -> None], 
                 
                 
                 Line3DBox[{4019, 4268, 4398, 5450, 5180, 4017, 5179, 5335, 
                  4397, 5449, 5178, 4015, 4266, 4396, 5448, 5176, 4013, 5175, 
                  5334, 4395, 2767, 4011, 4264, 4394, 5447, 5173, 4009, 5172, 
                  5333, 4393, 2762, 4007, 4262, 4392, 5446, 5170, 4006, 4838, 
                  5568, 5246, 4391, 4669, 4668, 5519, 4005, 4666, 4667, 4390, 
                  5245, 5445, 4837, 4004, 4714, 5538, 5224, 4260, 4139, 5371, 
                  4003, 4772, 4773, 4389, 5444, 5167, 4002, 5254, 5332, 4895, 
                  5585, 4001, 5038, 4771, 5059, 5555, 5266}, VertexColors -> 
                  None], 
                 
                 Line3DBox[{4034, 5340, 5104, 4033, 5339, 5103, 5298, 4032, 
                  5338, 5102, 4031, 5337, 5101, 5297, 4030, 2504, 4029, 5336, 
                  5100, 5296, 4028, 4283, 2792, 4027, 4621, 5510, 4281, 4436, 
                  4280, 4620, 5520, 4671, 4670, 4145, 4783, 4144, 5373, 4782, 
                  4026, 4718, 5541, 4143, 4273, 4142, 5372, 4025, 4717, 4141, 
                  4271, 2568, 4024, 5540, 5039, 5067}, VertexColors -> None], 
                 
                 
                 Line3DBox[{4056, 5353, 5111, 4054, 5351, 5350, 5109, 4052, 
                  5349, 5108, 4050, 5347, 5346, 5106, 4048, 5345, 5105, 4046, 
                  5344, 2513, 4044, 4293, 5343, 5185, 4043, 4623, 5511, 5216, 
                  4437, 4622, 3194, 4042, 4672, 4673, 4282, 5420, 5128, 4041, 
                  4727, 5544, 5226, 4279, 4147, 5374, 4040, 4723, 4724, 4278, 
                  5241, 5419, 4786, 4039, 5058, 5086}, VertexColors -> None], 
                 
                 
                 Line3DBox[{4069, 5357, 5115, 4068, 5356, 5114, 5310, 4067, 
                  2529, 4066, 5355, 5113, 5309, 4065, 2526, 4064, 5354, 5112, 
                  5308, 4063, 4301, 4859, 2811, 4860, 4861, 4626, 5512, 4299, 
                  4439, 4298, 4625, 5521, 4675, 4674, 4153, 4292, 2585, 4062, 
                  4729, 5545, 4152, 4289, 4151, 5375, 4061, 4487, 5012, 5084},
                   VertexColors -> None], 
                 
                 Line3DBox[{4090, 5364, 5118, 4088, 5363, 2540, 4086, 5362, 
                  5117, 4084, 5361, 2537, 4082, 5360, 5116, 4080, 5359, 2534, 
                  4078, 4312, 4862, 5249, 5574, 4863, 4077, 4629, 5514, 5217, 
                  4440, 4628, 4627, 5513, 4076, 4681, 4682, 4300, 5424, 5132, 
                  4075, 4733, 5546, 5227, 4297, 4155, 5376, 4074, 5055, 5083},
                   VertexColors -> None], 
                 
                 Line3DBox[{4099, 4318, 2833, 4098, 5367, 5121, 5324, 4097, 
                  4130, 5323, 4096, 5366, 5120, 5322, 4095, 4129, 5321, 4094, 
                  5365, 5119, 5320, 4093, 4317, 4868, 4316, 5427, 4869, 4870, 
                  4632, 5515, 4315, 4442, 4314, 4631, 5523, 4687, 4686, 4168, 
                  4311, 4167, 5377, 4092, 4734, 5547, 4166, 4308, 4165, 4960, 
                  5069}, VertexColors -> None], 
                 
                 Line3DBox[{4197, 4193, 5328, 5146, 3931, 5147, 5329, 4198, 
                  3932, 2621, 4322, 5330, 5136, 3933, 5137, 5428, 4323, 4500, 
                  4499, 3934, 2630, 4324, 5197, 5475, 4502, 3935, 5139, 5429, 
                  4325, 4186, 3936, 2641, 4326, 5331, 5141, 3937, 4815, 5431, 
                  5243, 4327, 4647, 4646, 3938, 5221, 5432, 4648, 4328, 5198, 
                  5476, 4505, 3939, 5143, 5433, 4329, 4738, 4737, 3940, 5145, 
                  5434, 4330, 5251, 5577, 4879, 3941, 4954, 5598, 5260, 4953, 
                  4877, 3942, 5149, 5622, 5079}, VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwVz8suQ2EUhuFlYGKCqqihocvhBiSl2u62u6paEiPnGErMnE91ihtwEUYS
NyEiIkJE4tmDN+v/3m/9f/aeKDan076ImMHqUMR2LmIHs86vmENpNOJgOCIZ
jDg0c3KZf0MFR1xNN88fO1e5dyQocydcXX9qFgciPvgazuQGX7Fznu1wn2ig
yl1wqf7SLLn3xae4kpt8YqfnvMB9o5W9y11nTn+TfZd7P3wbt3KLf7Tz7B+X
uBezY9a5O/2iPnXnl+vinmtzef2y/IcVPMhb2Ru6TftjIxFrfMHscAX9urxr
Z8N8ksd1XV1/PmJfntJN6vb4fxvgOa8=
                  "], VertexColors -> None], 
                 
                 Line3DBox[CompressedData["
1:eJwV0TcvBWAYhuHXbNHFgoMZu95HddId7ehlFG3wg3QHh0gMEoMwSPwGPRar
y3DnzXM/3zN9ieRK33JWRKSQnRtRmxdRg+v8iO/CiKqCiB++C+so4bq4K/1e
TsQLN8B1umtYRUb3xVV69yx3YAXF/++4S/2u7RPXz7W7y1jChe6Tq/DuQW7D
Ioq4Du5cv2N7z/Vxre4C5pHWfXAJ7+7kFszhMTviTLdtdyv3etPspjCLU907
V253IzdhBtMY5k/0W7YZuUdudKcwiWPdG1dmm5YbkMQEhvgj/abtsdwt17vj
GMOh7pUrtd2X6zCKEQzyB/oN22r/8Ys/8jc7LQ==
                  "], VertexColors -> 
                  None], 
                 Line3DBox[CompressedData["
1:eJwV0UsrhHEUx/FDkmZjDJNchoSNZGMKr8CSvARJSvEa3HaM65gZ465QXoLb
ypq1a+JFKAs+szj9zvl+z/95/k9P1+T8xFxVRMyqkVTEkOptjDhJRvQ0RNyn
IwaaIr7ww/qIhFzBjvku/kh+YHfYAV+nP8A6uVus39l3bJ+rlcvYPp/hy/IN
u8HKfI2+hLVx11ifs6/YHlctl7Ai38IXZBW2iJX4PyyPNcurhLv7hku+yGVl
tzlnd8dO2s62vMCH1QP+IwfVudrkXuSG7OCe9QXP+XVuwbyOp/S5yneYd7k1
O2vmJL4q2/E8Puq9z/o2mVGt6rFyD+7M3pRzp/IJ6+C+zeNyTM3os5V/wW3L
afOW/FT/kgg79A==
                  "], VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwV0LsuBAEUxvGjXJG9zm4UgnUp6Ciw3oFCFCorQ6KziU6iEJfEC2wkCrfa
C6jVEpfYdxAR1tpIROGn+Oec8/++mWSmmjaWtnoioo7PYsQg0nzEK/aSiEI5
os19YKoUMcCd4U3+xXXRwa3etHyZf0eqk+GGZDOFiCaK3Dna8mG+ill+Qe/E
XOE7WNfp40bkc/y9mXAX6MpH3WOoyRb1Huyr/Dc2dLLcONdwP5oV7oZ7sk9g
EtuyEndor9tb5q5ejnu2z3v3Kfq5S/zoZP7/iexa58Bcc//ixXfnuay5r3uF
ir1XtpmLKMt27MeeOZLducvyBE208AcRGzQm
                  "], VertexColors -> 
                  None], 
                 Line3DBox[{5065, 4287, 4119, 4722, 5543, 4728, 4148, 4288, 
                  2512, 4726, 5129, 5300, 4291, 4843, 4844, 4400, 5451, 4624, 
                  4290, 4438, 3052, 4481, 4401, 5186, 5301, 4858, 4120, 4045, 
                  5302, 2514, 4047, 5303, 4121, 4049, 5304, 5107, 5348, 4051, 
                  5305, 4122, 4053, 5306, 5110, 5352, 4055, 5307, 4123, 4057},
                   VertexColors -> None], 
                 
                 Line3DBox[{5071, 4493, 4156, 4307, 5426, 4124, 4732, 5133, 
                  5312, 4310, 4845, 4846, 4402, 5452, 4630, 4309, 4441, 5470, 
                  4482, 4483, 4403, 4922, 5188, 5313, 4867, 4125, 4079, 5314, 
                  2535, 4081, 5315, 4126, 4083, 5316, 2538, 4085, 5317, 4127, 
                  4087, 5318, 2541, 4089, 5319, 4128, 4091}, VertexColors -> 
                  None], 
                 
                 Line3DBox[{5077, 4896, 5617, 4111, 4897, 4898, 5168, 5291, 
                  4270, 4112, 4715, 5539, 4716, 4140, 4272, 5416, 4113, 4713, 
                  4781, 5169, 5587, 4906, 4778, 4779, 4274, 5417, 4780, 4261, 
                  4435, 5469, 4479, 4480, 4275, 5171, 5292, 4114, 4008, 5411, 
                  4263, 2497, 4010, 5174, 5293, 4115, 4012, 5413, 4265, 5098, 
                  5412, 4014, 5177, 5294, 4116, 4016, 5415, 4267, 5099, 5414, 
                  4018, 5181, 5295, 4117, 4020}, VertexColors -> None]}, {
                 Opacity[0.45], 
                 
                 Line3DBox[{2331, 2470, 5269, 2332, 2481, 2360, 5329, 2653, 
                  3492, 2654, 5278, 3595, 2852, 3078, 2655, 5394, 2923, 2656, 
                  3079, 2858, 5435, 3108, 2677, 2938, 2678, 5610, 3109, 3864},
                   VertexColors -> None], 
                 
                 Line3DBox[{2333, 2471, 5270, 2335, 2618, 5384, 2620, 2841, 
                  2621, 3496, 3597, 5571, 3596, 3598, 3080, 5478, 3081, 2924, 
                  3084, 3083, 2859, 3110, 5485, 3111, 2939, 3113, 5455, 3826},
                   VertexColors -> None], 
                 
                 Line3DBox[{2337, 2473, 5271, 2338, 2623, 2624, 2842, 5428, 
                  2625, 2915, 2626, 5279, 3070, 2853, 3085, 2658, 2926, 2659, 
                  3086, 2860, 5436, 3114, 2680, 2941, 2681, 5611, 3115, 3867},
                   VertexColors -> None], 
                 
                 Line3DBox[{2339, 2474, 5272, 2341, 2627, 5387, 2629, 2843, 
                  2630, 2916, 3073, 5453, 3072, 3212, 3087, 5480, 3088, 2927, 
                  3091, 3090, 2861, 3116, 5487, 3117, 2942, 3119, 5456, 3827},
                   VertexColors -> None], 
                 
                 Line3DBox[{2343, 2476, 5273, 2344, 2632, 2633, 2844, 5429, 
                  2634, 2918, 2635, 5280, 3449, 2854, 3092, 2661, 2929, 2662, 
                  3093, 2862, 5437, 3120, 2683, 2944, 2684, 5612, 3121, 3870},
                   VertexColors -> None], 
                 
                 Line3DBox[{2345, 2606, 5380, 2608, 2346, 2636, 5389, 2638, 
                  2847, 2641, 2919, 3451, 5454, 3450, 3452, 3094, 5482, 3095, 
                  2930, 3098, 3097, 2863, 3122, 3123, 2945, 3125, 5457, 3828},
                   VertexColors -> None], 
                 
                 Line3DBox[{2348, 3222, 3489, 3223, 2611, 3337, 5381, 3541, 
                  3336, 2840, 3224, 3490, 5570, 3225, 2643, 3339, 3542, 3338, 
                  2849, 5432, 3235, 3497, 3236, 2666, 3344, 5395, 3548, 3343, 
                  3599, 3455, 5562, 3456, 2933, 3103, 3102, 2865, 3128, 3129, 
                  2948, 3131, 5458, 3829}, VertexColors -> None], 
                 
                 Line3DBox[{2350, 3532, 2552, 3283, 2553, 5275, 3284, 2614, 
                  5382, 2555, 3291, 2556, 3292, 2850, 5433, 2647, 2921, 2648, 
                  5281, 3076, 2856, 2670, 2935, 2671, 3104, 2866, 5439, 3132, 
                  2689, 2950, 2690, 5614, 3133, 3876}, VertexColors -> None], 
                 
                 
                 Line3DBox[{2351, 3533, 3534, 3286, 3288, 5533, 3287, 2615, 
                  2557, 5370, 3289, 3294, 3293, 2851, 5434, 2649, 3340, 3342, 
                  5548, 3341, 2857, 2672, 5396, 2936, 3106, 3105, 3213, 5516, 
                  3134, 3135, 2951, 3137, 5459, 3830}, VertexColors -> None], 
                 
                 
                 Line3DBox[{2460, 3531, 3530, 3280, 5547, 2602, 3334, 2448, 
                  5426, 2533, 3330, 2593, 3332, 5546, 2436, 2523, 3325, 5545, 
                  2584, 3327, 2423, 2512, 3319, 2577, 3321, 5544, 2409, 2501, 
                  3309, 5541, 2571, 3311, 2395, 5416, 2496, 3300, 2567, 3302, 
                  5538, 2388, 2493, 2994, 5505, 2722, 3160, 2384, 5443, 2491, 
                  2980, 2715, 3157, 5504, 2377, 3035, 3034, 2963, 3889}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{2462, 2544, 5365, 2451, 2535, 5359, 2439, 2525, 
                  5354, 2426, 2514, 5344, 2413, 2503, 5336, 2399, 2497, 2763, 
                  5333, 2390, 3045, 3044, 2997, 5507, 2734, 3170, 3246, 3039, 
                  3038, 5408, 2986, 2733, 3374, 5552, 2379, 3522, 3521, 2969, 
                  3895}, VertexColors -> None], 
                 
                 Line3DBox[{2463, 5321, 2545, 2452, 5315, 2536, 5360, 2440, 
                  2526, 2427, 5303, 2515, 5345, 2414, 2504, 2400, 5293, 2766, 
                  2765, 5447, 2892, 3174, 2738, 2998, 2737, 5563, 3464, 2884, 
                  3173, 5287, 2736, 2987, 2735, 3375, 5529, 3273, 3356, 2705, 
                  2970, 3815}, VertexColors -> None], 
                 
                 Line3DBox[{2465, 2547, 5366, 2454, 2538, 5361, 2442, 2528, 
                  5355, 2429, 2517, 5348, 5347, 2416, 2506, 5337, 2402, 2498, 
                  5412, 2768, 5334, 2391, 3047, 3046, 3000, 5508, 2740, 3177, 
                  3247, 3041, 3040, 5409, 2989, 2739, 3378, 5553, 2380, 3524, 
                  3523, 2972, 3898}, VertexColors -> None], 
                 
                 Line3DBox[{2466, 5323, 2548, 2455, 5317, 2539, 5362, 2443, 
                  2529, 2430, 5305, 2518, 5349, 2417, 2507, 5338, 2403, 5294, 
                  2771, 2770, 5448, 2894, 3181, 2744, 3001, 2743, 5565, 3467, 
                  2885, 3180, 5288, 2742, 2990, 2741, 3379, 5531, 3275, 3359, 
                  2706, 2973, 3816}, VertexColors -> None], 
                 
                 Line3DBox[{2468, 2550, 5367, 2457, 2541, 5363, 2445, 2531, 
                  5356, 2432, 2520, 5352, 5351, 2419, 2509, 5339, 2405, 2499, 
                  5414, 2773, 5335, 2392, 2494, 3003, 5509, 2746, 3184, 3248, 
                  3043, 3042, 5410, 2992, 2745, 3382, 5554, 2381, 3526, 3525, 
                  2975, 3901}, VertexColors -> None], 
                 
                 Line3DBox[{2612, 2551, 3282, 5368, 2478, 2349, 2613, 5534, 
                  3290, 3445, 3447, 3446, 2364, 5476, 3075, 3448, 2646, 2920, 
                  5391, 3457, 3459, 3458, 2367, 3101, 3460, 2669, 5484, 2934, 
                  2488, 2373, 5490, 3130, 2688, 2949, 5398, 3026, 3027, 3823},
                   VertexColors -> None], 
                 
                 Line3DBox[{2829, 2604, 3281, 5377, 2603, 2822, 5312, 2595, 
                  3331, 2594, 5424, 2810, 2586, 3326, 2585, 2800, 5300, 2579, 
                  3320, 2578, 5420, 2791, 2573, 3310, 5373, 2572, 3395, 3394, 
                  2783, 3393, 3578, 5587, 2758, 3301, 2757, 3477, 3476, 5445, 
                  2888, 3162, 3475, 2726, 2995, 5406, 2725, 3462, 3461, 2882, 
                  3161, 5285, 2724, 2981, 2723, 3367, 5526, 3269, 3350, 2703, 
                  2964, 3813}, VertexColors -> None], 
                 
                 Line3DBox[{2832, 3487, 2831, 2912, 5427, 2830, 3515, 3514, 
                  3610, 5313, 2824, 2909, 2823, 3512, 5574, 3511, 3609, 2812, 
                  2906, 2811, 3508, 3507, 5301, 2802, 2903, 2801, 5343, 2411, 
                  2793, 2899, 2792, 2397, 5292, 2761, 2785, 2760, 5446, 2890, 
                  3389, 2732, 3573, 2731, 3390, 2883, 3165, 5286, 2730, 2984, 
                  2729, 3371, 5527, 3271, 3353, 2704, 2967, 3814}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{2835, 2834, 2833, 2458, 5319, 2542, 5364, 2446, 
                  2532, 5357, 2433, 5307, 2521, 5353, 2420, 2510, 5340, 2406, 
                  5295, 2776, 2775, 5450, 2896, 3188, 2750, 3004, 2749, 5567, 
                  3470, 2886, 3187, 5289, 2748, 2993, 2747, 3502, 3383, 5550, 
                  3363, 3557, 2709, 2976, 3817}, VertexColors -> None], 
                 
                 Line3DBox[{2836, 2605, 5378, 2469, 2330, 5327, 2480, 2359, 
                  5328, 2651, 3491, 5393, 3493, 3494, 3495, 3077, 2652, 5477, 
                  2922, 3010, 3011, 3237, 5517, 3107, 2676, 2937, 3018, 5466, 
                  3019, 3819}, VertexColors -> None], 
                 
                 Line3DBox[{2837, 2607, 2838, 5379, 2477, 2347, 2637, 5430, 
                  2845, 2484, 2363, 5331, 2642, 2663, 5390, 3232, 3233, 3234, 
                  3096, 2665, 5483, 2931, 3016, 3017, 2372, 5489, 3124, 2685, 
                  2946, 3024, 3025, 3822}, VertexColors -> None], 
                 
                 Line3DBox[{3285, 3635, 2554, 3614, 5369, 3615, 3672, 3616, 
                  2352, 3539, 2558, 5576, 3537, 2485, 2365, 5577, 3547, 2650, 
                  3545, 5392, 2487, 2368, 3347, 2673, 5549, 3345, 3498, 3499, 
                  3500, 5572, 3136, 2691, 2952, 5399, 3028, 3029, 3824}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3488, 3221, 3335, 2609, 2839, 2610, 5274, 3069, 
                  2913, 3074, 2639, 2846, 2640, 3594, 3442, 2848, 5431, 3443, 
                  3444, 2644, 2664, 2645, 5561, 3454, 3453, 2855, 3099, 2667, 
                  2932, 2668, 3100, 2864, 5438, 3126, 2686, 2947, 2687, 5613, 
                  3127, 3873}, VertexColors -> None], 
                 
                 Line3DBox[{3516, 3266, 3441, 3265, 2911, 5515, 2828, 3211, 
                  2449, 3057, 5470, 3056, 2908, 2821, 3206, 5514, 2437, 3055, 
                  3054, 2905, 5512, 2809, 3201, 2424, 3053, 3052, 2902, 2799, 
                  3196, 5511, 2410, 3051, 3050, 2898, 5510, 2790, 3191, 2396, 
                  3049, 5469, 3048, 2784, 2759, 3603, 3479, 5568, 2389, 3388, 
                  3478, 3387, 3572, 5518, 2728, 3245, 3501, 3037, 3036, 5407, 
                  2983, 2727, 3370, 5551, 2378, 3520, 3519, 2966, 3892}, 
                  VertexColors -> None], 
                 Line3DBox[CompressedData["
1:eJwV0LkuBGAYheGjtFdCqzO1ioZWiISESEamcAFGQyyxxJIxGkQ0tlJrHQrB
SHAFajeh0nkUJ+/3vd/5m797pjw+25BkVBrbknJrciFzUmpO9lqSo46kjlV5
4yp47j7C75qL3A4+/Xe4baxzm3imt4VT9g08dH/EdXnlVvFUZ5hfM09wK/gg
y/JiX8QTnSUcsy/ggX4N5+WZG3D/lQI/iN9Nyb3btXmfuzMP6fXZf6Rf3nVu
+Q/3K/uNuYJFnOSm8dKbAtcjn/ZO7JJj/st/9bYnf0TrLms=
                  "], 
                  VertexColors -> None], 
                 
                 Line3DBox[{3810, 3295, 3267, 5524, 2561, 2699, 2562, 3296, 
                  3268, 5525, 3362, 2707, 2956, 2708, 5616, 3152, 3882}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3811, 2958, 2701, 3146, 2710, 5402, 2564, 2717, 
                  2565, 5283, 3540, 3298, 3474, 2751, 5584, 3565, 2752, 3639, 
                  3473, 3384, 5555, 3848}, VertexColors -> None], 
                 
                 Line3DBox[{3812, 2961, 2702, 3149, 2878, 5442, 2713, 2978, 
                  2714, 5284, 3154, 2880, 2719, 5404, 3563, 2720, 3564, 2887, 
                  5444, 2753, 3569, 2754, 5291, 3570, 2780, 2568, 3307, 2569, 
                  3308, 2788, 5419, 3399, 3400, 2575, 3802, 3904}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3820, 3021, 5467, 3020, 2940, 2679, 3112, 5486, 
                  2370, 3013, 3012, 2925, 5479, 2657, 3082, 3228, 3227, 3226, 
                  5385, 2914, 2622, 5330, 2361, 2482, 5383, 2619, 2336, 2472, 
                  5325, 2334}, VertexColors -> None], 
                 
                 Line3DBox[{3821, 3023, 5468, 3022, 2943, 2682, 3118, 5488, 
                  2371, 3015, 3014, 2928, 5481, 2660, 3089, 3231, 3230, 3229, 
                  5388, 2917, 2631, 3071, 5475, 2362, 2483, 5386, 2628, 2342, 
                  2475, 5326, 2340}, VertexColors -> None], 
                 
                 Line3DBox[{3825, 3031, 3030, 5401, 2955, 2700, 3144, 5491, 
                  2374, 2489, 2698, 5582, 2695, 3556, 2369, 3553, 3552, 5581, 
                  3554, 3860}, VertexColors -> None], 
                 
                 Line3DBox[{3831, 5460, 3145, 2954, 3143, 3142, 5441, 2869, 
                  3138, 3139, 2867, 5400, 2694, 3349, 2675, 5397, 2674, 5622, 
                  3804, 3803, 3861}, VertexColors -> None], 
                 
                 Line3DBox[{3846, 5540, 3784, 2394, 5617, 2495, 3568, 3567, 
                  5332, 2387, 2492, 3562, 5594, 3559, 3624, 2383, 3623, 5593, 
                  3622, 2977, 2712, 3153, 5503, 2376, 3033, 3032, 2960, 3886},
                   VertexColors -> None], 
                 
                 Line3DBox[{3851, 3602, 5537, 3767, 3299, 2382, 5536, 2490, 
                  2716, 2563, 3297, 5535, 2375, 3518, 3517, 2957, 3883}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3862, 3807, 3634, 3535, 3538, 3536, 3636, 5598, 
                  3637, 3543, 3546, 3544, 5282, 3555, 2692, 3346, 2693, 3348, 
                  2868, 5440, 3140, 2696, 2953, 2697, 5615, 3141, 3879}, 
                  VertexColors -> None], 
                 
                 Line3DBox[{3885, 3794, 2959, 3148, 3147, 2877, 2711, 2718, 
                  3675, 5403, 3674, 3561, 3558, 5583, 3638, 3560, 2386, 3566, 
                  5585, 3641, 3852}, VertexColors -> None], 
                 
                 Line3DBox[{3888, 3795, 2962, 3151, 3150, 2879, 3155, 3156, 
                  2979, 3159, 5461, 3158, 2881, 2721, 5405, 3364, 3366, 3365, 
                  2755, 2566, 5371, 3303, 3305, 5539, 3304, 2781, 2570, 5372, 
                  3306, 3313, 3312, 2789, 2576, 5374, 3317, 3323, 5543, 3322, 
                  2798, 2583, 5375, 2806, 3061, 3415, 3060, 2808, 2592, 5376, 
                  2819, 3066, 3818}, VertexColors -> None], 
                 
                 Line3DBox[{3894, 3797, 2968, 3355, 3354, 3272, 5528, 3372, 
                  3373, 2985, 3167, 5463, 3166, 3220, 3168, 5506, 3169, 2996, 
                  3172, 3171, 2891, 2762, 5411, 2764, 2398, 2502, 5296, 2412, 
                  2513, 5302, 2425, 2524, 5308, 2438, 2534, 5314, 2450, 2543, 
                  5320, 2461}, VertexColors -> None], 
                 
                 Line3DBox[{3897, 3798, 2971, 3358, 3357, 3274, 5530, 3376, 
                  3377, 2988, 3176, 5464, 3175, 3600, 3465, 5564, 3466, 2999, 
                  3179, 3178, 2893, 2767, 5413, 2769, 2401, 2505, 5297, 2415, 
                  5346, 2516, 5304, 2428, 2527, 5309, 2441, 2537, 5316, 2453, 
                  2546, 5322, 2464}, VertexColors -> None], 
                 
                 Line3DBox[{3900, 3799, 2974, 3361, 3360, 3276, 5532, 3380, 
                  3381, 2991, 3183, 5465, 3182, 3601, 3468, 5566, 3469, 3002, 
                  3186, 3185, 2895, 5449, 2772, 5415, 2774, 2404, 2508, 5298, 
                  2418, 5350, 2519, 5306, 2431, 2530, 5310, 2444, 2540, 5318, 
                  2456, 2549, 5324, 2467}, VertexColors -> None]}, {}, {}}}, 
              VertexColors -> CompressedData["
1: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
jve9ty6M9N02/uov6bu/jACNnry/WxXbmaLDjLqbUT03rU4ePyDw79c3iZhX
K/vROI5znI8XJJ17ZN4bJ5qCeLKycHUg6X3eyG2Jat1oHvWPCbH+JMVp77rn
DtxEPDqN0+QMaZ6G0jtW7kLxD6dh4UonUryUL+0/tc4E5QtOGRaWh2r/7XJQ
DTwQ9OjzCFzOXPTsJODxyuVy+lLyYghGn3UIrejs/Ze1J8Jm2lktEuVZj28P
fWvCcQWRZWEec6AfbH15bhyT/P17H//pPFYoaL1SKB0YItytunPx9zmlKpzH
NgwPwbTBTcUhTbwvYxD/oyudfxgerrCaVC746/drOgRNRURuDcPZV65Lwyex
33ylv93wucgIuLYFnDDZ+vv79T+/3s4u5R6CTuUSYmchXndi9toWyHsO9VN3
SGdDOvano4s/JK0SHIQqQY7e1jAcf7651eZZ+noILO5V5H/5ifWzfO6xWP3g
YQAX13tyr/76fROJHeI30+gjUPGtzypQgfYv0wd/huL5omMjYDGn72X9Lvy/
aYm9HCcr6FArtHxZo/rv69EvdgmZUhmBhBF/4R/+f/595Fk+y/838L/bOfz/
FP4PeXZbn/EJvjUI36bXvIrm6/7T49KVsU1QRrIf9s2VHG2L+eNzdH83Ofyn
81k5z/JZPstn+Syf5bN8ls/yWT7LZ/ksn+WzfJbP8lk+y2f5LJ/ls3yWz/JZ
Pstn+Syf5bN8ls9yMv93ndeaPSf2n8X/bucAZ88fzvJZPjt//25ynuWzfJb/
6+3S361fs3yWz/JZPstn+SyfzVP+2bjl79bOv1seNyv/WT7LZ/Og/2m/83dr
5386/7vNl1n+/yb/u82LWT7LZ/ksn+WzfJbP8lk+y2f5LJ/ls3yWz/JZ/r+b
/93Wx2b5LJ/ls/x/C/+ZZtLie4mAFh2N6W+k9++UDjByXEF89J6PjBHpfas9
p9dcs0c8L1hI35FU/mqEB+dFxAtfNVVJkcrfZdpMOYX4NauWk1dJ5dUC0xbv
Qbzttphz1jnS+9HfgxmZEN+r0TMw6oH5QYMyiR2Ie9+hmXmQyqurKR2/GEpA
RfitXAE3Uj0XhJumELe9zH6zlVTPk/vCuzQRX+y4QznUFXNpq0It6kUCVDzN
G+VJ73xxZV2viQ4hoCNPZB2Q3sW4yvIapFH5ivjHIsWOpHdUx6ou1Qeheg59
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
lGupdS0ra1e1x6cTxG4r6oamNv/j40Cnc92wSGhhmjUThhaXivZoUvjbyvxd
7XotELhKIHOH6L+fznXzavcez62dIJu0k7tQkhr/+LSD8scmdsJjKdGpolH/
PL9TvBvzpJRwJ4yRfeT3teDP9+fb5+Ts0qkd8Ea+hFC9R/EkxJHnYPj/8jlI
h7e+fzw+XL4LVptfkq7p+Y9O9z+N/6vlHf274MPjua71fr3ZQDs4HjjUUTz1
/Z/+L3HjbrDEBFtgcri/HJjV/st97787PtL4d+/u05EpZMGLQI3NbgWUXZr8
buEtPs8uqPhmcbL1OBX/1CT1Sbdy6JOKRt23LdrZBaqL+H1vrafab1xuPD7I
tAuyCjetClZs+5cbn//g/1748LxKJf0sPg4/ayGp01ozgk5rqsJ5WzuVFpi4
STNFllENxgXrV7rPLIFp/Nx7jWa2wPuCcrUyzWpwVHKrHjdUDOeMYzOiOpgw
hWeOQ3dDFewc88ppH7MY9s9caKDNYALLdaHjG88qkPDPz95aXQyeQoePzkhh
wvZ014qzi6vgNn9X7ZGiYjjEF3eKGcwEd/eqrJzHleDgkuW9JLsYFD5/79yM
/Hul3LX3PI5Xgh4r/UpiWjG8DfVY54rwWb2Zy41PVMKVec4hdxDOcJyR4RvB
hMHPoVfymitBNvz0+szcYlDXSD4RdpcJx/0cppWYVkGlU7eAaUUx1F28r7Fy
VAs0nDG5vWdGNTjbL4sy7C0GU6a57lGHFtAqeWubI1UD+xwFWGISJdCUN/dF
zYRWOOH8eYd7+TMIE/cIcPEvgb4zxzYPfGiFMTE5RVtG1UH3dZ7H279TdbKN
JL9oFQe/6K+eC/fJ+5epHDz8n8j7LwWO+69ffX7K3PvpRSUs4KvvOzmq/M8/
5z/4f/C/Ax86HnnmdDABT1VlZq7C+IUKv1WmsXnsu3Xn8DpgPPZrCwq0+5C/
33Yvw+0AFs8sEFk8cO84Aa5hmWYfMd62wvrckNGlBCzPv9jsZzXyPekT0c4C
HfTeFYFFF8qwOuv55Tkp+j+YYNGkorFiNnW/LBmnunHKKQKYvItyFmFxV9Od
HpP6TxMQvMHGMxHj9RLvZM4fy+aFiNILu4HlS7N22JSxeZ9+hKneLsXiulUH
NQzK0HNyu+PjA7A4f00GV7Q86ifXh4owTayf60pqHFwQLnmtIzUS49mm09Gg
08uo/XzyO1vnJdfzrLwdPg40ehl0uhhn+C9ahSN8Z0ryQu0/oIuh1hatFYD6
KbK/KOkz1s+txrc/sfUKhVRWNP2GPX8HlwWLrRPh0iVyF9fRsMgs02fzit8N
7TQ9heF0+gh0ugZ0egQ1lhFij9G4GfqeKUjCxu1ha+8lNk+ygoH5dROsfdD9
jm3s58QlFGjh/P88emWTbuxiQuqhSNOa9VR8ZtoPLn+LeUx4u/9Oj5jnyHlf
UvNif69ndEDgObMXozqoOO1+Mr/uOEd+Xd3tojT5gFaYdUqu6/EDKm4cTuZl
RXPkZVWLXtc7/pGAQ8ImLSJv/ny+AQ+ZZ3WQI89qwr4UiaMmTHBQHVgru4rq
Z3F8ptlCdv52WdO+bdtHju/R6RjS4W9mGAsU+KN5JWV/qxrLj6Kr25WP1Xo9
y4ut4zMKbMdTON19dIbNnn4hVwLcVz4KmPIOywOnqed12Gcy/+wjArh3HVDd
c+B/6h6O58gfo9N5pMMDPOVVl6BxUB/Y1ZqA8VEM6yROJ+9fHKLOT7ipyAIn
9QzXC2Ob4CvX04vKfQyoGh2/+EhvJ9SVcBcXnW8Ev4T1Uj8YDKgrnva29lYn
eJzbWT5uWyNYb2ZOOZvCgPC6gCN1yZ1Q0/34+5F1jWBRHD41LZ4B7vwa4/Je
doLjde0Lur6NcF4o8bJGPgPyzl0OsjzMgscpom6fdjTBmSUBgqWCZWCkyqw7
XN8FaxaviPhtdjNc2Xq1Zssz6t6Qri7JpyGRT5SHCd/F7/KmL6Xmc/J6fnsP
fQJ8F70xS5Oi/stLpS/akoD+r+XYthsYD8neqQJ6t7QJcMiZ87pkHFZ/MeHy
rMIDBNzvj3o6DuNZuuBU+cXFioCjkgG6Oiewe3Z+lZR4tr7YbY1HrRhvUshk
mc3mbgTY5e4/+ZBJtfci7p9fFUiAzNrNy8sx3oBh3bQtHLppaUbROnHlrfBl
lItfaTCWP/mlnvUqnQBxa7ndxnNGvh/fUVs7yOtHQGaIo5Y+xo9Np4NGh9+N
eK7Ii/pf+jM7oQS7x6fTO6PDJ0Wpv5uB5nPHei5uY4yfkI5/lU7vjA7fnKB/
E9D+HK6mfnz336BrRlevdGPJy8Xe6HsTSw5bHNk98nvv99q2fUHf2zBms1ks
sn8Mtj6/8vFeJywavMwcMmyEHQILzn++yoBjo1fKHl/DAvfdkcq7PjfCqd4M
u+8fGWBYaD3JUbkLWh5US8QafICdTQq8p49Q66hmR4nxdjT/t8WGC/gmU/P/
RwC0ZakRoKhsHQ1vKTxN0f06u75+xdC8BG6svl5DWzrV1hHZG5POzE19OPI9
Ph2vI109Dl0+DGdd/DBOV+fOWYf+3/OZpq6cs+57GKer7+asvx7G6eqs6Xj5
6Oqmf5Wvj66uebhO+T1HnTIdXx9dnSZdvR5d3dyD6J+l/ei/L9p1NWQbZg/H
rF9VKHQI7Z+f3h9Jx/KXnlmfWvXShYCHMYLqRxtGrvOim2/D+Qn2HPkJw/zS
/hz80nTP2UnyGL/h4DGeRPLlruHgyx2uN/HgqDf5q+pK6PKTf7XehC7fmC6v
mC4fmC5/mC5PmC5PjOvTf9UdzPmDdQd09X1lQ/53zCIImHzouKVl/Mj1YnR1
YXTvzV5W2yHIrm+d9p5rE+YP0uURfYkJFJ1V1gqxSxvGLT5GzQdBkld2Dwev
LN179S5ZpLyr6QTjZ+l94EPdy58j7QQ9DjvhV8+vSQv1Grb4doDi2FdxfLtH
Hv+R7jFfc9xj/m/fW/3Z/tPhMs2uhw6w/fHoVatSMP/ULKirgO23+mSZhUlg
+DpGF08+2g+FZv1olcTs8+2Ob58oIVzrWNcMe4y3uajb56TPSQJ0c4q5z2B5
d3T+0VjSr0zj8Ct/9bvo/AU6v4nOPxr2a0Zx+DWD5Py/wDH/n5P+qSCHfzps
zw/+Tfb8sN1+iMNup7PP6cYtlbTDezjscDq7ms5OprN76exVOn1bOh1bOr1a
uu+qIuMAPhxxADo7lk7XlWfS9ad70XftUudSNcDsATqd1rRq20XubHzL/Hlp
f0B3NU1tkRlb/+515vtdnhhOp1tKp09Kp0NKNz68ZBzDhiOOwWm3D+N0Op76
uTJOO9B7U9WVpjdj/aHT5ZQtVFjN1uNbVW7udOgP6GxWPTnqwo5HKX7jF8R5
3el0MOn0++h0MOl0/eh0MH813itq7auozuaxXC1gdQkbn8E1Djl9qP96MYXr
o7C4a8JprQVRCBez/+K3Dfuukk5LZyU0H7KyIGsnlmcLi01TjHyR/S84c73Q
XCz/drZNsFZPGzDWlUzgn4DpWl4fvwsOo3loPeN4LMazIVmV6cYMIOCgacbg
d4x318dy6vIc9N6bFwiFn9h6vP76VoY6WkdPEmd1GmP2s6HmoVPKqP+C69ZE
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
               "], 
              VertexNormals -> CompressedData["
1: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
is+zsJACya/trwwh5IQ7cEPFH2Yb3gqw60+A6P6Xk4JNoyhd8PD5O01T8JaM
3qnpaTl0Wr8Q9qedQRacp8j4a2dgrbvR8lBGHlrYCM+qPDiD+DSEc8mWZ/62
eSX7LNW90WEWitTMO6PlG1FuD/dplcgpmG32dROiw8MxP76ioasNaAKOKyi8
b/+3i9f+T8f/FW/uJ8Wb0qR409nlfvVry3qEKcp7yXmwA3wJ5bPFO/BArkzn
S82SB3Qb5z9lne6CQaX9/rzn8dBC4hcwkPgF30n8AnGS3zVG8rs2tf/pd7WR
2nOQ2n8htT9Mir/kSfFXEin+GifFKVmkOOUVKU7BkeIOWlLcYUeKO4Z+5OuP
p07AI72ZW/t/zaNqvlu+fF3PAd9+2qinrhY8bl75XqPch54uvqC32vzr/vnf
hWPxKcEdJ3KRBj0PncSzj+jj57fvbw0T/V5TR6tnJtno5r2H533DQ9ETx/i4
4Om/T6/pxtBZnO9zHGJkOS8oS9kPcaw9bqtxdkDxjppt/hYOnSfPdEx16Qft
CzIr/HMOsMAQUJAkiUO1abt0LNf74TgFs16n3Jv/beNmLtsvmOc2CXmPRz35
FeZR/3OXYHfPNFgqKVr5KD4Nww7VcuUzs0iGWXrf6EIKuEL/oKTNLETrZ+/c
lj2NXvUedP8hF/dv9z3+XbgFQ+dFr4BFNDMfb5p2bgwexvhXfjhoCRzObe/2
xOAQr2NYrwF/H2QHnGkRfWUB4vxTOdcdFxB+NiwYgx0HQ83mkH0ED/g5+30q
/OwCEty1bMCnNgEt+T/uT4T5gLV0rq9/wgy4WJvScofMoHk39jjWSF8QHdnT
2aUyDUnzGNny4Vmkbj6clHz65R/7af24grtvbg6KNzHiF1mmkE0K4ZROyH/y
0v/B/7+FP55WvHL5Cg4dl96Zy4vph64DRuiFgdMf23eT/NI4kl96m+SXFpB0
m/1Ius22JN3m/13P9R/8P/h/8P/g/8H/g/8H/w/e8USG0e7gBIiEUP3I0VxA
KxnOtt4l1v92/fz/G27iTzA8ULQIYCawQLE6ilzaUp/Qz5r92/Xz78I9f9OR
KyPpyDH+xi9OJ+nCef2m89aU+8/7mda/6bY9Ium2ESj+7/cnQ0k6bN6/6aoF
cf/zPuRf7T//yu2l/gYcxPDn54ff7UWrzEIUx5RMgZNU1+kDqa5TNKmuEwcJ
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
               "]], 
             Method -> {
              "ShrinkWrap" -> False, "DefaultBoundaryStyle" -> Directive[
                 GrayLevel[0.3]], "RotationControl" -> "Globe"}, {
             DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
              DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
                FormBox[
                 TagBox["x", HoldForm], TraditionalForm], 
                FormBox[
                 TagBox["y", HoldForm], TraditionalForm], None}, 
              AxesOrigin -> {Automatic, Automatic, Automatic}, AxesStyle -> 
              Directive[
                GrayLevel[0.65], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1], BaseStyle -> Automatic, BoxRatios -> {1, 1, 0.4}, 
              BoxStyle -> GrayLevel[0, 0.35], DisplayFunction :> Identity, 
              FaceGridsStyle -> Automatic, ImageSize -> 264., Lighting -> 
              "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
                  GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
              PlotRange -> {{-3.229212606631209, 
               3.229212606631209}, {-3.843819052803955, 
               3.843819052803955}, {-47.58997423730971, 76.56444881336247}}, 
              PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02], 
                Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "3DMathPlot"}, {}], "\n  "}]}],
    Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, \
-3.22921, 3.22921}, {y, -3.84382, 3.84382}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max4763$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`max4765$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min4762$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min4764$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2142262$$ = 
                 False, 
                 CalculateUtilities`GraphicsUtilities`Private`min4762$2142267$\
$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4763$2142268$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`min4764$2142269$\
$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4765$2142270$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max4763$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`max4765$\
$ = 0.5, CalculateUtilities`GraphicsUtilities`Private`min4762$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2142262$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4762$\
2142267$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4763$\
2142268$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4764$\
2142269$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4765$\
2142270$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    ContourPlot[((-
                    E^((-$CellContext`x) (1 + $CellContext`y))) (
                    1 + $CellContext`y)^(-2)) (
                    1 + $CellContext`x + $CellContext`x $CellContext`y), \
{$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$], 
                    (
                    Piecewise[{{
                    0. + 3.4521739797577666` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    3.4521739797577666` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$], \
-3.229213067947361], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$]], \

                    (Piecewise[{{
                    0. + 3.4521739797577666` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    3.4521739797577666` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$ + 
                    0.006458426135894722, 
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$]], 
                    3.229213067947361]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$], 
                    (
                    Piecewise[{{
                    0. + 4.109216001986952 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    4.109216001986952 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$], \
-3.843819601921041], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$]], \

                    (Piecewise[{{
                    0. + 4.109216001986952 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 4.109216001986952 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$ + 
                    0.007687639203842082, 
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$]], 
                    3.843819601921041]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 264., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4762$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4763$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4764$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4765$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+ARKfER1D4gsSoxtj0oCSlO/\
1kkti4drBdrbBnwef3STN2lWK6QBN6YdTfWke3z333PWeHosg6fd6PXXdmA+\
CxckWnp4YMxKzXBQ83j/LJShFBU+u4bM7xoSg94CRHxA7301j3gs5I9qd3+D7hEUFIxq+\
asqopqCmB5LkGY1U7RlLemJ+MmUiIoz+hGfbw50Xr4avHQzGMiZag+\
TqZVvIPJNEQdJDoBvGvGOEf3PHx+\
XxU8FYCN8L4BGoh8Y7kSQ2MIIThvl433q1mbqHiWnCYyLjS6fJynPU9gKlJeXpBGY5vnExWcO2wESm\
ynFzv+RmnYJc+LfwgQhtTM5jk7ZnS6BfGFeMvvOy+ufcDfD8ti28FKericP8dhnyRjQ9AbVM5/\
PWdXKMVF1ro59zdVnzZaNBXjxl6v+\
lI6r0chjbbcOA2bGp8WrtLcPvtIUXOXb9XNwPjPnsHCXgquFQCe6jiAs2j6KZ8sBJtH26KjcOh3G34\
jtEp08FK5zAxFn2i+\
2PRxV4vSmEWLvpBqTD6xkQQA7GFVtu92hK9SgjkkQGeH5dv2yyiahD8bizfe0pj6kZYI6QdcsTmsNk\
oe5ER9mXPypuJZdzTYa8H3INKci1or+\
N9ZGGXB5PhGckIV7Q1Ks3h1VSYyK9ZT8oQcKccIqQ9Jf52G/\
u4WIlkKoDieqSjsWBLc2ZfxL9ssBHwFOdNXdsz9Hl3baYTSBOa9UFNEkWp83mmO43mW7c0BzoviT4l\
sR/oHebQrcp/NVNYWkP7taEbk3o1oRuTejWhP93TbAR47/SbwjuuEY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "ContourPlot"}, {}], 
       "\n  "}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form of the integral", "scanner" -> 
     "Integral", "id" -> "AlternateFormOfTheIntegral", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Expanded form of the integral", "scanner" -> 
     "Integral", "id" -> "ExpandedFormOfTheIntegral", "position" -> "500", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"x", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}]}], "-", 
                   FractionBox[
                    RowBox[{"x", " ", "y", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]], "-", 
                   FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "x"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}]}]], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "ExpandedFormOfTheIntegral__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = 0", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAt `1`x=0.", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, 0, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]]}], "+", 
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "+", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    SuperscriptBox["x", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y"}]}], "-", "1"}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox["x", "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "5"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 0, 5, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]]}], ",", "0", ",", 
                    FractionBox["1", "2"], ",", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "y"}], ")"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]}]}], "}"}], ",", "0",
                     ",", "5", ",", "1"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Taylor series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = \[Infinity]", 
     "scanner" -> "Series", "id" -> 
     "SeriesExpansionOfTheIntegralAt `1`x=Infinity", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[-((1 + x + x y)/(E^(x (1 + y)) (1 + y)^2)), {x, Infinity, \
4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "x"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"y", "+", "1"}], ")"}]}]], " ", 
              RowBox[{"(", 
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["x", 
                    RowBox[{"y", "+", "1"}]]}], "-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"y", "+", "1"}], ")"}], "2"]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "x"], ")"}], "13"], ")"}], 
                    SeriesData[$CellContext`x, 
                    DirectedInfinity[1], {}, -1, 13, 1], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", "y"}]]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "y"}], ")"}], "2"]]}]}], "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "13", ",", "1"}], "]"}]}, 
                 "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                ")"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "int", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "IntegralsWord", "desc" -> "an integral", "input" -> 
          "*C.int-_*IntegralsWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathematicalFunctionIdentityPropertyClass", "desc" -> 
          "a function property", "input" -> 
          "*C.int-_*MathematicalFunctionIdentityPropertyClass-"}, {}]}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "", "timedout" -> "Plot", "timedoutpods" -> "", "timing" -> 
    "3.6910000000000003", "parsetiming" -> "0.918", "parsetimedout" -> 
    "false", "recalculated" -> 
    "https://www5a.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa27652392g8e3c0ac8d00000060ifd722d026bh365802790122383609046", "id" -> 
    "MSP27662392g8e3c0ac8d00000052b29582b26a06c8", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "54", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa27672392g8e3c0ac8d00000013e529678fb30aaf5802790122383609046", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2020, 7, 18, 15, 11, 47.56204`8.429835450162381}, "Line" -> 12,
     "SessionID" -> 26367111788062668845}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "int x Exp[-x(y+1)] over x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1416., {1356., 1366.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.804088307957015*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f66aab57-51bd-42e8-b1de-d5c9530ad89c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 3", "Subsection",
 CellChangeTimes->{{3.8056320717993603`*^9, 
  3.805632078301111*^9}},ExpressionUUID->"ed15fb74-4311-43e9-a28d-\
78902eb6d612"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "4"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"y", "-", "x"}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "y"}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx", "[", "x_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"Abs", "[", "x", "]"}], ",", "Infinity"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx", "[", "x", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fy", "[", "y_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "y"}], ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fy", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "D", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"fx", "[", "x", "]"}], " ", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "y"}], ",", "y"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"0", "<", "y", "<", "Infinity"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "  ", 
    RowBox[{"Exp", "[", "x", "]"}]}], ",", "x", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"0", "<", "y", "<", "Infinity"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8056320803621283`*^9, 3.805632099363529*^9}, {
   3.805788906635495*^9, 3.805789015308361*^9}, {3.805789115972705*^9, 
   3.805789122474423*^9}, {3.805789315817608*^9, 3.80578935283328*^9}, {
   3.8057898424180593`*^9, 3.805789916124237*^9}, {3.8057902628647614`*^9, 
   3.8057902788657293`*^9}, {3.805790337236154*^9, 3.805790439819221*^9}, {
   3.805790778372328*^9, 3.80579079852116*^9}, 3.8057908311745234`*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"04e7d629-e6c6-4f0e-9fae-e27f1851359b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    RowBox[{"Abs", "[", "x", "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "x", "+", 
    RowBox[{"Abs", "[", "x", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.805790413481647*^9, 3.805790441109174*^9}, 
   3.805790799780737*^9, 3.8057908797329206`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"be273462-acf9-4563-9d1e-62491828d361"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "y"}]], " ", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{{3.805790413481647*^9, 3.805790441109174*^9}, 
   3.805790799780737*^9, 3.8057908797789793`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"8037ad30-e08b-4f9b-aefe-aeebcb7a561c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "y"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", "y"]}], "-", 
    RowBox[{"2", " ", "y"}], "-", 
    SuperscriptBox["y", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.805790413481647*^9, 3.805790441109174*^9}, 
   3.805790799780737*^9, 3.805790881478784*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"03ec27b6-bf47-4a15-8c74-e2e35e25604c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", "x"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.805790413481647*^9, 3.805790441109174*^9}, 
   3.805790799780737*^9, 3.805790881482868*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"cee8cefc-ba3d-4420-a547-e4593c52791e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 7", "Chapter",
 CellChangeTimes->{{3.804247763383113*^9, 
  3.8042477657235727`*^9}},ExpressionUUID->"9df1bf4f-dcad-4544-a992-\
80694c49c0c3"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.804247778424142*^9, 
  3.804247779813982*^9}},ExpressionUUID->"daaa1226-44b1-422b-b42a-\
f27ffae51061"],

Cell[CellGroupData[{

Cell["Exercice 4 (p.436)", "Subsection",
 CellChangeTimes->{{3.8042477825533257`*^9, 
  3.804247802828257*^9}},ExpressionUUID->"f1ba93e7-6c4e-475f-9867-\
5cf068570394"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "A", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", "<", "y", "<", "1"}], "&&", 
         RowBox[{"0", "<", "x", "<", "y", "<", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "B", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", "/", "y"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", "<", "y", "<", "1"}], "&&", 
         RowBox[{"0", "<", "x", "<", "y", "<", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "C", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", "<", "y", "<", "1"}], "&&", 
         RowBox[{"0", "<", "x", "<", "y", "<", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.804247767403586*^9, 3.804247768859754*^9}, {
  3.804273940257081*^9, 3.804274068129114*^9}, {3.804274216321186*^9, 
  3.8042742167616043`*^9}, {3.804274737090185*^9, 3.804274762713365*^9}, {
  3.80427479312118*^9, 3.804274861858625*^9}, {3.8042749690996943`*^9, 
  3.804274979096879*^9}, {3.804275054820547*^9, 3.804275086969508*^9}, {
  3.804275323987748*^9, 3.8042753420188847`*^9}, {3.804275376508562*^9, 
  3.8042754106334343`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"6497d493-9c1c-4d74-a754-63447dcc553b"],

Cell[BoxData[
 FractionBox["1", "6"]], "Output",
 CellChangeTimes->{
  3.8042742184338903`*^9, {3.804274753993186*^9, 3.80427485594987*^9}, 
   3.804274906734106*^9, 3.804275080877885*^9, 3.804275342361912*^9, 
   3.804275411038229*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c1f65553-f4ad-41c1-b9ca-cf1e6d12a57c"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.8042742184338903`*^9, {3.804274753993186*^9, 3.80427485594987*^9}, 
   3.804274906734106*^9, 3.804275080877885*^9, 3.804275342361912*^9, 
   3.804275411620929*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d378f5a6-ba38-4e0f-bbc7-298a6acbbb3f"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.8042742184338903`*^9, {3.804274753993186*^9, 3.80427485594987*^9}, 
   3.804274906734106*^9, 3.804275080877885*^9, 3.804275342361912*^9, 
   3.804275411634179*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0dce93e7-10b1-4eb3-973a-0737d3b55afe"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 5 (p.436)", "Subsection",
 CellChangeTimes->{{3.8042754286886873`*^9, 
  3.804275439248962*^9}},ExpressionUUID->"d6d2981b-00a9-428e-a336-\
de1b97276917"],

Cell[CellGroupData[{

Cell["Exercice 6 (p.436)", "Subsection",
 CellChangeTimes->{{3.804276975657982*^9, 
  3.804276993410727*^9}},ExpressionUUID->"0b7c17f9-433f-455b-b853-\
38ead96b0bf6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"espx", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"i", "/", "6"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"10", "%"}]}], "Input",
 CellChangeTimes->{{3.804277023847086*^9, 3.804277052530651*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c159198d-425a-49c2-901a-6269058f310c"],

Cell[BoxData[
 FractionBox["7", "2"]], "Output",
 CellChangeTimes->{3.8042770538078737`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"bd6da712-f2ec-4e88-b6c9-b027312a2ee6"],

Cell[BoxData["35"], "Output",
 CellChangeTimes->{3.804277053812234*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ddc8229d-3ce5-4b46-99cd-a986f03cb3e5"]
}, Open  ]]
}, Open  ]],

Cell["Exercice 21 (p.439)", "Subsection",
 CellChangeTimes->{{3.8043241286706333`*^9, 
  3.804324137037017*^9}},ExpressionUUID->"61755a81-1b27-4828-8916-\
4563051adb96"],

Cell[CellGroupData[{

Cell["Exercice 38 (p.441)", "Subsection",
 CellChangeTimes->{{3.804326356987331*^9, 
  3.804326366148045*^9}},ExpressionUUID->"62aadc54-6cef-4b20-9379-\
363cd2aa9831"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "x"}], "]"}], "/", "x"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"espx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "x", "<", "Infinity"}], "&&", 
        RowBox[{"0", "\[LessEqual]", " ", "y", "\[LessEqual]", "x"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"espy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"y", " ", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "x", "<", "Infinity"}], "&&", 
        RowBox[{"0", "\[LessEqual]", " ", "y", "\[LessEqual]", "x"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"espxy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "  ", "y", " ", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "x", "<", "Infinity"}], "&&", 
        RowBox[{"0", "\[LessEqual]", " ", "y", "\[LessEqual]", "x"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cov", "=", 
  RowBox[{"espxy", "-", 
   RowBox[{"espx", " ", "espy"}]}]}]}], "Input",
 CellChangeTimes->{{3.8043263687772217`*^9, 3.804326468174798*^9}, {
  3.804326556333634*^9, 3.804326603283269*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bad07bcd-5db6-464e-a8b6-a6bfba2d6ff5"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.804326457051817*^9, {3.804326563316204*^9, 3.804326604165524*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"7ca97b69-3518-45e5-8afe-3457cc066c4c"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.804326457051817*^9, {3.804326563316204*^9, 3.8043266042278223`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"c1bbe36c-07a4-4015-b591-960e835aa467"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{
  3.804326457051817*^9, {3.804326563316204*^9, 3.8043266042766857`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"904a4cc5-3b05-482c-b87c-b7511a4d2455"],

Cell[BoxData[
 FractionBox["1", "8"]], "Output",
 CellChangeTimes->{
  3.804326457051817*^9, {3.804326563316204*^9, 3.804326604278729*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"5036ca95-1116-4deb-bb20-fa2c65485d16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "^", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", "<", "p", "<", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045006420688343`*^9, 3.804500689030923*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4a6af556-a3fb-47b6-9a83-f31d1f7232e0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", "p"}], 
  SuperscriptBox["p", "2"]]], "Output",
 CellChangeTimes->{{3.8045006678897038`*^9, 3.8045006896699543`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"380b25d8-c5fe-4393-9748-1f508fdb9085"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<Sum[x p(1-p)^x,{x,0,\[Infinity]}]\>\"", ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", "\"\<Step-by-step solution\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80450072311826*^9, 3.804500730324758*^9}, 
   3.80450089690022*^9, 3.804501547448985*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"2d9b0579-81b7-4f0f-bc5f-24e214aff331"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Sum[x p(1-p)^x,{x,0,\[Infinity]}]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"Step-by-step solution"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Infinite sum", "scanner" -> "Sum", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Sum[x p (1 - p)^x, {x, 0, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {6, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[6], Selectable -> False], 
              RowBox[{
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"x", "=", "0"}], "\[Infinity]"], 
                  RowBox[{"p", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", "p"}], ")"}], "x"]}]}], "\[LongEqual]", 
                
                FractionBox[
                 RowBox[{"1", "-", "p"}], "p"]}], 
              StyleBox["\"when\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              RowBox[{
                TemplateBox[{
                  RowBox[{"1", "-", "p"}]}, "Abs"], "<", "1"}]}, 
             "RowWithSeparator"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "abs(z) is the absolute value of z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Convergence tests", "scanner" -> "Sum", "id" -> 
     "ConvergenceTests", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            
            TemplateBox[{
             "\"By the ratio test, the series converges when \"", 
              RowBox[{
                TemplateBox[{
                  RowBox[{"1", "-", "p"}]}, "Abs"], "<", "1"}], "\".\""}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Partial sum formula", "scanner" -> "Sum", "id" -> 
     "PartialSumFormula", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"x", "=", "0"}], "n"], 
                    RowBox[{"x", " ", "p", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", "p"}], ")"}], "x"]}]}], ScriptLevel -> 
                   0, StripOnInput -> False], HoldForm], TraditionalForm], 
                HoldForm], PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              FractionBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{"p", "-", "1"}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"n", " ", "p", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", "p"}], ")"}], "n"]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", "p"}], ")"}], "n"], "-", "1"}], ")"}]}],
                "p"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Series representations", "scanner" -> "Sum", "id" -> 
     "AlternateSeriesRepresentations", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "(1 - p)/p == Sum[Piecewise[{{-1, n == 0}, {1, n == -1}}, 0] p^n, {n, \
-Infinity, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 RowBox[{"1", "-", "p"}], "p"], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "-\[Infinity]"}], "\[Infinity]"], 
                  RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    TagBox[
                    RowBox[{"-", "1"}], HoldForm], 
                    StyleBox[
                    RowBox[{"n", "\[LongEqual]", "0"}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox["1", HoldForm], 
                    StyleBox[
                    RowBox[{"n", "\[LongEqual]", 
                    RowBox[{"-", "1"}]}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, 
                    ColumnWidths -> Automatic, 
                    AllowedDimensions -> {2, Automatic}, Selectable -> True, 
                    Editable -> True]}}, AllowScriptLevelChange -> False, 
                    ColumnAlignments -> {Left}, ColumnSpacings -> 0.5, 
                    ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> 
                    Span, SelectWithContents -> True, Selectable -> False, 
                    Editable -> False, DeleteWithContents -> True], ")"}], 
                    " ", 
                    SuperscriptBox["p", "n"]}]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "(1 - p)/p == Sum[Piecewise[{{(-1)^n, n > 0}}, 0] (-1 + p)^n, {n, \
-Infinity, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 RowBox[{"1", "-", "p"}], "p"], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "-\[Infinity]"}], "\[Infinity]"], 
                  RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    TagBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "n"], HoldForm], 
                    StyleBox[
                    RowBox[{"n", ">", "0"}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox["0", HoldForm], 
                    StyleBox[
                    "\"otherwise\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, 
                    ColumnWidths -> Automatic, 
                    AllowedDimensions -> {2, Automatic}, Selectable -> True, 
                    Editable -> True]}}, AllowScriptLevelChange -> False, 
                    ColumnAlignments -> {Left}, ColumnSpacings -> 0.5, 
                    ColumnWidths -> Automatic], "Piecewise", SyntaxForm -> 
                    Span, SelectWithContents -> True, Selectable -> False, 
                    Editable -> False, DeleteWithContents -> True], ")"}], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "n"]}]}]}], 
              HoldForm], FrameStyle -> None, 
             FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "Sum", "timedout" -> "Sum", "timedoutpods" -> "", "timing" -> "1.974", 
    "parsetiming" -> "0.761", "parsetimedout" -> "false", "recalculated" -> 
    "https://www5b.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa18241gc487e36245d49900003ha542g0agff15gc1117243612443725456", "id" -> 
    "MSP18251gc487e36245d4990000247a089c7ffbf167", "host" -> 
    "https://www5b.wolframalpha.com", "server" -> "35", "related" -> 
    "https://www5b.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa18261gc487e36245d49900002ch55g8d775d1d571117243612443725456", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2020, 7, 23, 9, 59, 34.78729`8.293995577536279}, "Line" -> 8, 
    "SessionID" -> 26369795157893514274}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Sum[x p(1-p)^x,{x,0,\[Infinity]}]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1416., {295., 305.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8045007390986023`*^9, 3.804500900678628*^9, 
  3.804501574797299*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"9f672251-006e-4e45-8e95-30b07a48d5d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 40 (p.441)", "Subsection",
 CellChangeTimes->{{3.804587132180532*^9, 
  3.8045871407340813`*^9}},ExpressionUUID->"ff0a2b5f-66fd-463f-a630-\
2894e7569770"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "x"}], "/", "y"}], "]"}], 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "y"}], "]"}], "/", "y"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PDF", " ", "marginale", " ", "de", " ", "Y"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fY", "[", "y_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"y", ">", "0"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fY", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PDF", " ", "marginale", " ", "de", " ", "X"}], "|", "Y"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fXsY", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "/", 
   RowBox[{"fY", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fXsY", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"E", "[", 
    RowBox[{"X", "|", "Y"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espXsY", "[", "y_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"fXsY", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"y", ">", "0"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espXsY", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"E", "[", "X", "]"}], "=", 
    RowBox[{"E", "[", 
     RowBox[{"E", "[", 
      RowBox[{"X", "|", "Y"}], "]"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espX", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"espXsY", "[", "y", "]"}], " ", 
      RowBox[{"fY", "[", "y", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"E", "[", "Y", "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espY", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"y", " ", 
      RowBox[{"fY", "[", "y", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Covariance", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"E", "[", 
     RowBox[{"XY", "|", "Y"}], "]"}], "=", 
    RowBox[{"Y", " ", 
     RowBox[{"E", "[", 
      RowBox[{"X", "|", "Y"}], "]"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YespXsY", "[", "y_", "]"}], ":=", 
  RowBox[{"y", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", "  ", 
      RowBox[{"fXsY", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"y", ">", "0"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YespXsY", "[", "y", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"E", "[", "XY", "]"}], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      RowBox[{"Y", "^", "2"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"dans", " ", "ce", " ", "cas", " ", "particuliers"}], ")"}]}]}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"espy2", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], " ", 
      RowBox[{"fY", "[", "y", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Cov", 
    RowBox[{"(", 
     RowBox[{"X", ",", "Y"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"espy2", " ", "-", 
  RowBox[{"espY", "*", " ", "espX"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQnZL6auKaiDeOHXZqk0B0mN6BGSDaJ//zbBB9SS58
DYjeLHFnI4g+PvHuLhAt3C9wFETXVl47CaLF1ss9AdG3p0p/BNEak8R/geht
Hs2ca4F0xsxkPhAtEN8oBKK/BN4TBdGzzuuogmgZtd3uILrWzsYHRHOd4/YH
y5u4BIPoP7/mgOkHe2Jjweoz0+NA9IFK3WQQ/emXJZh2fsKaBaLPzt8BpuOs
EyvB9t1d1Aai13yxmwGi/aTrl4BoJc/MbSB6kWrHcRBd4CQ3ax2QFvqWDKad
Ga9/CosEqtN8B6ZV7l74DqJvnBb+AaIjAwr+gej3u2dzhgNpAEFarr0=
  "],
 CellLabel->
  "In[118]:=",ExpressionUUID->"1c08672f-bda8-4b07-b099-70ba85c37e82"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "y"}]]], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936663817322*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"7dde60f2-d017-4439-99ab-976e1d996d15"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox["x", "y"]}]], "y"]], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936663894656*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"b2585a97-46c3-4109-be23-93350d5087d2"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.80493666405737*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"735a1d90-b7f5-43bb-978d-1442085019fa"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936664340497*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"6aad325d-17d8-4de6-8dfe-2d2deb74dfbc"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936664479402*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"d151cb67-12d0-41df-91c1-4ac0d11fe87a"],

Cell[BoxData[
 SuperscriptBox["y", "2"]], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936664627892*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"52469ed5-bda9-48e8-98ee-b4d5ddc11b21"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936664778483*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"bd9a4ed2-35c5-4e1c-b41d-4b76bb6b8919"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.804587555975239*^9, 3.80458756274921*^9}, {
   3.804587643781575*^9, 3.804587656372794*^9}, 3.804587922210044*^9, {
   3.804587985874337*^9, 3.804587997404325*^9}, {3.804588109683049*^9, 
   3.804588147680402*^9}, 3.804588202818561*^9, {3.804588573271413*^9, 
   3.804588593553837*^9}, 3.804588665282836*^9, 3.8045887016216288`*^9, 
   3.804588795812746*^9, 3.8045888268879967`*^9, 3.8045888866509037`*^9, {
   3.8045890660734386`*^9, 3.80458911119671*^9}, {3.804589256720396*^9, 
   3.804589313611382*^9}, {3.8045896043927507`*^9, 3.804589629276062*^9}, {
   3.804591309434372*^9, 3.804591316080688*^9}, 3.804591368429308*^9, {
   3.804936092293579*^9, 3.804936146444223*^9}, 3.804936183304262*^9, {
   3.804936214052314*^9, 3.804936269658018*^9}, 3.804936664780611*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"39ec0905-5dbb-4c50-b42b-20620dfc2ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", "p"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"i", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], " ", "p"}], " ", "+", " ", 
     RowBox[{"i", " ", 
      RowBox[{"(", 
       RowBox[{"p", "^", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "Infinity"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}], 
     RowBox[{"(", "p", ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "Infinity"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805101238636496*^9, 3.805101402455986*^9}, {
  3.8051026691346607`*^9, 3.805102685675913*^9}, {3.805102804765295*^9, 
  3.805102814345209*^9}, {3.805102861833794*^9, 3.805103154694167*^9}, {
  3.80510321512936*^9, 3.8051032270637217`*^9}, {3.8051032800188017`*^9, 
  3.805103319114935*^9}, {3.805103639946679*^9, 3.805103650756212*^9}, {
  3.805103781201653*^9, 3.8051037956358147`*^9}, {3.805103861750577*^9, 
  3.805103965436925*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ff8f14a8-f575-4dc3-8594-9e52d747c3d9"],

Cell[BoxData["p"], "Output",
 CellChangeTimes->{{3.805103094863352*^9, 3.805103102192903*^9}, {
  3.805103139114099*^9, 3.805103155164549*^9}, {3.805103216565749*^9, 
  3.8051032276842213`*^9}, {3.805103276387619*^9, 3.805103288418038*^9}, {
  3.805103320085249*^9, 3.805103339953637*^9}, {3.805103641855122*^9, 
  3.805103651667453*^9}, {3.805103782696781*^9, 3.805103796803398*^9}, {
  3.805103875675774*^9, 3.805103915167872*^9}, {3.805103960503574*^9, 
  3.8051039675567923`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"62fcfed4-e4f0-4fd4-bcb9-6ac73ba334db"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "p"], "+", 
  FractionBox["p", 
   RowBox[{"1", "-", "p"}]]}]], "Output",
 CellChangeTimes->{{3.805103094863352*^9, 3.805103102192903*^9}, {
  3.805103139114099*^9, 3.805103155164549*^9}, {3.805103216565749*^9, 
  3.8051032276842213`*^9}, {3.805103276387619*^9, 3.805103288418038*^9}, {
  3.805103320085249*^9, 3.805103339953637*^9}, {3.805103641855122*^9, 
  3.805103651667453*^9}, {3.805103782696781*^9, 3.805103796803398*^9}, {
  3.805103875675774*^9, 3.805103915167872*^9}, {3.805103960503574*^9, 
  3.805103967728919*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"423de1e9-04f7-482c-b397-da2ee010673a"],

Cell[BoxData[
 RowBox[{"1", "-", "p"}]], "Output",
 CellChangeTimes->{{3.805103094863352*^9, 3.805103102192903*^9}, {
  3.805103139114099*^9, 3.805103155164549*^9}, {3.805103216565749*^9, 
  3.8051032276842213`*^9}, {3.805103276387619*^9, 3.805103288418038*^9}, {
  3.805103320085249*^9, 3.805103339953637*^9}, {3.805103641855122*^9, 
  3.805103651667453*^9}, {3.805103782696781*^9, 3.805103796803398*^9}, {
  3.805103875675774*^9, 3.805103915167872*^9}, {3.805103960503574*^9, 
  3.8051039677631693`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"050584e2-9785-47c6-a3ac-d0717c49658e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.80494571161524*^9, 
  3.804945730294877*^9}},ExpressionUUID->"1c26b7a1-d7a1-4387-8598-\
dbff62e14150"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"n", "^", "2"}]}], " ", "+", 
   RowBox[{"3", "n"}], " ", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.805116661555374*^9, 3.805116679197757*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5175d165-c7b3-444e-a5e3-27e5f3fce674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.805116674459182*^9, 3.805116679807227*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"a3174982-82a8-4dab-b531-dd8fe759497c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805116943819274*^9, 3.805116981663221*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9810e07e-25cb-4c43-babd-7abbc04fa101"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["n", "2"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["n", "3"]}], "+", 
  SuperscriptBox["n", "4"]}]], "Output",
 CellChangeTimes->{{3.805116957206819*^9, 3.805116981947397*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"63713abb-286a-4752-bc54-d86a94ed1a4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"%", "+", 
   RowBox[{"4", 
    RowBox[{"n", "^", "3"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8051170186398973`*^9, 3.80511702890308*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d08e8fda-503b-4708-8ae7-27065588e51c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["n", "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.8051170296998053`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7b7220d0-bda0-41f9-b0be-aa72c0c4ff52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proof", "=", 
  RowBox[{"FindEquationalProof", "[", 
   RowBox[{
    RowBox[{"ForAll", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "m"}], "}"}], ",", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{
         RowBox[{"n", "+", "1"}], ",", "m"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", "m"}], "]"}], "+", 
        RowBox[{"Binomial", "[", 
         RowBox[{"n", ",", 
          RowBox[{"m", "-", "1"}]}], "]"}]}]}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "m"}], "}"}], "\[Element]", "PositiveIntegers"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80511814794798*^9, 3.805118434712529*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5afc7de2-3482-4a52-971c-a734e4cd030b"],

Cell[BoxData[
 TemplateBox[{
  "FindEquationalProof","invs",
   "\"Invalid specification of propositions \
\\!\\(\\*RowBox[{SubscriptBox[\\\"\[ForAll]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"n\\\", \\\",\\\", \\\"m\\\"}], \\\"}\\\"}]], \
RowBox[{RowBox[{\\\"Binomial\\\", \\\"[\\\", RowBox[{RowBox[{\\\"1\\\", \\\"+\
\\\", \\\"n\\\"}], \\\",\\\", \\\"m\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"Binomial\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"m\\\"}]}], \
\\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Binomial\\\", \\\"[\\\", \
RowBox[{\\\"n\\\", \\\",\\\", \\\"m\\\"}], \\\"]\\\"}]}]}]}]\\) and axioms \
\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"n\\\", \\\"|\\\", \
\\\"m\\\"}], \\\")\\\"}], \\\"\[Element]\\\", TemplateBox[List[], \
\\\"Integers\\\"]}], \\\"&&\\\", RowBox[{\\\"n\\\", \\\">\\\", \\\"0\\\"}], \
\\\"&&\\\", RowBox[{\\\"m\\\", \\\">\\\", \\\"0\\\"}]}]\\).\"",2,21,15,
   26373770764933789751,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.805118392100967*^9, {3.805118426408414*^9, 3.8051184352193203`*^9}},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"24d34a11-1c80-4389-a5cf-42240ee776c3"],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "m"}], "}"}]], 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{
       RowBox[{"1", "+", "n"}], ",", "m"}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}]}], "]"}], "+", 
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "|", "m"}], ")"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"n", ">", "0"}], "&&", 
    RowBox[{"m", ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.805118392111353*^9, {3.8051184264172153`*^9, 3.805118435230296*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"26234c7c-ac06-412e-83b7-dcc024ff756b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"n", ",", "m"}], "]"}], "+", 
  RowBox[{"Binomial", "[", 
   RowBox[{"n", ",", 
    RowBox[{"m", "-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.805118486625063*^9, 3.805118512980276*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"791457d2-842e-4220-be3e-236abfb1bd6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"n", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}]}], "]"}], "+", 
  RowBox[{"Binomial", "[", 
   RowBox[{"n", ",", "m"}], "]"}]}]], "Output",
 CellChangeTimes->{3.805118513073688*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e701fd70-91c3-4b44-8db3-0882d4bc4c4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}]}], "]"}], "+", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"n", ",", "m"}], "]"}], " ", 
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", "m"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8051184939372187`*^9, 3.805118497472221*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c58a34ca-fe8b-4b05-bcec-3fc00f343d5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"n", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}]}], "]"}], "+", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"n", ",", "m"}], "]"}], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{"1", "+", "n"}], ",", "m"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.805118497948612*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"2bef3e5f-cbf0-477b-8038-4861f7c262d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"BooleanQ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "!"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "m"}], ")"}], "!"}]}], ")"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "!"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "1"}], ")"}], "!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "m", "+", "1"}], ")"}], "!"}]}], ")"}]}], 
       ")"}]}], "\[Equal]", 
     RowBox[{"Binomial", "[", 
      RowBox[{"n", ",", "m"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"56", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.805118517332384*^9, 3.805118681629019*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"81e76f0a-7616-4af7-b5fb-d309e7669db6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.805118673954752*^9, 3.80511868181981*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"8ca3843e-b164-4a04-a7e4-94678027d3fa"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auto-\[EAcute]valuation", "Section",
 CellChangeTimes->{{3.805617804159683*^9, 
  3.805617824880281*^9}},ExpressionUUID->"5567318e-a371-4618-b1ac-\
933e1a868c97"],

Cell[CellGroupData[{

Cell["Exercice 14 (p.458)", "Subsection",
 CellChangeTimes->{{3.805617829079384*^9, 
  3.805617843598752*^9}},ExpressionUUID->"c0f8aa8a-9afd-4068-b3c2-\
825046925cd4"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.805617846460537*^9, 3.80561794973551*^9}, 
   3.8056180358499117`*^9, 3.805618081332439*^9, 3.805618408081049*^9, {
   3.805618703872501*^9, 3.805618714665284*^9}, {3.805618816146122*^9, 
   3.805618905714591*^9}},ExpressionUUID->"51bfa0df-0b20-4acb-95fa-\
909750af4240"],

Cell[BoxData["0.41703481392557024`"], "Output",
 CellChangeTimes->{{3.805617927758486*^9, 3.805617950212839*^9}, {
   3.805618077716798*^9, 3.805618081907343*^9}, 3.8056187152593307`*^9, {
   3.805618816422571*^9, 3.805618837138851*^9}, {3.805618868063113*^9, 
   3.805618899031672*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"16ce12ea-57c8-4aff-96e1-218a16b9ace4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapitre 8", "Chapter",
 CellChangeTimes->{{3.805191118655609*^9, 
  3.805191120880108*^9}},ExpressionUUID->"f61e1f02-e053-4260-93e5-\
08405b2f50a4"],

Cell[CellGroupData[{

Cell["Probl\[EGrave]me", "Section",
 CellChangeTimes->{{3.805191151740839*^9, 
  3.805191155771633*^9}},ExpressionUUID->"a7e1db62-06aa-4d13-8861-\
15a38fc9e5e4"],

Cell["Exercice 3 (p.488)", "Subsection",
 CellChangeTimes->{{3.805191185987554*^9, 
  3.80519119489887*^9}},ExpressionUUID->"080e1529-a1ce-43a8-ad22-\
2c756606aaf0"],

Cell["Exercice 4 (p488)", "Subsection",
 CellChangeTimes->{{3.805193024053512*^9, 
  3.8051930358330708`*^9}},ExpressionUUID->"2be147e5-c2be-4332-b063-\
b03c3157c524"],

Cell[CellGroupData[{

Cell["Exercice 5 (p.488)", "Subsection",
 CellChangeTimes->{{3.805193855975258*^9, 
  3.805193864801056*^9}},ExpressionUUID->"ff578a02-f9d0-4f2a-b5e3-\
67d43b63fe57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "@", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"50", "/", "12"}], "]"}]}], "<", "z", "<", 
      RowBox[{"3", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"50", "/", "12"}], "]"}]}]}], ",", 
     RowBox[{"z", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8051930398613586`*^9, 3.805193079785523*^9}, {
  3.805193521683579*^9, 3.80519352306559*^9}, {3.8051938480562477`*^9, 
  3.8051938939839478`*^9}, {3.805194054403715*^9, 3.805194055107437*^9}, {
  3.805194205928382*^9, 3.805194206197353*^9}, {3.805194274377858*^9, 
  3.805194289093153*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b1875b9b-a1d6-4218-b287-9a907da7c45c"],

Cell[BoxData["0.14164469029513682`"], "Output",
 CellChangeTimes->{{3.805193076418355*^9, 3.805193080291459*^9}, {
   3.805193889496533*^9, 3.8051938945671186`*^9}, 3.805194055780464*^9, 
   3.8051942067197123`*^9, 3.805194302647339*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e8bb5df8-88ec-44b5-856f-6b93548bdfbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 6 (p.488)", "Subsection",
 CellChangeTimes->{{3.805195000525537*^9, 
  3.805195007649414*^9}},ExpressionUUID->"791253f0-fba3-438c-85d7-\
c389bf2e3990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "79"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esp", "=", 
   RowBox[{"7", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"91", "/", "6"}], ")"}], "-", 
    RowBox[{"esp", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"zstar", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"300.5", "-", 
     RowBox[{"n", " ", "esp"}]}], ")"}], "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"n", " ", "var"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"z", "<", " ", "zstar"}], ",", 
    RowBox[{"z", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8051950104310493`*^9, 3.805195012298465*^9}, {
  3.805195170667418*^9, 3.805195311843485*^9}, {3.805195701440256*^9, 
  3.805195711080119*^9}, {3.805195884757083*^9, 3.805195988178451*^9}, {
  3.805196026445264*^9, 3.8051960284729548`*^9}, {3.805196086994298*^9, 
  3.805196095394518*^9}, {3.805196151813752*^9, 3.8051961647552853`*^9}, {
  3.80519669472966*^9, 
  3.805196703222838*^9}},ExpressionUUID->"2def706b-ea02-45e8-97e0-\
7dcf2dc06e3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 7 (p.488)", "Subsection",
 CellChangeTimes->{{3.8051968614862547`*^9, 3.805196866862409*^9}, {
  3.805197202566793*^9, 
  3.805197202748369*^9}},ExpressionUUID->"a7fc3424-0e38-4ed1-b41e-\
5c5a2443c2a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"mu", "^", "2"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"zstar", "=", 
  RowBox[{"Zstar", "[", 
   RowBox[{"525", ",", "100", ",", "mu", ",", "var"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"Pnorm", "[", "%", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"z", "\[GreaterEqual]", "zstar"}], ",", 
    RowBox[{"z", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805196868443172*^9, 3.805196938366898*^9}, {
  3.805197032213389*^9, 3.8051970774369173`*^9}, {3.8051972336700573`*^9, 
  3.805197252710389*^9}, {3.8051975171075277`*^9, 3.805197542733655*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"6aca2508-65ea-4bf7-9b5c-db56865e93f5"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.8051975433308153`*^9}},
 
 CellLabel->
  "Out[143]=",ExpressionUUID->"8c01a28e-0817-4fc6-a1d0-7934c0fa8ad3"],

Cell[BoxData["0.3085375387259869`"], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.8051975433345633`*^9}},
 
 CellLabel->
  "Out[144]=",ExpressionUUID->"415270d2-696f-4296-ab11-34ecd1b9fba2"],

Cell[BoxData["0.3085375387259869`"], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.805197543338373*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"6679cfdd-e95b-4e90-828f-12a2d85d08f2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 8 (p.488)", "Subsection",
 CellChangeTimes->{{3.8051968614862547`*^9, 3.805196866862409*^9}, {
   3.805197202566793*^9, 3.805197202748369*^9}, 
   3.805197729554783*^9},ExpressionUUID->"7b38dc35-6576-45e7-a2ee-\
a16dde22babf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{
    RowBox[{"100", " ", "5"}], "+", 
    RowBox[{"99", " ", 
     RowBox[{"1", "/", "4"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{
    RowBox[{"99", 
     RowBox[{"(", 
      RowBox[{"1", "/", "48"}], ")"}]}], "+", 
    RowBox[{"100", " ", "25"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"zstar", "=", 
  RowBox[{"Zstar", "[", 
   RowBox[{"550", ",", "1", ",", "mu", ",", "var"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Pnorm", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"z", "<=", "zstar"}], ",", 
    RowBox[{"z", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805196868443172*^9, 3.805196938366898*^9}, {
  3.805197032213389*^9, 3.8051970774369173`*^9}, {3.8051972336700573`*^9, 
  3.805197252710389*^9}, {3.8051975171075277`*^9, 3.805197542733655*^9}, {
  3.805197769429572*^9, 3.805197798957642*^9}, {3.805197908882742*^9, 
  3.805197974150261*^9}, {3.805198034355895*^9, 3.8051980486393003`*^9}, {
  3.805198091181869*^9, 3.805198095876999*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"f0d8cae5-db2a-4205-96f4-3ec7211ee146"],

Cell[BoxData[
 FractionBox["101", 
  RowBox[{"7", " ", 
   SqrtBox["817"]}]]], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.8051975433308153`*^9}, 
   3.805197816532188*^9, 3.8051979820838013`*^9, 3.805198049234829*^9, {
   3.805198092728397*^9, 3.805198096428096*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"804d7a29-e020-4f83-9062-a910bac2082d"],

Cell[BoxData["0.6931474678283982`"], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.8051975433308153`*^9}, 
   3.805197816532188*^9, 3.8051979820838013`*^9, 3.805198049234829*^9, {
   3.805198092728397*^9, 3.80519809643102*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"4b8f189c-9f4f-434f-9b6f-a71d6304f13d"],

Cell[BoxData["0.6931474678283982`"], "Output",
 CellChangeTimes->{
  3.805197046563752*^9, 3.805197077771658*^9, {3.805197233996295*^9, 
   3.8051972531539907`*^9}, {3.8051975390124397`*^9, 3.8051975433308153`*^9}, 
   3.805197816532188*^9, 3.8051979820838013`*^9, 3.805198049234829*^9, {
   3.805198092728397*^9, 3.8051980964336777`*^9}},
 CellLabel->
  "Out[175]=",ExpressionUUID->"db25a3ef-d093-44dc-8d3a-bb34aa49d946"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercice 13 (p.489)", "Subsection",
 CellChangeTimes->{{3.805370491875313*^9, 
  3.805370503537517*^9}},ExpressionUUID->"c651055f-0302-450b-8349-\
0b35baedbf74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "74"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "=", "196"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n2", "=", "64"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "A", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zstar", "[", 
   RowBox[{
    RowBox[{"n1", " ", "80"}], ",", "n1", ",", "mu", ",", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"N", "[", 
    RowBox[{"Pnorm", "[", "%", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"z", ">", "%%"}], ",", 
     RowBox[{"z", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "B", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zstar", "[", 
   RowBox[{
    RowBox[{"n2", " ", "80"}], ",", "n2", ",", "mu", ",", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   RowBox[{"N", "[", 
    RowBox[{"Pnorm", "[", "%", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"z", ">", "%%"}], ",", 
     RowBox[{"z", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "C", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Zstar", "[", 
  RowBox[{"2.2", ",", 
   RowBox[{"n1", "+", "n2"}], ",", "mu", ",", "var"}], "]"}]}], "Input",
 CellChangeTimes->{{3.805370506931163*^9, 3.805370652550243*^9}, {
  3.8053707826678123`*^9, 3.805370861399961*^9}, {3.805370908484147*^9, 
  3.805370915569027*^9}, {3.805371249335622*^9, 3.805371298141103*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"25a71124-644a-4a18-a70e-30121757f559"],

Cell[BoxData["0.01606228560382833`"], "Output",
 CellChangeTimes->{
  3.8053706163166733`*^9, {3.805370792162726*^9, 3.805370819476664*^9}, {
   3.805370855020495*^9, 3.8053708623156424`*^9}, {3.805370909880917*^9, 
   3.805370915923321*^9}, 3.805371298579564*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"e6698737-3c9a-4df0-bfb4-77f866ac3913"],

Cell[BoxData["0.00030338342281804875`"], "Output",
 CellChangeTimes->{
  3.8053706163166733`*^9, {3.805370792162726*^9, 3.805370819476664*^9}, {
   3.805370855020495*^9, 3.8053708623156424`*^9}, {3.805370909880917*^9, 
   3.805370915923321*^9}, 3.8053712985820637`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"885eb531-bd11-4384-9081-4318f7f45a85"],

Cell[BoxData[
 RowBox[{"-", "49.84867173132766`"}]], "Output",
 CellChangeTimes->{
  3.8053706163166733`*^9, {3.805370792162726*^9, 3.805370819476664*^9}, {
   3.805370855020495*^9, 3.8053708623156424`*^9}, {3.805370909880917*^9, 
   3.805370915923321*^9}, 3.805371298583787*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"c2a6e21e-cdec-4b7b-9674-aada33362728"]
}, Open  ]],

Cell[BoxData["\[Lambda]"], "Input",
 CellChangeTimes->{{3.805537101356237*^9, 
  3.8055371048759003`*^9}},ExpressionUUID->"f9679b07-0d23-4721-850b-\
9047c13039a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{
  "\"\<int x(a \[Lambda]^a)/((x+\[Lambda])^(a+1)) over x\>\"", ",", "\n", " ", 
   RowBox[{"PodStates", " ", "->", " ", 
    RowBox[{
    "{", "\"\<IndefiniteIntegral__Step-by-step solution\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.805537008928624*^9, 3.805537035473484*^9}, {
   3.8055371097159147`*^9, 3.805537112606127*^9}, 3.805537193669313*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"5bfd5ed5-3b07-4080-b468-a46a7bc2e121"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "int x(a \[Lambda]^a)/((x+\[Lambda])^(a+1)) over x", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"IndefiniteIntegral__Step-by-step solution"}},
    Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[x ((a \[Lambda]^a)/(x + \[Lambda])^(a + 1)), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox[
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"]}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "\[Lambda]"}], ")"}], 
                    RowBox[{"a", "+", "1"}]]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "x"}], "+", "\[Lambda]"}], ")"}]}], 
                    RowBox[{"a", "-", "1"}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"a", " ", "x", " ", 
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{"x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]]}], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"\[Lambda]", "+", "x"}]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"u", "-", "\[Lambda]"}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Expanding \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"u", "-", "\[Lambda]"}], ")"}]}], "\" \""}, 
                    "RowDefault"], "\"gives \"", 
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]]}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]], "-", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]]}]}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"the \"", "\"sum \"", "\"term \"", 
                    "\"by \"", "\"term \"", "\"and \"", "\"factor \"", 
                    "\"out \"", "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "a"}], " ", 
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", 
                    RowBox[{"1", "-", "a"}]], 
                    RowBox[{"1", "-", "a"}]], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox["u", 
                    RowBox[{"1", "-", "a"}]]}], 
                    RowBox[{"1", "-", "a"}]], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "a"}], " ", 
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["u", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"a"}]}], "-", "1"}]], "\" \""}, "RowDefault"], 
                    "\"is \"", 
                    TemplateBox[{
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]], "a"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"a", " ", 
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox["u", 
                    RowBox[{"1", "-", "a"}]]}], 
                    RowBox[{"1", "-", "a"}]], "+", 
                    RowBox[{
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]], " ", 
                    SuperscriptBox["u", 
                    RowBox[{"-", "a"}]]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"\[Lambda]", "+", "x"}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "x"}], "+", "\[Lambda]"}], ")"}]}], 
                    RowBox[{"a", "-", "1"}]]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Expanded form of the integral", "scanner" -> 
     "Integral", "id" -> "ExpandedFormOfTheIntegral", "position" -> "200", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]]}], 
                    RowBox[{"a", "-", "1"}]]}], "-", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"a", " ", "x", " ", 
                    SuperscriptBox["\[Lambda]", "a"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]]}], 
                    RowBox[{"a", "-", "1"}]]}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "ExpandedFormOfTheIntegral__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> 
     "Alternate forms assuming a, x, and \[Lambda] are positive", "scanner" -> 
     "Integral", "id" -> 
     "AlternateFormAssumingAllVariablesAreRealAndPositive", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Simplify[PowerExpand[-((\[Lambda]^a (a x + \[Lambda]))/((-1 + a) (x \
+ \[Lambda])^a))]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 FractionBox[
                  RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]]}], "+", 
                    RowBox[{"a", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["\[Lambda]", 
                    RowBox[{"\[Lambda]", "+", "x"}]], ")"}], "a"]}]}], 
                  RowBox[{"1", "-", "a"}]], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "PowerExpand[-((\[Lambda]^a (a x + \[Lambda]))/((-1 + a) (x + \
\[Lambda])^a)), Assumptions -> {}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", 
                    RowBox[{"a", "+", "1"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
                    RowBox[{"-", "a"}]]}], 
                    RowBox[{"a", "-", "1"}]]}]}], "-", 
                   FractionBox[
                    RowBox[{"a", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["\[Lambda]", 
                    RowBox[{"\[Lambda]", "+", "x"}]], ")"}], "a"]}], 
                    RowBox[{"a", "-", "1"}]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FullSimplify[-((\[Lambda]^a (a x + \[Lambda]))/((-1 + a) (x + \
\[Lambda])^a)), a > 0 && x > 0 && \[Lambda] > 0]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["\[Lambda]", 
                    RowBox[{"\[Lambda]", "+", "x"}]], ")"}], "a"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "x"}], "+", "\[Lambda]"}], ")"}]}], 
                    RowBox[{"a", "-", "1"}]]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = 0", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAtx=0.", "position" -> 
     "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[-((\[Lambda]^a (a x + \[Lambda]))/((-1 + a) (x + \
\[Lambda])^a)), {x, 0, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["\[Lambda]", 
                    RowBox[{"a", "-", "1"}]]}], "+", 
                    FractionBox[
                    RowBox[{"a", " ", 
                    SuperscriptBox["x", "2"]}], 
                    RowBox[{"2", " ", "\[Lambda]"}]], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "+", "1"}], ")"}]}], ")"}], " ", 
                    SuperscriptBox["x", "3"]}], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}]], "+", 
                    FractionBox[
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["a", "2"], "+", 
                    RowBox[{"3", " ", "a"}], "+", "2"}], ")"}], " ", 
                    SuperscriptBox["x", "4"]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Lambda]", "3"]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "5"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 0, 5, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["\[Lambda]", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "a"}]]}], ",", "0", ",", 
                    FractionBox["a", 
                    RowBox[{"2", " ", "\[Lambda]"}]], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "a"}], ")"}]}], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
                    FractionBox[
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "a"}], "+", 
                    SuperscriptBox["a", "2"]}], ")"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Lambda]", "3"]}]]}], "}"}], ",", "0", 
                    ",", "5", ",", "1"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Taylor series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "int", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "IntegralsWord", "desc" -> "an integral", "input" -> 
          "*C.int-_*IntegralsWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathematicalFunctionIdentityPropertyClass", "desc" -> 
          "a function property", "input" -> 
          "*C.int-_*MathematicalFunctionIdentityPropertyClass-"}, {}]}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "2.8890000000000002", "parsetiming" -> "1.092", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP3675177bh5cif35i67c500004a405c3fi406i06d", "host" -> 
    "https://www4c.wolframalpha.com", "server" -> "1", "related" -> 
    "https://www4c.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3676177bh5cif35i67c5000066g93e1hfda877f2434535260777696404", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2020, 8, 4, 9, 39, 59.433019`8.526602764603535}, "Line" -> 24, 
    "SessionID" -> 26376608482313757273}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "int x(a \[Lambda]^a)/((x+\[Lambda])^(a+1)) over x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1416., {1002., 1012.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.805537051921412*^9, 3.805537117822755*^9, 
  3.8055371994513474`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"d9651e3c-9f97-4807-9fb6-9dcf0e395952"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   StyleBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Lambda]", "a"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Lambda]", "+", "x"}], ")"}], 
        RowBox[{"-", "a"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", "\[Lambda]"}], ")"}]}], 
      RowBox[{"a", "-", "1"}]]}],
    LineIndent->0,
    LinebreakAdjustments->{1, 100, 1, 0, 100},
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontColor->GrayLevel[0]], 
   StyleBox[",",
    LineIndent->0,
    LinebreakAdjustments->{1, 100, 1, 0, 100},
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["x",
     LineIndent->0,
     LinebreakAdjustments->{1, 100, 1, 0, 100},
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontColor->GrayLevel[0]], 
    StyleBox["\[Rule]",
     LineIndent->0,
     LinebreakAdjustments->{1, 100, 1, 0, 100},
     LineColor->GrayLevel[0],
     FrontFaceColor->GrayLevel[0],
     BackFaceColor->GrayLevel[0],
     GraphicsColor->GrayLevel[0],
     FontColor->GrayLevel[0]], 
    RowBox[{"{", 
     RowBox[{"0", ",", "Infinity"}], "}"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"a", ">", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805537795692843*^9, 3.805537822779386*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"50dde7ca-7f8a-46fe-82d2-a6a6dadbe8a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Lambda]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "a"}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8055378022013493`*^9, 3.805537823303403*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"64eccde1-fe3e-4b46-a1da-64475591a97f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"x", ">", "1.38"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.805903994553961*^9, 3.805904031601472*^9}, {
  3.805904337081439*^9, 3.805904338683535*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d7b73a02-537c-4872-ac57-d72a11ac22ea"],

Cell[BoxData["0.08379332241501429`"], "Output",
 CellChangeTimes->{{3.805904022613928*^9, 3.8059040319479027`*^9}, 
   3.805904338974737*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"415e456b-5870-4880-a683-177ae99c92e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "4"}], ")"}], "^", "3"}], 
       RowBox[{"(", 
        RowBox[{"10", "-", "x"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "7"}], ")"}], "^", "3"}]}], ",", "x"}], "]"}], 
    "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8059067231623507`*^9, 3.805906760363594*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5c454f7c-c001-4163-b302-425fc7b82e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["37", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.805906749438388*^9, 3.805906760741911*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"a460ae54-93e0-4a4d-8e4a-a49bedc5fa0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "37"}], "/", "4"}]], "Input",
 CellChangeTimes->{{3.805906806938905*^9, 
  3.805906813044219*^9}},ExpressionUUID->"19369ef3-a8db-4a15-aa60-\
c575f8ab1366"],

Cell[BoxData[
 FractionBox["37", "4"]], "Output",
 CellChangeTimes->{3.8059068092485657`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"8edea819-e456-472a-a6f3-50e64a86eddc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1136},
WindowMargins->{{0, Automatic}, {Automatic, 28}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/fiftyfour/Documents/FicheDeNote/Probabilites/\
Exercice/exercice.pdf"},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All], FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["Title"]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Chapter"]], 
   Cell[
    StyleData["Subsection"]], 
   Cell[
    StyleData["Subsubsection"]], 
   Cell[
    StyleData["Text"]], 
   Cell[
    StyleData["Input"], Background -> 
    RGBColor[0.9215686274509803, 0.9215686274509803, 0.9215686274509803]]}, 
  Visible -> False, FrontEndVersion -> 
  "12.0 for Linux x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 156, 3, 81, "Subtitle",ExpressionUUID->"4d4253be-3b16-45e5-9136-b8515a50fe90"],
Cell[739, 27, 177, 2, 71, "Input",ExpressionUUID->"a952cca2-a67f-4376-8165-0fc70ea6e355"],
Cell[919, 31, 4351, 127, 662, "Input",ExpressionUUID->"5013e8db-0ff5-4d68-96d7-c41869d05534"],
Cell[5273, 160, 706, 18, 179, "Input",ExpressionUUID->"e27e8db3-aa11-4958-96f6-f68aa0946ae5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6016, 183, 162, 3, 147, "Title",ExpressionUUID->"a1147313-a0a1-41e0-99ae-aa419df1b4e4"],
Cell[CellGroupData[{
Cell[6203, 190, 155, 3, 105, "Chapter",ExpressionUUID->"e48872f1-6f31-49bb-a8ae-f642663bc468"],
Cell[CellGroupData[{
Cell[6383, 197, 161, 3, 102, "Section",ExpressionUUID->"bfdbdf0e-e2f3-424e-bff3-6347f838246d"],
Cell[CellGroupData[{
Cell[6569, 204, 166, 3, 82, "Subsection",ExpressionUUID->"a2efeac2-201a-4331-a5b3-d817ca0a9209"],
Cell[CellGroupData[{
Cell[6760, 211, 884, 23, 145, "Input",ExpressionUUID->"eeec5e81-e091-497f-a8fa-f937826cf8b2"],
Cell[7647, 236, 360, 6, 72, "Output",ExpressionUUID->"d56103a6-3052-48f8-8964-b5dbd7cf5eda"],
Cell[8010, 244, 359, 6, 72, "Output",ExpressionUUID->"1338e973-7fcc-4ab5-b580-1843613b4a40"],
Cell[8372, 252, 360, 6, 72, "Output",ExpressionUUID->"d19a6cdc-3595-44ea-b595-007817360aa9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8793, 265, 175, 3, 102, "Section",ExpressionUUID->"96123757-04c2-4b1e-81ad-8d9bf83c1896"],
Cell[CellGroupData[{
Cell[8993, 272, 167, 3, 82, "Subsection",ExpressionUUID->"0589c254-189f-4566-91bb-ae5a42b07906"],
Cell[CellGroupData[{
Cell[9185, 279, 1195, 31, 214, "Input",ExpressionUUID->"e394f8bb-93a6-468c-ad27-fdddb58b27c4"],
Cell[10383, 312, 393, 6, 72, "Output",ExpressionUUID->"e5186ceb-88b4-4723-abb3-04401f277772"],
Cell[10779, 320, 387, 5, 53, "Output",ExpressionUUID->"28e4b53c-b43d-4894-989b-5638a4f5c613"],
Cell[11169, 327, 393, 6, 72, "Output",ExpressionUUID->"85bce722-dd6f-465f-9dfa-0deac828a8f7"],
Cell[11565, 335, 394, 6, 72, "Output",ExpressionUUID->"d9f673f7-4e47-47a9-bed7-8859b3c4d145"],
Cell[11962, 343, 386, 5, 53, "Output",ExpressionUUID->"01493788-c570-4be9-9ed3-2d3200ad0d0c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12397, 354, 166, 3, 82, "Subsection",ExpressionUUID->"4c5b52e5-a461-4d8d-8d30-54257721793a"],
Cell[CellGroupData[{
Cell[12588, 361, 1216, 31, 215, "Input",ExpressionUUID->"9588236b-6760-4a04-a6c3-673ffa091cdc"],
Cell[13807, 394, 417, 7, 72, "Output",ExpressionUUID->"f260e16c-675b-4c59-a9fd-ee8d5ee8219b"],
Cell[14227, 403, 409, 6, 53, "Output",ExpressionUUID->"c9b965bc-8822-4109-8947-83c7de995102"],
Cell[14639, 411, 409, 6, 53, "Output",ExpressionUUID->"22c55b35-1800-4cd3-b1a2-e4e9f0dbbf31"],
Cell[15051, 419, 417, 7, 72, "Output",ExpressionUUID->"ac775881-d476-4ba3-8083-0c575309f952"],
Cell[15471, 428, 409, 6, 53, "Output",ExpressionUUID->"c1b77620-2ffc-4266-885b-7afd303e88d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15953, 442, 157, 3, 105, "Chapter",ExpressionUUID->"3e254f17-4d42-48b7-83d9-62bfdeba01f9"],
Cell[CellGroupData[{
Cell[16135, 449, 177, 3, 102, "Section",ExpressionUUID->"4efc573b-4d42-4612-b920-260dd30553ae"],
Cell[CellGroupData[{
Cell[16337, 456, 168, 3, 82, "Subsection",ExpressionUUID->"5168c1a9-3a58-4ea4-8858-19d6e27cdae9"],
Cell[CellGroupData[{
Cell[16530, 463, 678, 21, 106, "Input",ExpressionUUID->"58d51d2c-ccbd-4c51-8456-9923cc542c38"],
Cell[17211, 486, 288, 5, 72, "Output",ExpressionUUID->"83766b6e-7cac-4fb5-a3ff-cec8cdbdf42d"],
Cell[17502, 493, 288, 5, 72, "Output",ExpressionUUID->"54cdafd5-a0b6-48f3-b9a8-197d8221874c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17839, 504, 169, 3, 82, "Subsection",ExpressionUUID->"3a9d4a8c-167d-430f-8325-df226926cd2d"],
Cell[CellGroupData[{
Cell[18033, 511, 1403, 40, 416, "Input",ExpressionUUID->"3b3c2de0-a807-4dd2-a32b-7e8599808aec"],
Cell[19439, 553, 370, 6, 72, "Output",ExpressionUUID->"722a2c9f-182d-49a2-b18e-df018b62dec0"],
Cell[19812, 561, 360, 5, 53, "Output",ExpressionUUID->"2fa63f5b-535d-47e8-a6ba-cf6e4e650316"],
Cell[20175, 568, 368, 6, 72, "Output",ExpressionUUID->"5d27b9db-60f9-4701-b4c3-2d3b75e5edcd"],
Cell[20546, 576, 362, 5, 53, "Output",ExpressionUUID->"38354373-3182-471e-b6e0-82547851fcac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20957, 587, 167, 3, 82, "Subsection",ExpressionUUID->"4b35586c-9108-41f6-8da0-2533fcd257b6"],
Cell[21127, 592, 144, 3, 54, "Text",ExpressionUUID->"4c280311-0264-4bf5-8155-197256e90794"],
Cell[CellGroupData[{
Cell[21296, 599, 828, 20, 176, "Input",ExpressionUUID->"6ab8a19d-8b0b-46c3-9395-bb550cb34689"],
Cell[22127, 621, 266, 5, 72, "Output",ExpressionUUID->"f4f16c81-ef03-4f35-b7d4-7b37018cd271"]
}, Open  ]],
Cell[22408, 629, 146, 3, 54, "Text",ExpressionUUID->"972c82bc-52ad-4a7a-bbf8-190b4fedf9b3"],
Cell[CellGroupData[{
Cell[22579, 636, 868, 19, 208, "Input",ExpressionUUID->"d6261895-bdeb-40ca-8e7c-aa621b916d57"],
Cell[23450, 657, 295, 5, 72, "Output",ExpressionUUID->"7840d8e5-bcdb-4f75-aac1-90c4382d0686"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23794, 668, 171, 3, 82, "Subsection",ExpressionUUID->"9862cd2c-657e-49e9-8e15-62a4cf733f2f"],
Cell[23968, 673, 146, 3, 54, "Text",ExpressionUUID->"a5f8ecff-a889-40bd-b5d9-e6b368564fe8"],
Cell[CellGroupData[{
Cell[24139, 680, 1179, 32, 276, "Input",ExpressionUUID->"3b4f2f5d-c4a2-488a-ab19-4a1c9075de06"],
Cell[25321, 714, 248, 5, 72, "Output",ExpressionUUID->"41ae984d-78c9-4b02-8c89-7de8b8c1e9b6"],
Cell[25572, 721, 246, 4, 53, "Output",ExpressionUUID->"a8d37b0e-ae17-450c-bf52-633448c0398a"]
}, Open  ]],
Cell[25833, 728, 146, 3, 54, "Text",ExpressionUUID->"88a3e733-b543-4a3b-8a61-b2a932052a83"],
Cell[CellGroupData[{
Cell[26004, 735, 554, 16, 106, "Input",ExpressionUUID->"9f3495a9-650a-4b4d-819a-ab52b7cae2fe"],
Cell[26561, 753, 408, 6, 72, "Output",ExpressionUUID->"d4a99490-a244-41c0-a5c0-f60ab695cded"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27042, 767, 155, 3, 105, "Chapter",ExpressionUUID->"2cd74355-5db3-4168-8211-f26662cda0f8"],
Cell[CellGroupData[{
Cell[27222, 774, 163, 3, 102, "Section",ExpressionUUID->"cc1d9b84-c369-4d6f-97a6-5bd8a1202764"],
Cell[27388, 779, 169, 3, 82, "Subsection",ExpressionUUID->"6cd21e82-2c24-456b-a4ab-afb450150b41"],
Cell[CellGroupData[{
Cell[27582, 786, 166, 3, 56, "Subsection",ExpressionUUID->"adab6176-1f5e-4382-8e99-9f1f521957ff"],
Cell[CellGroupData[{
Cell[27773, 793, 2439, 67, 420, "Input",ExpressionUUID->"fd9f3a20-22ed-49b8-9b17-1b0c1d450411"],
Cell[30215, 862, 3734, 84, 355, "Output",ExpressionUUID->"e4642a33-5af8-43ac-addc-4de032fba7f2"],
Cell[33952, 948, 1389, 42, 72, "Output",ExpressionUUID->"def68e2d-02b8-4760-b354-5fe4d1a31759"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35390, 996, 169, 3, 82, "Subsection",ExpressionUUID->"e007b6f6-9e70-4bc4-baf0-e63397990f95"],
Cell[35562, 1001, 144, 3, 54, "Text",ExpressionUUID->"5ad5a76e-b023-44da-8627-10c0785400d6"],
Cell[CellGroupData[{
Cell[35731, 1008, 711, 19, 140, "Input",ExpressionUUID->"81848bb6-2b48-4b31-858b-f58917a5227f"],
Cell[36445, 1029, 325, 7, 72, "Output",ExpressionUUID->"2062db4b-ddbd-4a5d-9252-078555da9087"]
}, Open  ]],
Cell[36785, 1039, 143, 3, 54, "Text",ExpressionUUID->"0de60877-685b-47a4-906f-cbab10164829"],
Cell[CellGroupData[{
Cell[36953, 1046, 378, 10, 71, "Input",ExpressionUUID->"01f300ba-33a7-4da1-92b4-2963479f61a5"],
Cell[37334, 1058, 349, 6, 72, "Output",ExpressionUUID->"3100283a-a3b7-4b09-82cc-bf412a06bd2f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37732, 1070, 167, 3, 82, "Subsection",ExpressionUUID->"6ca16534-5d11-471b-a8e9-3b7bb4719887"],
Cell[CellGroupData[{
Cell[37924, 1077, 603, 16, 178, "Input",ExpressionUUID->"9a33da56-098d-47e0-b276-4743e1da36dd"],
Cell[38530, 1095, 270, 6, 72, "Output",ExpressionUUID->"ee8a1d08-af5a-4d88-bb9d-124a0a066bbf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38849, 1107, 168, 3, 82, "Subsection",ExpressionUUID->"2fda998b-1237-4330-9a4e-9d4aaa972e19"],
Cell[CellGroupData[{
Cell[39042, 1114, 1015, 25, 344, "Input",ExpressionUUID->"5370cfb2-3c5d-4b8c-a3ae-191dbd30130e"],
Cell[40060, 1141, 446, 7, 53, "Output",ExpressionUUID->"aad841b1-efc1-4dae-a67d-843094911b24"],
Cell[40509, 1150, 450, 7, 53, "Output",ExpressionUUID->"429320a7-f3fb-4442-8bb1-32ef588b6173"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41008, 1163, 169, 3, 82, "Subsection",ExpressionUUID->"b0228d69-eb37-4d9d-815c-6404a1cbc978"],
Cell[CellGroupData[{
Cell[41202, 1170, 2574, 72, 591, "Input",ExpressionUUID->"8ca66fc4-6715-488b-a5ac-96de66ed865a"],
Cell[43779, 1244, 533, 9, 53, "Output",ExpressionUUID->"677a2309-0815-4a87-8454-36325e818d76"],
Cell[44315, 1255, 542, 9, 53, "Output",ExpressionUUID->"ecebd2c8-33c5-47e6-b521-f4d92ddaaff5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44906, 1270, 167, 3, 82, "Subsection",ExpressionUUID->"7b627674-b6ee-4e15-b9b7-060a990cd989"],
Cell[CellGroupData[{
Cell[45098, 1277, 1161, 32, 276, "Input",ExpressionUUID->"1fd0b662-f565-48e0-8987-adb9be7a60f0"],
Cell[46262, 1311, 450, 8, 72, "Output",ExpressionUUID->"38f39286-adc8-4ba7-8989-59ae61f37e3f"],
Cell[46715, 1321, 444, 7, 53, "Output",ExpressionUUID->"82b81e2c-b4fa-4c13-bc49-ffa0ad181d29"],
Cell[47162, 1330, 427, 7, 53, "Output",ExpressionUUID->"9f6eac88-1604-4d63-9bb4-5a5044abf89b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47638, 1343, 167, 3, 82, "Subsection",ExpressionUUID->"708db4e9-c322-409c-a8c0-01d6a0b83e60"],
Cell[CellGroupData[{
Cell[47830, 1350, 1486, 34, 178, "Input",ExpressionUUID->"d564a729-71db-4b56-a2a7-4479ede0d0b3"],
Cell[49319, 1386, 467, 10, 74, "Output",ExpressionUUID->"8e158564-1049-4f8d-af00-8e56ceb34d98"],
Cell[49789, 1398, 372, 6, 53, "Output",ExpressionUUID->"a529ba93-091e-4b26-aa5c-85b623350a70"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50210, 1410, 169, 3, 82, "Subsection",ExpressionUUID->"a3f69ea1-146e-4686-b30d-3de31e17e5b0"],
Cell[CellGroupData[{
Cell[50404, 1417, 1391, 42, 324, "Input",ExpressionUUID->"080f9021-1945-484e-89a0-97be315f6893"],
Cell[51798, 1461, 317, 5, 53, "Output",ExpressionUUID->"98e3048c-5e6d-449e-8c0a-978f9658fc46"],
Cell[52118, 1468, 494, 11, 53, "Output",ExpressionUUID->"5939e670-d68c-4f6c-9088-d01d4c599b81"],
Cell[52615, 1481, 433, 10, 76, "Output",ExpressionUUID->"f7434536-cceb-4175-8935-ab92e806f1b6"],
Cell[53051, 1493, 320, 5, 53, "Output",ExpressionUUID->"04946d44-9365-4c74-8821-14e991be5dbf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53420, 1504, 167, 3, 82, "Subsection",ExpressionUUID->"3d20ff3e-2b6e-4170-b48d-2ce706f6c20f"],
Cell[CellGroupData[{
Cell[53612, 1511, 1201, 34, 284, "Input",ExpressionUUID->"f765486d-d5b8-40a7-ad92-a0a5d6de1f53"],
Cell[54816, 1547, 464, 10, 76, "Output",ExpressionUUID->"7b20d493-e277-410f-9ff6-e8cc7ede180a"],
Cell[55283, 1559, 906, 23, 72, "Output",ExpressionUUID->"d00e5b3d-7af6-4da0-8582-c6099e21da81"],
Cell[56192, 1584, 518, 12, 76, "Output",ExpressionUUID->"4db9f328-73e1-43b7-ba7a-26bbe0bc9127"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56759, 1602, 167, 3, 82, "Subsection",ExpressionUUID->"fa2b1a3d-a11e-40c6-a7d1-fa2b60c1b336"],
Cell[CellGroupData[{
Cell[56951, 1609, 1056, 24, 242, "Input",ExpressionUUID->"266bc87e-bb10-4961-8e46-9e098bf2863c"],
Cell[58010, 1635, 672, 13, 75, "Output",ExpressionUUID->"fce37f84-c6c2-4f68-86c9-2d732fd5efc5"],
Cell[58685, 1650, 557, 8, 53, "Output",ExpressionUUID->"ab097d25-6447-422c-83d5-537c62511214"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59291, 1664, 167, 3, 82, "Subsection",ExpressionUUID->"2a9ca8ee-6c91-4273-9c29-d05686746e64"],
Cell[CellGroupData[{
Cell[59483, 1671, 994, 22, 180, "Input",ExpressionUUID->"3bc504ed-bdef-4d64-b1c2-6ba425627925"],
Cell[60480, 1695, 545, 9, 72, "Output",ExpressionUUID->"19bd82d4-0734-4b5a-8442-6eae23ce8faa"],
Cell[61028, 1706, 671, 14, 53, "Output",ExpressionUUID->"42b5d2f4-cd07-4e43-9af0-3a152c05f0d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61748, 1726, 169, 3, 82, "Subsection",ExpressionUUID->"7649282e-03cd-4760-a451-55ae138ae49b"],
Cell[CellGroupData[{
Cell[61942, 1733, 1164, 30, 281, "Input",ExpressionUUID->"174ed1b1-f434-40db-b71d-adc4facbe822"],
Cell[63109, 1765, 540, 9, 53, "Output",ExpressionUUID->"f69d569b-b94e-435e-85e9-05ebc75979f3"],
Cell[63652, 1776, 542, 9, 53, "Output",ExpressionUUID->"524a884d-1e66-4d82-b9c2-95c3453cfc54"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64243, 1791, 168, 3, 82, "Subsection",ExpressionUUID->"4c24c849-06d3-455c-b477-dbaa51473910"],
Cell[CellGroupData[{
Cell[64436, 1798, 673, 15, 174, "Input",ExpressionUUID->"466253ab-61e9-4425-bcad-113f25452c70"],
Cell[65112, 1815, 422, 7, 72, "Output",ExpressionUUID->"be017de4-41af-4f92-b4e8-f32473b1f3a7"],
Cell[65537, 1824, 401, 6, 53, "Output",ExpressionUUID->"ae69c6c0-5a3f-4de6-8aa3-16d2f81c6d7b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65987, 1836, 169, 3, 82, "Subsection",ExpressionUUID->"3ab1e2aa-00c4-4670-af78-0ab459cbcd43"],
Cell[CellGroupData[{
Cell[66181, 1843, 652, 15, 174, "Input",ExpressionUUID->"7d5518ab-d85a-4684-ac48-7a2a1ed728a8"],
Cell[66836, 1860, 294, 6, 72, "Output",ExpressionUUID->"03e1e1c6-006d-4e75-a171-7f888d0390cf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67191, 1873, 203, 4, 102, "Section",ExpressionUUID->"3e071081-c1b2-4f01-8abf-d342416eb431"],
Cell[CellGroupData[{
Cell[67419, 1881, 168, 3, 82, "Subsection",ExpressionUUID->"db9871c0-bc21-433d-8860-e6d454062c47"],
Cell[CellGroupData[{
Cell[67612, 1888, 1124, 29, 276, "Input",ExpressionUUID->"c0a12d96-954f-4b18-b958-bba3f78cee86"],
Cell[68739, 1919, 345, 5, 53, "Output",ExpressionUUID->"ac554a6b-f052-4b05-afa3-885a338dcb40"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69133, 1930, 215, 4, 82, "Subsection",ExpressionUUID->"549a1aef-bf62-4732-a2a7-da0f6d85b9d3"],
Cell[CellGroupData[{
Cell[69373, 1938, 608, 15, 145, "Input",ExpressionUUID->"f9e72e29-fa75-4294-86a7-8d288dc9d059"],
Cell[69984, 1955, 344, 6, 72, "Output",ExpressionUUID->"772b304d-be15-4bb0-8ef5-c8f8e8fac43a"],
Cell[70331, 1963, 436, 9, 76, "Output",ExpressionUUID->"49d03a68-ff25-44e5-9036-e2c574b54a10"],
Cell[70770, 1974, 344, 5, 53, "Output",ExpressionUUID->"532b88d5-ecd7-4329-a22e-7c33d6c66359"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71151, 1984, 564, 17, 140, "Input",ExpressionUUID->"1730269d-e47b-488f-931f-0a7076cde0b9"],
Cell[71718, 2003, 276, 6, 72, "Output",ExpressionUUID->"34ee76f4-d4de-443c-9093-b8f9b4bbb7c6"],
Cell[71997, 2011, 272, 5, 53, "Output",ExpressionUUID->"9f6ccc34-f2e6-4f71-a0e4-f26fb079bb48"]
}, Open  ]]
}, Open  ]],
Cell[72296, 2020, 169, 3, 82, "Subsection",ExpressionUUID->"3b958de8-ae4b-4672-aee7-5e700e66f1c0"],
Cell[CellGroupData[{
Cell[72490, 2027, 169, 3, 56, "Subsection",ExpressionUUID->"d422a2e9-4f5c-4165-96df-fdcc67cd7949"],
Cell[72662, 2032, 146, 3, 54, "Text",ExpressionUUID->"0e31229a-5bef-46e3-88b5-10dc2a169273"],
Cell[CellGroupData[{
Cell[72833, 2039, 990, 29, 174, "Input",ExpressionUUID->"b534a7c9-90da-4155-b245-5a0fc89eb61d"],
Cell[73826, 2070, 418, 8, 72, "Output",ExpressionUUID->"b08d24e4-5a5f-4d66-aaca-63924d7e0f3d"],
Cell[74247, 2080, 419, 8, 72, "Output",ExpressionUUID->"906eada7-0250-45e3-9c02-efc7f6511cc9"]
}, Open  ]],
Cell[74681, 2091, 200, 4, 54, "Text",ExpressionUUID->"76a73b9e-5495-4738-b4a3-b10d89c327e9"],
Cell[CellGroupData[{
Cell[74906, 2099, 825, 20, 110, "Input",ExpressionUUID->"7c711a07-09eb-4be7-a2af-19d9caf91bb2"],
Cell[75734, 2121, 491, 8, 72, "Output",ExpressionUUID->"e4113aef-019a-42b7-a444-7adf62261f09"],
Cell[76228, 2131, 481, 7, 53, "Output",ExpressionUUID->"9ea874f0-069c-4f7f-85bb-dbaa0e695cf9"]
}, Open  ]]
}, Open  ]],
Cell[76736, 2142, 167, 3, 82, "Subsection",ExpressionUUID->"39546d5f-68c1-4f8b-b026-77dceb476663"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76952, 2151, 155, 3, 105, "Chapter",ExpressionUUID->"7c1a22e0-9933-4a79-8b5b-d7bc7abcd5f8"],
Cell[CellGroupData[{
Cell[77132, 2158, 165, 3, 102, "Section",ExpressionUUID->"2b027d90-71f4-4a15-8999-889ba21804ae"],
Cell[CellGroupData[{
Cell[77322, 2165, 160, 3, 82, "Subsection",ExpressionUUID->"719d92df-54f9-4b1a-bc89-ac63c4d7e5b4"],
Cell[CellGroupData[{
Cell[77507, 2172, 1492, 41, 212, "Input",ExpressionUUID->"25949a27-10f5-4795-a2c2-3c463ef0d8a6"],
Cell[79002, 2215, 505, 10, 53, "Output",ExpressionUUID->"3495e05e-164e-4d6d-a8d1-d9688fe34ca5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79544, 2230, 1225, 29, 217, "Input",ExpressionUUID->"3afad64e-5b67-4aa9-9f3e-d747f822657a"],
Cell[80772, 2261, 731, 13, 76, "Output",ExpressionUUID->"3f44d70c-890b-4f1e-b5fe-ae08382724cb"],
Cell[81506, 2276, 669, 10, 53, "Output",ExpressionUUID->"7a6ca1cf-5e5c-4921-84dc-e008f3a61cc1"],
Cell[82178, 2288, 12449, 223, 356, "Output",ExpressionUUID->"231a2ca1-9f49-4cfb-b372-ad5901619102"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94676, 2517, 168, 3, 82, "Subsection",ExpressionUUID->"c108070b-e74e-4529-818d-52e75d661db7"],
Cell[CellGroupData[{
Cell[94869, 2524, 2215, 64, 412, "Input",ExpressionUUID->"02a9583a-2222-4b0a-aa98-cf50f2f2d304"],
Cell[97087, 2590, 494, 12, 72, "Output",ExpressionUUID->"82f755ab-771f-4829-b5f7-abb7c3bf75ee"],
Cell[97584, 2604, 437, 10, 72, "Output",ExpressionUUID->"88947f36-3f79-4e7d-8985-1050403be82b"],
Cell[98024, 2616, 7544, 145, 348, "Output",ExpressionUUID->"eca7d90d-ee20-4677-b173-bffe2dd83dff"],
Cell[105571, 2763, 472, 11, 72, "Output",ExpressionUUID->"baab9696-e629-46dc-a7e4-bb45394d1cde"],
Cell[106046, 2776, 417, 9, 72, "Output",ExpressionUUID->"2107b613-f51b-401f-8c28-48d3b794f3c9"],
Cell[106466, 2787, 7676, 147, 342, "Output",ExpressionUUID->"982d6ad2-1423-4518-9eb2-f0f31169ba95"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114191, 2940, 166, 3, 82, "Subsection",ExpressionUUID->"34e71b52-ffb0-483f-a13f-09a3790736e8"],
Cell[CellGroupData[{
Cell[114382, 2947, 691, 19, 213, "Input",ExpressionUUID->"64eff2e8-650c-49f3-9577-0e8033f38a17"],
Cell[115076, 2968, 269, 5, 72, "Output",ExpressionUUID->"cf4000ae-4e25-451c-a3fe-3242a1646b00"],
Cell[115348, 2975, 263, 4, 53, "Output",ExpressionUUID->"eda76874-23b0-4eb4-b636-3efea26fd580"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115660, 2985, 158, 3, 82, "Subsection",ExpressionUUID->"b6dead97-2cc2-4ea5-8f3c-fd2cb7bf2565"],
Cell[CellGroupData[{
Cell[115843, 2992, 1654, 54, 174, "Input",ExpressionUUID->"7f8ec467-09cc-4439-a8a8-f186fcccf642"],
Cell[117500, 3048, 509, 13, 72, "Output",ExpressionUUID->"fba9b1a3-4340-4851-8327-24d8adfa2ccc"],
Cell[118012, 3063, 506, 13, 72, "Output",ExpressionUUID->"897738cb-d084-4e0e-9da9-6ad89178be21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118567, 3082, 169, 3, 82, "Subsection",ExpressionUUID->"8998b5b9-3cb9-4628-b316-b18e6abe80d8"],
Cell[CellGroupData[{
Cell[118761, 3089, 4185, 125, 820, "Input",ExpressionUUID->"b094d12b-b79a-4688-a4f5-161369f77207"],
Cell[122949, 3216, 285, 5, 53, "Output",ExpressionUUID->"1471ef5a-af2b-466b-a84d-f8b0b617e9f2"],
Cell[123237, 3223, 284, 5, 53, "Output",ExpressionUUID->"ff54663a-26ee-495c-9a2d-8b90e8b17c34"],
Cell[123524, 3230, 298, 5, 53, "Output",ExpressionUUID->"030d149e-71c1-42c6-8692-512f6b6d0238"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123871, 3241, 169, 3, 82, "Subsection",ExpressionUUID->"b58d6b23-12de-447b-be9e-0e5c84cb6471"],
Cell[CellGroupData[{
Cell[124065, 3248, 1405, 37, 319, "Input",ExpressionUUID->"f99c6a2b-463a-4089-b433-13446e932148"],
Cell[125473, 3287, 346, 6, 53, "Output",ExpressionUUID->"3a4d986b-b2e1-403d-b543-69f7d536cbd1"],
Cell[125822, 3295, 348, 6, 53, "Output",ExpressionUUID->"03f1766e-4b7a-4aa9-a3d5-3b508c53747f"],
Cell[126173, 3303, 344, 6, 53, "Output",ExpressionUUID->"e4c2da66-cd54-4182-bd7e-9236a7bb218a"],
Cell[126520, 3311, 343, 6, 53, "Output",ExpressionUUID->"8ec02a8b-7e85-4c75-8bad-b780b7fa152b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126912, 3323, 169, 3, 82, "Subsection",ExpressionUUID->"5d205b22-c545-4e74-aaed-315026da9eb9"],
Cell[CellGroupData[{
Cell[127106, 3330, 1823, 51, 329, "Input",ExpressionUUID->"a58a1fd4-f711-4024-a62e-0c78288daa6f"],
Cell[128932, 3383, 436, 7, 53, "Output",ExpressionUUID->"fdfd447e-d4ec-405e-b3dd-e58517e03247"],
Cell[129371, 3392, 437, 7, 53, "Output",ExpressionUUID->"aa73eb18-8371-450d-8537-d6ef62e9c893"],
Cell[129811, 3401, 485, 9, 53, "Output",ExpressionUUID->"40a04a85-608f-4e46-a7fa-c7cd2807890e"],
Cell[130299, 3412, 436, 7, 53, "Output",ExpressionUUID->"db3e986a-dbab-4237-b1b6-36e5f2f1c713"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130784, 3425, 169, 3, 82, "Subsection",ExpressionUUID->"e77046e5-e6ab-4cdd-828a-6874647e81f6"],
Cell[CellGroupData[{
Cell[130978, 3432, 3019, 86, 635, "Input",ExpressionUUID->"95ec77b2-3dae-46b7-8c87-185a0ffb84db"],
Cell[134000, 3520, 542, 8, 53, "Output",ExpressionUUID->"67c386b8-58be-44ef-8392-a6ee3946de71"],
Cell[134545, 3530, 561, 9, 53, "Output",ExpressionUUID->"1f806edd-5792-44a0-93ca-8bac496c8c90"],
Cell[135109, 3541, 542, 8, 53, "Output",ExpressionUUID->"d088d220-7609-4169-b24c-85f73cfb2b9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135700, 3555, 169, 3, 82, "Subsection",ExpressionUUID->"1300082d-6609-481a-8369-2fae4a3bbbdf"],
Cell[CellGroupData[{
Cell[135894, 3562, 3224, 76, 872, "Input",ExpressionUUID->"cf52f887-5544-4ba8-ae51-a643cd564c07"],
Cell[139121, 3640, 777, 10, 53, "Output",ExpressionUUID->"a9228f77-9a71-4377-847a-e153a273d1d3"],
Cell[139901, 3652, 779, 10, 53, "Output",ExpressionUUID->"6100d120-c1c3-4d25-91a6-cc8167000604"],
Cell[140683, 3664, 777, 10, 53, "Output",ExpressionUUID->"5c88533a-f890-4579-b972-f9d365bdcf83"],
Cell[141463, 3676, 283, 5, 37, "Print",ExpressionUUID->"48300fff-62f4-45f6-8384-6dc873ac13c6"],
Cell[141749, 3683, 779, 10, 53, "Output",ExpressionUUID->"88afac70-9452-486b-bed4-64e3e41f14b0"],
Cell[142531, 3695, 284, 5, 37, "Print",ExpressionUUID->"5b56f7b4-c638-4729-a217-da20a770786b"],
Cell[142818, 3702, 779, 10, 53, "Output",ExpressionUUID->"b85e8c30-3cdb-4c8a-84a9-987a635b0379"],
Cell[143600, 3714, 283, 5, 37, "Print",ExpressionUUID->"c1e2cc4b-0a91-4d33-8aba-127dc2ac2b03"],
Cell[143886, 3721, 777, 10, 53, "Output",ExpressionUUID->"38a3c774-b0ce-42a1-b1a0-2452c114486a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144712, 3737, 167, 3, 82, "Subsection",ExpressionUUID->"dd002509-2c77-470e-8a87-980b154788f6"],
Cell[CellGroupData[{
Cell[144904, 3744, 2430, 65, 527, "Input",ExpressionUUID->"7fbadf60-368a-4b3f-ae22-ae0da57ac795"],
Cell[147337, 3811, 566, 14, 57, "Output",ExpressionUUID->"182c435a-41f8-4507-9db0-cf47fbfd5002"],
Cell[147906, 3827, 535, 11, 53, "Output",ExpressionUUID->"a08a071c-202b-4db7-b3ba-56a7dd8d57eb"],
Cell[148444, 3840, 468, 8, 53, "Output",ExpressionUUID->"65421e5c-b2d1-4fff-8f2e-6e4a6d298e73"],
Cell[148915, 3850, 485, 9, 53, "Output",ExpressionUUID->"ec7eac84-d55f-44dc-b1b7-4618ea497826"],
Cell[149403, 3861, 469, 8, 53, "Output",ExpressionUUID->"af942576-7629-4199-b200-6cd99c8873c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149921, 3875, 169, 3, 82, "Subsection",ExpressionUUID->"0282d6e7-e296-4459-9997-010c09daf598"],
Cell[CellGroupData[{
Cell[150115, 3882, 2024, 55, 464, "Input",ExpressionUUID->"783d8d0d-b00d-4090-a84c-4d4b08de44cf"],
Cell[152142, 3939, 420, 6, 53, "Output",ExpressionUUID->"f8f35444-48e5-4c90-b838-8d5608966c23"],
Cell[152565, 3947, 418, 6, 53, "Output",ExpressionUUID->"b5dae536-9c22-4818-bd4b-5b94eb9bfcda"],
Cell[152986, 3955, 402, 6, 53, "Output",ExpressionUUID->"40e7f8c1-d3be-42e9-8106-6aa7abc8e6c3"],
Cell[153391, 3963, 402, 6, 53, "Output",ExpressionUUID->"c9634366-a1c0-4741-a072-675ec5cba253"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153842, 3975, 167, 3, 82, "Subsection",ExpressionUUID->"c12e5e60-9843-4c1e-a653-3871d27bd7db"],
Cell[CellGroupData[{
Cell[154034, 3982, 1604, 44, 429, "Input",ExpressionUUID->"72f6fe01-3cec-49c3-b15f-2819f41667c7"],
Cell[155641, 4028, 440, 7, 53, "Output",ExpressionUUID->"f046c6ed-2f80-4ea5-a03e-88e84ab425d4"],
Cell[156084, 4037, 440, 7, 53, "Output",ExpressionUUID->"380615ee-3c1b-4eb2-b078-088656b3ab47"],
Cell[156527, 4046, 440, 7, 53, "Output",ExpressionUUID->"710960e6-b117-4c6b-a943-c178a70a8bd0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157016, 4059, 169, 3, 82, "Subsection",ExpressionUUID->"1074145b-51b2-42b7-9d63-e3ef967569c8"],
Cell[CellGroupData[{
Cell[157210, 4066, 2341, 68, 533, "Input",ExpressionUUID->"1dcf6aeb-5554-4a02-bf1d-9c19c4fd6099"],
Cell[159554, 4136, 592, 9, 53, "Output",ExpressionUUID->"e3f97625-4abe-490b-903d-c34a3fe4826f"],
Cell[160149, 4147, 591, 9, 53, "Output",ExpressionUUID->"f4e9a07c-e116-4a9b-8339-494b7a043303"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160789, 4162, 167, 3, 82, "Subsection",ExpressionUUID->"f6079685-e007-414e-8064-3c57f3e9ba7c"],
Cell[CellGroupData[{
Cell[160981, 4169, 2159, 52, 318, "Input",ExpressionUUID->"f6de4f89-b9c7-4f15-b16a-14d91aab2cdd"],
Cell[163143, 4223, 851, 15, 53, "Output",ExpressionUUID->"9e5c7859-7a01-4586-9b98-439d7ecdc467"],
Cell[163997, 4240, 777, 12, 53, "Output",ExpressionUUID->"9e2659a2-89b6-4763-bb44-f3bcb117d116"],
Cell[164777, 4254, 779, 12, 53, "Output",ExpressionUUID->"d5144296-ccec-43eb-a2d6-537ed6cd6321"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165605, 4272, 218, 4, 82, "Subsection",ExpressionUUID->"2257307d-99a9-4aba-9047-d48725e7d6ee"],
Cell[CellGroupData[{
Cell[165848, 4280, 2234, 60, 349, "Input",ExpressionUUID->"a67c3550-0d11-48b2-a2e2-b0b0eb235873"],
Cell[168085, 4342, 675, 12, 53, "Output",ExpressionUUID->"1829db92-5900-410c-ac1d-efe208412555"],
Cell[168763, 4356, 608, 9, 53, "Output",ExpressionUUID->"fd128e90-88af-43a1-9dfc-3b5d19b0549f"],
Cell[169374, 4367, 632, 10, 53, "Output",ExpressionUUID->"e380f23e-492d-426b-a732-5548079b17df"],
Cell[170009, 4379, 630, 10, 53, "Output",ExpressionUUID->"796f2ee8-aff8-4eb7-a604-53e4ec96f956"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170688, 4395, 171, 3, 82, "Subsection",ExpressionUUID->"d4fda32e-2fd0-48c1-9def-df975bf2540b"],
Cell[CellGroupData[{
Cell[170884, 4402, 1199, 29, 174, "Input",ExpressionUUID->"3a2f5479-f149-4300-a521-5202ba175951"],
Cell[172086, 4433, 437, 7, 73, "Output",ExpressionUUID->"0c369fb3-4f7e-42a4-a0d7-0a53de27e1cc"],
Cell[172526, 4442, 424, 6, 53, "Output",ExpressionUUID->"35941935-eaf9-40af-b11a-f3d8f907847c"],
Cell[172953, 4450, 436, 7, 73, "Output",ExpressionUUID->"6427691d-054b-4aa2-929a-e0139fac8359"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173438, 4463, 167, 3, 82, "Subsection",ExpressionUUID->"285c0817-396d-4f09-885f-44f6810ae505"],
Cell[CellGroupData[{
Cell[173630, 4470, 2449, 72, 344, "Input",ExpressionUUID->"eb1f560d-94ee-46a1-be95-211ed43849eb"],
Cell[176082, 4544, 480, 9, 76, "Output",ExpressionUUID->"a7fc497c-dd0a-4744-aa4a-8cb7e29e3511"],
Cell[176565, 4555, 645, 15, 76, "Output",ExpressionUUID->"b406d25b-1993-4c8a-a43f-5502aef7577c"],
Cell[177213, 4572, 438, 7, 53, "Output",ExpressionUUID->"3de3435b-768b-4ab6-8c45-09504ccbbb32"],
Cell[177654, 4581, 505, 10, 76, "Output",ExpressionUUID->"f626a82d-a5c2-4867-9c11-171df3fdf384"],
Cell[178162, 4593, 444, 7, 53, "Output",ExpressionUUID->"341a39c7-7844-4bf9-b4fa-06d5fc9f858f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178655, 4606, 169, 3, 82, "Subsection",ExpressionUUID->"784369cb-145a-45ef-8e09-5282829d3a96"],
Cell[CellGroupData[{
Cell[178849, 4613, 1346, 37, 208, "Input",ExpressionUUID->"e8784c8f-b198-4ac0-b1a3-3ff0f8d5e5dd"],
Cell[180198, 4652, 1171, 33, 76, "Output",ExpressionUUID->"52e64961-e2a9-4440-b037-b264fc320eed"],
Cell[181372, 4687, 730, 17, 76, "Output",ExpressionUUID->"acdfe66a-d4cd-48f8-9f21-47f549f97a44"],
Cell[182105, 4706, 730, 17, 76, "Output",ExpressionUUID->"c9c2acfd-fde2-4fdf-9029-116305be0f47"],
Cell[182838, 4725, 540, 9, 72, "Output",ExpressionUUID->"67876dc2-e0c4-4dff-8901-0440cb39230b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183439, 4741, 283, 5, 102, "Section",ExpressionUUID->"3efc99ce-621c-48ad-a778-ee675ef6499b"],
Cell[CellGroupData[{
Cell[183747, 4750, 165, 3, 82, "Subsection",ExpressionUUID->"8c05df1a-f034-4051-9d76-e72554cbf0e7"],
Cell[CellGroupData[{
Cell[183937, 4757, 2827, 88, 446, "Input",ExpressionUUID->"f59a386e-f1be-4eff-89ac-c5be4451106b"],
Cell[186767, 4847, 628, 15, 72, "Output",ExpressionUUID->"c72cf39d-7b66-45f3-b024-36385d6fd2f0"],
Cell[187398, 4864, 448, 8, 72, "Output",ExpressionUUID->"946f5991-dbd6-4e51-8eb9-49927352dbf1"],
Cell[187849, 4874, 446, 8, 72, "Output",ExpressionUUID->"bca8f1b8-d3fc-4723-bd58-efc4d261e80b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188344, 4888, 220, 4, 82, "Subsection",ExpressionUUID->"41345736-da21-4a22-a3d0-409a2988d53d"],
Cell[CellGroupData[{
Cell[188589, 4896, 756, 22, 145, "Input",ExpressionUUID->"d14284a3-7321-4857-b4c1-c49c272021f0"],
Cell[189348, 4920, 297, 5, 53, "Output",ExpressionUUID->"86156458-da5e-470f-97a4-d938409a507b"],
Cell[189648, 4927, 295, 5, 53, "Output",ExpressionUUID->"87155265-16aa-48c2-b36a-8565492fe2d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189992, 4938, 167, 3, 82, "Subsection",ExpressionUUID->"4711533d-d8f3-4f64-a8b7-52b60ec26dec"],
Cell[CellGroupData[{
Cell[190184, 4945, 1819, 53, 276, "Input",ExpressionUUID->"a6fb321c-e5a7-40c9-b173-3adfde349ad6"],
Cell[192006, 5000, 246, 4, 53, "Output",ExpressionUUID->"12898184-478e-47b0-9488-9b4f9deb3d78"],
Cell[192255, 5006, 244, 4, 53, "Output",ExpressionUUID->"ced98185-9ea8-4da0-8daa-74bcd0f190d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192572, 5018, 206, 4, 105, "Chapter",ExpressionUUID->"3531efc3-2932-418e-acf9-f684c8c2e5b2"],
Cell[CellGroupData[{
Cell[192803, 5026, 161, 3, 102, "Section",ExpressionUUID->"0d4a2d2e-00ec-48ef-a155-7152fbd1a4af"],
Cell[CellGroupData[{
Cell[192989, 5033, 217, 4, 82, "Subsection",ExpressionUUID->"b492336d-8a1a-4f70-af9d-623bae09e9ea"],
Cell[CellGroupData[{
Cell[193231, 5041, 2922, 78, 460, "Input",ExpressionUUID->"0d4f0bfb-4875-40dd-b747-8b88bb70c697"],
Cell[196156, 5121, 851, 14, 72, "Output",ExpressionUUID->"42a305a5-a1a4-4c82-b504-4bee83dea97c"],
Cell[197010, 5137, 1183, 25, 72, "Output",ExpressionUUID->"b0a9c079-d879-46d4-9422-bb68e4abfdd4"],
Cell[198196, 5164, 966, 18, 72, "Output",ExpressionUUID->"e327c3ac-2c45-4810-b572-60d0506c19fa"],
Cell[199165, 5184, 832, 13, 53, "Output",ExpressionUUID->"c6eeb58a-8cd0-473e-892f-fd625df2f073"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200046, 5203, 166, 3, 82, "Subsection",ExpressionUUID->"1556867a-071f-4952-884d-1916e654700b"],
Cell[CellGroupData[{
Cell[200237, 5210, 5006, 147, 825, "Input",ExpressionUUID->"2b90e9b9-42b3-42b2-a95e-64b43f568b9f"],
Cell[205246, 5359, 708, 11, 53, "Output",ExpressionUUID->"be11a8a4-a6fc-40a5-9f12-52271c6eadf1"],
Cell[205957, 5372, 833, 16, 72, "Output",ExpressionUUID->"a5b6e79a-109e-4cee-a52b-24f68c5702d7"],
Cell[206793, 5390, 732, 12, 72, "Output",ExpressionUUID->"c234c61e-3b99-4e5c-bbc5-a4a2a91708c0"],
Cell[207528, 5404, 732, 12, 72, "Output",ExpressionUUID->"3baa90b3-7ecd-40fb-b459-8e56344774b1"],
Cell[208263, 5418, 731, 12, 72, "Output",ExpressionUUID->"0d8fbbff-9629-477e-8e63-5337e937f986"],
Cell[208997, 5432, 729, 12, 72, "Output",ExpressionUUID->"d3e68543-7906-4601-b1f1-8687a626ebb8"],
Cell[209729, 5446, 730, 12, 72, "Output",ExpressionUUID->"6925b04a-33a4-4939-b67d-ff16bcf3405b"],
Cell[210462, 5460, 727, 12, 72, "Output",ExpressionUUID->"c1cc0436-e571-4c01-8179-d123d482282c"]
}, Open  ]]
}, Open  ]],
Cell[211216, 5476, 167, 3, 82, "Subsection",ExpressionUUID->"7a089989-3864-4cb3-a99f-97c64b089870"],
Cell[CellGroupData[{
Cell[211408, 5483, 167, 3, 56, "Subsection",ExpressionUUID->"c53c2c36-a4a0-4484-bb45-6a0efd818da7"],
Cell[CellGroupData[{
Cell[211600, 5490, 744, 19, 208, "Input",ExpressionUUID->"bd37e135-97be-4637-944d-240af58e216b"],
Cell[212347, 5511, 299, 6, 72, "Output",ExpressionUUID->"2b134062-67f8-48ed-b151-fde1184b52b5"],
Cell[212649, 5519, 280, 5, 53, "Output",ExpressionUUID->"ffdfd6b6-ab42-43fc-88e9-dc355b910473"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212978, 5530, 171, 3, 82, "Subsection",ExpressionUUID->"a6083061-5f55-4180-a5fd-2ab0c71828ed"],
Cell[CellGroupData[{
Cell[213174, 5537, 1180, 29, 148, "Input",ExpressionUUID->"2047f7a0-6282-40c5-a5c2-1e53185021e7"],
Cell[214357, 5568, 802, 25, 72, "Output",ExpressionUUID->"d5ba24a9-474d-48bd-8387-4cfc931a3f0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215208, 5599, 169, 3, 82, "Subsection",ExpressionUUID->"dd062057-cb17-443b-a77c-8529e60eadfa"],
Cell[CellGroupData[{
Cell[215402, 5606, 2276, 63, 465, "Input",ExpressionUUID->"adfc102d-a05b-4aee-b3e8-5d0895c53e63"],
Cell[217681, 5671, 253, 6, 53, "Output",ExpressionUUID->"c9c8dc27-9b8b-4652-9f29-dfb2950f48b2"],
Cell[217937, 5679, 208, 4, 53, "Output",ExpressionUUID->"cff91018-9e23-49f0-b560-f6b72aed4c0b"],
Cell[218148, 5685, 226, 5, 72, "Output",ExpressionUUID->"13ee53b1-c331-4b5c-9fc1-15c9fc18af8f"],
Cell[218377, 5692, 226, 5, 72, "Output",ExpressionUUID->"9ac78093-5cf8-4409-804a-15c1ce2f2c8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218640, 5702, 443, 9, 113, "Input",ExpressionUUID->"e796b7ee-4df4-4fb2-b18f-9df4510ed4b0"],
Cell[219086, 5713, 126472, 2460, 2438, "Output",ExpressionUUID->"08000e3f-1978-4e48-acd8-1477b180d3e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[345607, 8179, 167, 3, 82, "Subsection",ExpressionUUID->"cff2d468-2f2d-4485-a9aa-2c1351e5e293"],
Cell[345777, 8184, 177, 2, 71, "Input",ExpressionUUID->"78099e5f-2407-49c6-919f-6a906a05ca0b"],
Cell[CellGroupData[{
Cell[345979, 8190, 1781, 51, 361, "Input",ExpressionUUID->"b724c983-cd73-4257-9f05-19e083f6b9df"],
Cell[347763, 8243, 327, 5, 53, "Output",ExpressionUUID->"965c6c6b-7efc-410e-bef4-c15cde0483fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348139, 8254, 167, 3, 82, "Subsection",ExpressionUUID->"88bb71e1-0083-4ba4-8f5e-3362f6cc8e66"],
Cell[348309, 8259, 132, 3, 71, "Input",ExpressionUUID->"375e6c3f-ca75-43ec-b9f4-92719a0408a1"],
Cell[CellGroupData[{
Cell[348466, 8266, 3121, 91, 689, "Input",ExpressionUUID->"e66ba427-929b-4d66-825e-fc1ff5b92f7a"],
Cell[351590, 8359, 619, 11, 53, "Output",ExpressionUUID->"4bc9f4ce-5b9f-479a-b0de-e43e63ad9e62"],
Cell[352212, 8372, 564, 9, 53, "Output",ExpressionUUID->"0e3daea4-c8fe-49a8-81ef-4a909adeec4e"],
Cell[352779, 8383, 543, 8, 53, "Output",ExpressionUUID->"e892e547-0005-465f-a049-cd6fc60af806"],
Cell[353325, 8393, 560, 9, 72, "Output",ExpressionUUID->"4437ddac-77e0-4806-bc35-df092681cc3c"],
Cell[353888, 8404, 562, 9, 72, "Output",ExpressionUUID->"314c08e3-3644-4dd6-9f3a-a97fe2ecdb82"],
Cell[354453, 8415, 563, 9, 72, "Output",ExpressionUUID->"48310c42-0e93-4211-adb8-cf1f6321789e"],
Cell[355019, 8426, 561, 9, 72, "Output",ExpressionUUID->"dbd18a31-47f8-4608-b7ba-7c604eb79663"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355629, 8441, 166, 3, 82, "Subsection",ExpressionUUID->"c1e594c2-9660-450f-93e8-622a04e3252e"],
Cell[CellGroupData[{
Cell[355820, 8448, 820, 22, 140, "Input",ExpressionUUID->"3663fbcf-99c0-4471-83ac-9b85dd08aac9"],
Cell[356643, 8472, 282, 8, 53, "Output",ExpressionUUID->"1adbcfe8-f090-4d43-948a-90dca8ea7fd7"],
Cell[356928, 8482, 280, 8, 79, "Output",ExpressionUUID->"51032d42-b281-4806-b67f-c33480db9f5f"],
Cell[357211, 8492, 219, 5, 72, "Output",ExpressionUUID->"1b03a232-9f19-4d9c-8bd4-409336c27656"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357467, 8502, 978, 28, 208, "Input",ExpressionUUID->"f298c866-df3e-40b0-9e9d-a325ab2a0c6b"],
Cell[358448, 8532, 597, 16, 80, "Output",ExpressionUUID->"af591350-9405-4224-a6c3-c494be6dde98"],
Cell[359048, 8550, 474, 11, 72, "Output",ExpressionUUID->"a7d457f4-cacc-49dd-8baa-23a2a5adfcc0"],
Cell[359525, 8563, 368, 6, 53, "Output",ExpressionUUID->"6a76dd7d-399a-42ca-9b2b-0421e470a788"],
Cell[359896, 8571, 370, 6, 53, "Output",ExpressionUUID->"72869c7d-daa2-4444-acbc-850d251e9d7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360315, 8583, 169, 3, 82, "Subsection",ExpressionUUID->"d646fb51-d660-4d59-abb7-f481fe80b084"],
Cell[CellGroupData[{
Cell[360509, 8590, 1891, 49, 324, "Input",ExpressionUUID->"d946e683-0dfd-47e7-9fcf-560b4a654b63"],
Cell[362403, 8641, 540, 10, 69, "Output",ExpressionUUID->"75d3f6e0-679f-4a57-b3d4-6cc0c191c1f6"],
Cell[362946, 8653, 788, 20, 84, "Output",ExpressionUUID->"9ab6130f-7241-421e-ab51-f48a1990d1c2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[363783, 8679, 169, 3, 82, "Subsection",ExpressionUUID->"f2970d8e-1f8f-46a9-8d23-ffd365714e06"],
Cell[CellGroupData[{
Cell[363977, 8686, 1348, 36, 388, "Input",ExpressionUUID->"547468b6-81b7-40b4-9eaf-cce5ab44a040"],
Cell[365328, 8724, 358, 8, 76, "Output",ExpressionUUID->"b89745da-7869-43f5-815a-8e60b779d8a0"],
Cell[365689, 8734, 292, 5, 53, "Output",ExpressionUUID->"b7537045-739b-4611-8c17-ea8705af7165"],
Cell[365984, 8741, 332, 7, 76, "Output",ExpressionUUID->"4016dfa7-b62f-4e50-924f-a28714e54690"],
Cell[366319, 8750, 407, 10, 76, "Output",ExpressionUUID->"37e7d701-5282-426a-a3a3-a44b4fb5645c"],
Cell[366729, 8762, 296, 5, 53, "Output",ExpressionUUID->"cabcdef1-26ba-4f2a-9500-7ff248d01358"],
Cell[367028, 8769, 358, 8, 76, "Output",ExpressionUUID->"ef502889-f190-45d2-9df3-afa5c58f5468"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[367435, 8783, 167, 3, 82, "Subsection",ExpressionUUID->"d13c2b55-c6c1-4768-9dc2-e50b627ef496"],
Cell[CellGroupData[{
Cell[367627, 8790, 1218, 37, 290, "Input",ExpressionUUID->"33cbe82e-d900-4010-a995-9652f703115b"],
Cell[368848, 8829, 243, 4, 53, "Output",ExpressionUUID->"f32d6fb8-560f-41fd-81a9-eea5e2a960c3"],
Cell[369094, 8835, 242, 4, 53, "Output",ExpressionUUID->"402c1213-2ee5-4549-8bf8-f1a1cf7fcdf4"],
Cell[369339, 8841, 244, 4, 53, "Output",ExpressionUUID->"415d27d5-21c1-4593-9573-57bd48aedc26"]
}, Open  ]]
}, Open  ]],
Cell[369610, 8849, 167, 3, 82, "Subsection",ExpressionUUID->"3e7e1699-fa7a-4243-be79-6e392b7aa172"],
Cell[CellGroupData[{
Cell[369802, 8856, 171, 3, 56, "Subsection",ExpressionUUID->"3aaadb6e-050d-4fcc-95d3-57660f4c27fe"],
Cell[369976, 8861, 175, 2, 71, "Input",ExpressionUUID->"29b45682-9fe8-4c68-9cb2-b8db27cce854"],
Cell[CellGroupData[{
Cell[370176, 8867, 3659, 107, 699, "Input",ExpressionUUID->"4b70caa1-9648-4394-a424-da6e5ea46754"],
Cell[373838, 8976, 590, 12, 80, "Output",ExpressionUUID->"ebfb08ac-4129-4b54-8c90-7ad44a56ff40"],
Cell[374431, 8990, 733, 17, 53, "Output",ExpressionUUID->"ea175f15-98ed-4e05-a145-680c7fbb00c2"],
Cell[375167, 9009, 550, 10, 53, "Output",ExpressionUUID->"3195545a-b6f9-4745-8702-039baa6228b3"],
Cell[375720, 9021, 657, 14, 53, "Output",ExpressionUUID->"7ef61c04-c46b-4209-a33f-d7c85714173b"],
Cell[376380, 9037, 501, 8, 53, "Output",ExpressionUUID->"e1d3102d-8902-4747-8646-0c23ff2acbbd"],
Cell[376884, 9047, 724, 16, 56, "Output",ExpressionUUID->"d3bdfe17-184d-409b-bde3-439cc425f5c9"],
Cell[377611, 9065, 698, 15, 56, "Output",ExpressionUUID->"3067083a-2ac5-4c46-9b62-a6662d6d05a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378346, 9085, 402, 8, 113, "Input",ExpressionUUID->"28d3adcc-4d06-423b-a8d6-9136c07aa711"],
Cell[378751, 9095, 170109, 3058, 2692, "Output",ExpressionUUID->"8406b824-049c-4daf-bf78-a6761ec30c12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548897, 12158, 340, 9, 106, "Input",ExpressionUUID->"815d425f-1b79-4aa2-87f9-e718e868bc85"],
Cell[549240, 12169, 305, 8, 60, "Output",ExpressionUUID->"a499e68b-8ace-4094-bfa7-39da9283d9ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549594, 12183, 167, 3, 82, "Subsection",ExpressionUUID->"46e615d2-7fdf-4135-9781-6acbbf835908"],
Cell[CellGroupData[{
Cell[549786, 12190, 1759, 49, 247, "Input",ExpressionUUID->"0086c69e-da36-48ef-a062-79abbd3787ca"],
Cell[551548, 12241, 1138, 38, 153, "Output",ExpressionUUID->"d91def33-1c47-4fc3-bb9c-9354694ee23c"],
Cell[552689, 12281, 257, 7, 91, "Output",ExpressionUUID->"fb4a3794-2f97-49cf-adfb-48e3b960ef24"],
Cell[552949, 12290, 508, 15, 74, "Output",ExpressionUUID->"31296da2-b32b-4adb-8296-ec1e748767e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553506, 12311, 171, 3, 82, "Subsection",ExpressionUUID->"3b013231-21f8-4fc1-89c5-b42e47fd0e3e"],
Cell[CellGroupData[{
Cell[553702, 12318, 1698, 47, 349, "Input",ExpressionUUID->"7b733726-56bc-48d2-becd-684feee3f3f7"],
Cell[555403, 12367, 1371, 42, 129, "Output",ExpressionUUID->"9a798c7f-d2e3-44aa-b489-c0e42142f231"],
Cell[556777, 12411, 432, 7, 53, "Output",ExpressionUUID->"44b5fe6c-6bf3-4aa5-8c4b-bb327aff5ac4"],
Cell[557212, 12420, 445, 7, 53, "Output",ExpressionUUID->"de1eaa2d-7900-4155-88e6-4bf4f3b038d8"],
Cell[557660, 12429, 549, 12, 118, "Output",ExpressionUUID->"a11f557b-787b-48d9-a8f2-7b53efa560e0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[558258, 12447, 167, 3, 82, "Subsection",ExpressionUUID->"a702ebe5-db99-4e8f-9f31-c9a29d64156c"],
Cell[CellGroupData[{
Cell[558450, 12454, 926, 26, 179, "Input",ExpressionUUID->"86efebce-1607-4d17-ae08-7a836b4c97e3"],
Cell[559379, 12482, 953, 24, 101, "Output",ExpressionUUID->"08395e14-040f-43eb-94ef-66736448f592"],
Cell[560335, 12508, 493, 8, 53, "Output",ExpressionUUID->"fc791bc1-c355-4cb4-9082-33e64da98870"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[560877, 12522, 171, 3, 82, "Subsection",ExpressionUUID->"4bc1e96f-64a4-41be-87c3-cf3173a9af0e"],
Cell[CellGroupData[{
Cell[561073, 12529, 1678, 49, 276, "Input",ExpressionUUID->"180a1eb1-0374-45ba-a132-a8c42f34c8ff"],
Cell[562754, 12580, 566, 13, 76, "Output",ExpressionUUID->"09017964-170f-43c4-90e0-edda1eb39e43"],
Cell[563323, 12595, 393, 6, 53, "Output",ExpressionUUID->"2e4fd325-502c-44bc-8877-cb2bf0b49747"],
Cell[563719, 12603, 564, 13, 76, "Output",ExpressionUUID->"c443ce72-69f0-4716-871b-f5c7d15c2e42"],
Cell[564286, 12618, 391, 6, 53, "Output",ExpressionUUID->"5163aa1f-c80a-479a-a12f-5549f3777cdf"],
Cell[564680, 12626, 566, 13, 76, "Output",ExpressionUUID->"5a377a24-7a38-4e09-896d-7fda0adff5bf"],
Cell[565249, 12641, 790, 21, 102, "Output",ExpressionUUID->"dce4a342-7019-45c9-8edc-5ee1d8bc63c1"],
Cell[566042, 12664, 391, 6, 53, "Output",ExpressionUUID->"4d08dbcd-bdf4-470f-9ce1-b121a0de782f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566494, 12677, 167, 3, 102, "Section",ExpressionUUID->"d6cad418-e1f0-4928-8cf7-8e218025bdd6"],
Cell[CellGroupData[{
Cell[566686, 12684, 357, 7, 71, "Input",ExpressionUUID->"d898acc3-76cf-4610-9162-1e8bcf16fafc"],
Cell[567046, 12693, 262, 5, 72, "Output",ExpressionUUID->"1c078fe4-9eb8-4396-8d17-f6025122973d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567345, 12703, 588, 16, 71, "Input",ExpressionUUID->"5f048ce8-f648-4857-95c3-dbc2992b2549"],
Cell[567936, 12721, 323, 8, 72, "Output",ExpressionUUID->"37bfc338-bb2c-4e2b-864e-39239630ab34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568296, 12734, 1332, 43, 182, "Input",ExpressionUUID->"2a4e0f48-76c1-4846-96f3-ea5b5340dc98"],
Cell[569631, 12779, 860, 29, 125, "Output",ExpressionUUID->"9b2d0bd7-9b31-4ba7-9d3d-6fc3c0f4952b"],
Cell[570494, 12810, 196, 3, 53, "Output",ExpressionUUID->"91dbca02-1e5b-4c42-8609-23a649c6208b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570727, 12818, 168, 3, 69, "Subsubsection",ExpressionUUID->"50f6f76a-735b-4bff-9cb3-92cd167c90a4"],
Cell[570898, 12823, 225, 3, 71, "Input",ExpressionUUID->"e37cf6f3-1e7b-40e4-adb5-bab4506cb33d"],
Cell[CellGroupData[{
Cell[571148, 12830, 819, 24, 140, "Input",ExpressionUUID->"249e2a85-4d4d-427f-8d9d-2c29de5523eb"],
Cell[571970, 12856, 753, 23, 97, "Output",ExpressionUUID->"2455eacd-efa9-4aee-85f6-6986e0683204"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572760, 12884, 9628, 259, 1511, "Input",ExpressionUUID->"a428afe9-4961-4742-b451-1828f46b5f41"],
Cell[582391, 13145, 1328, 29, 97, "Output",ExpressionUUID->"c78ffd67-f9b4-4293-b01a-11e381cd5213"],
Cell[583722, 13176, 942, 16, 53, "Output",ExpressionUUID->"ec96223b-2f4c-4303-874d-aec7892585ee"],
Cell[584667, 13194, 1924, 51, 120, "Output",ExpressionUUID->"d036967f-65f6-423c-8569-56475afa692a"],
Cell[586594, 13247, 1663, 43, 73, "Output",ExpressionUUID->"b0422584-91f5-4f0a-9c5a-cd23409b0f3b"],
Cell[588260, 13292, 1159, 25, 73, "Output",ExpressionUUID->"d6edca85-5528-4a38-afd4-e010b2b80495"],
Cell[589422, 13319, 1186, 26, 72, "Output",ExpressionUUID->"f090eff5-f4ea-40eb-8468-746af3c657b0"],
Cell[590611, 13347, 1825, 45, 115, "Output",ExpressionUUID->"2f83afe9-1718-416e-b564-90dd7e358a4c"],
Cell[592439, 13394, 1359, 28, 94, "Output",ExpressionUUID->"1258fb39-66b9-4379-ba56-b2dea6c5b791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593835, 13427, 407, 9, 106, "Input",ExpressionUUID->"1e76bc46-b935-48f5-9a85-ee6282d95875"],
Cell[594245, 13438, 276, 7, 74, "Output",ExpressionUUID->"658a18e0-c861-4642-843f-0b3425452c65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594558, 13450, 687, 22, 71, "Input",ExpressionUUID->"4e8c5a41-554c-4317-b4ff-f94804a11f21"],
Cell[595248, 13474, 193, 4, 53, "Output",ExpressionUUID->"605e2d1f-1717-4bf9-be04-449435506b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595478, 13483, 323, 8, 71, "Input",ExpressionUUID->"676a23cb-4d91-41fe-bc5c-06ed32765fcd"],
Cell[595804, 13493, 330, 9, 95, "Output",ExpressionUUID->"84b79b2f-5cbc-4612-957c-58176d3a65de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596171, 13507, 278, 6, 75, "Input",ExpressionUUID->"3351d0af-7346-41f1-a008-ccdb9aad8775"],
Cell[596452, 13515, 258, 7, 74, "Output",ExpressionUUID->"275d1b33-919c-460b-a6d0-a418d2afeec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596747, 13527, 373, 9, 71, "Input",ExpressionUUID->"f3d44e8a-ffe9-4e9c-983e-aa98c79d67b2"],
Cell[597123, 13538, 372, 9, 34, "Message",ExpressionUUID->"8116c0c1-20a3-429a-b2ad-083c808dfc2e"],
Cell[597498, 13549, 315, 9, 84, "Output",ExpressionUUID->"03c3f84f-eb2a-4a6e-85f8-1d619a4bedcd"]
}, Open  ]],
Cell[597828, 13561, 1389, 38, 217, "Input",ExpressionUUID->"4802c2c5-e36a-48ca-9aae-7a0410d8fe13"],
Cell[CellGroupData[{
Cell[599242, 13603, 451, 9, 113, "Input",ExpressionUUID->"44bbfd44-0262-4762-baaf-ddde6949f210"],
Cell[599696, 13614, 400707, 6844, 2750, "Output",ExpressionUUID->"f66aab57-51bd-42e8-b1de-d5c9530ad89c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000452, 20464, 160, 3, 82, "Subsection",ExpressionUUID->"ed15fb74-4311-43e9-a28d-78902eb6d612"],
Cell[CellGroupData[{
Cell[1000637, 20471, 2274, 61, 426, "Input",ExpressionUUID->"04e7d629-e6c6-4f0e-9fae-e27f1851359b"],
Cell[1002914, 20534, 454, 11, 72, "Output",ExpressionUUID->"be273462-acf9-4563-9d1e-62491828d361"],
Cell[1003371, 20547, 357, 8, 72, "Output",ExpressionUUID->"8037ad30-e08b-4f9b-aefe-aeebcb7a561c"],
Cell[1003731, 20557, 554, 15, 72, "Output",ExpressionUUID->"03ec27b6-bf47-4a15-8c74-e2e35e25604c"],
Cell[1004288, 20574, 348, 8, 53, "Output",ExpressionUUID->"cee8cefc-ba3d-4420-a547-e4593c52791e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004709, 20590, 157, 3, 105, "Chapter",ExpressionUUID->"9df1bf4f-dcad-4544-a992-80694c49c0c3"],
Cell[CellGroupData[{
Cell[1004891, 20597, 161, 3, 102, "Section",ExpressionUUID->"daaa1226-44b1-422b-b42a-f27ffae51061"],
Cell[CellGroupData[{
Cell[1005077, 20604, 168, 3, 82, "Subsection",ExpressionUUID->"f1ba93e7-6c4e-475f-9867-5cf068570394"],
Cell[CellGroupData[{
Cell[1005270, 20611, 2053, 52, 256, "Input",ExpressionUUID->"6497d493-9c1c-4d74-a754-63447dcc553b"],
Cell[1007326, 20665, 315, 6, 72, "Output",ExpressionUUID->"c1f65553-f4ad-41c1-b9ca-cf1e6d12a57c"],
Cell[1007644, 20673, 315, 6, 72, "Output",ExpressionUUID->"d378f5a6-ba38-4e0f-bbc7-298a6acbbb3f"],
Cell[1007962, 20681, 315, 6, 72, "Output",ExpressionUUID->"0dce93e7-10b1-4eb3-973a-0737d3b55afe"]
}, Open  ]]
}, Open  ]],
Cell[1008304, 20691, 168, 3, 82, "Subsection",ExpressionUUID->"d6d2981b-00a9-428e-a336-de1b97276917"],
Cell[CellGroupData[{
Cell[1008497, 20698, 166, 3, 56, "Subsection",ExpressionUUID->"0b7c17f9-433f-455b-b853-38ead96b0bf6"],
Cell[CellGroupData[{
Cell[1008688, 20705, 389, 10, 110, "Input",ExpressionUUID->"c159198d-425a-49c2-901a-6269058f310c"],
Cell[1009080, 20717, 171, 3, 72, "Output",ExpressionUUID->"bd6da712-f2ec-4e88-b6c9-b027312a2ee6"],
Cell[1009254, 20722, 150, 2, 53, "Output",ExpressionUUID->"ddc8229d-3ce5-4b46-99cd-a986f03cb3e5"]
}, Open  ]]
}, Open  ]],
Cell[1009431, 20728, 169, 3, 82, "Subsection",ExpressionUUID->"61755a81-1b27-4828-8916-4563051adb96"],
Cell[CellGroupData[{
Cell[1009625, 20735, 167, 3, 56, "Subsection",ExpressionUUID->"62aadc54-6cef-4b20-9379-363cd2aa9831"],
Cell[CellGroupData[{
Cell[1009817, 20742, 2269, 67, 221, "Input",ExpressionUUID->"bad07bcd-5db6-464e-a8b6-a6bfba2d6ff5"],
Cell[1012089, 20811, 218, 4, 72, "Output",ExpressionUUID->"7ca97b69-3518-45e5-8afe-3457cc066c4c"],
Cell[1012310, 20817, 220, 4, 72, "Output",ExpressionUUID->"c1bbe36c-07a4-4015-b591-960e835aa467"],
Cell[1012533, 20823, 220, 4, 72, "Output",ExpressionUUID->"904a4cc5-3b05-482c-b87c-b7511a4d2455"],
Cell[1012756, 20829, 218, 4, 72, "Output",ExpressionUUID->"5036ca95-1116-4deb-bb20-fa2c65485d16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013011, 20838, 504, 13, 75, "Input",ExpressionUUID->"4a6af556-a3fb-47b6-9a83-f31d1f7232e0"],
Cell[1013518, 20853, 243, 5, 80, "Output",ExpressionUUID->"380b25d8-c5fe-4393-9748-1f508fdb9085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013798, 20863, 409, 7, 75, "Input",ExpressionUUID->"2d9b0579-81b7-4f0f-bc5f-24e214aff331"],
Cell[1014210, 20872, 19094, 387, 628, "Output",ExpressionUUID->"9f672251-006e-4e45-8e95-30b07a48d5d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033353, 21265, 169, 3, 82, "Subsection",ExpressionUUID->"ff0a2b5f-66fd-463f-a630-2894e7569770"],
Cell[CellGroupData[{
Cell[1033547, 21272, 4706, 141, 824, "Input",ExpressionUUID->"1c08672f-bda8-4b07-b099-70ba85c37e82"],
Cell[1038256, 21415, 960, 15, 53, "Output",ExpressionUUID->"7dde60f2-d017-4439-99ab-976e1d996d15"],
Cell[1039219, 21432, 1005, 17, 94, "Output",ExpressionUUID->"b2585a97-46c3-4109-be23-93350d5087d2"],
Cell[1040227, 21451, 904, 13, 53, "Output",ExpressionUUID->"735a1d90-b7f5-43bb-978d-1442085019fa"],
Cell[1041134, 21466, 905, 13, 53, "Output",ExpressionUUID->"6aad325d-17d8-4de6-8dfe-2d2deb74dfbc"],
Cell[1042042, 21481, 905, 13, 53, "Output",ExpressionUUID->"d151cb67-12d0-41df-91c1-4ac0d11fe87a"],
Cell[1042950, 21496, 928, 14, 53, "Output",ExpressionUUID->"52469ed5-bda9-48e8-98ee-b4d5ddc11b21"],
Cell[1043881, 21512, 905, 13, 53, "Output",ExpressionUUID->"bd9a4ed2-35c5-4e1c-b41d-4b76bb6b8919"],
Cell[1044789, 21527, 905, 13, 53, "Output",ExpressionUUID->"39ec0905-5dbb-4c50-b42b-20620dfc2ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1045731, 21545, 1611, 42, 182, "Input",ExpressionUUID->"ff8f14a8-f575-4dc3-8594-9e52d747c3d9"],
Cell[1047345, 21589, 562, 8, 53, "Output",ExpressionUUID->"62fcfed4-e4f0-4fd4-bcb9-6ac73ba334db"],
Cell[1047910, 21599, 648, 12, 77, "Output",ExpressionUUID->"423de1e9-04f7-482c-b397-da2ee010673a"],
Cell[1048561, 21613, 584, 9, 53, "Output",ExpressionUUID->"050584e2-9785-47c6-a3ac-d0717c49658e"]
}, Open  ]],
Cell[1049160, 21625, 151, 3, 71, "Input",ExpressionUUID->"1c26b7a1-d7a1-4387-8598-dbff62e14150"],
Cell[CellGroupData[{
Cell[1049336, 21632, 309, 7, 71, "Input",ExpressionUUID->"5175d165-c7b3-444e-a5e3-27e5f3fce674"],
Cell[1049648, 21641, 313, 8, 53, "Output",ExpressionUUID->"a3174982-82a8-4dab-b531-dd8fe759497c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049998, 21654, 321, 8, 71, "Input",ExpressionUUID->"9810e07e-25cb-4c43-babd-7abbc04fa101"],
Cell[1050322, 21664, 301, 7, 53, "Output",ExpressionUUID->"63713abb-286a-4752-bc54-d86a94ed1a4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050660, 21676, 272, 6, 71, "Input",ExpressionUUID->"d08e8fda-503b-4708-8ae7-27065588e51c"],
Cell[1050935, 21684, 270, 7, 53, "Output",ExpressionUUID->"7b7220d0-bda0-41f9-b0be-aa72c0c4ff52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1051242, 21696, 823, 23, 113, "Input",ExpressionUUID->"5afc7de2-3482-4a52-971c-a734e4cd030b"],
Cell[1052068, 21721, 1242, 22, 69, "Message",ExpressionUUID->"24d34a11-1c80-4389-a5cf-42240ee776c3"],
Cell[1053313, 21745, 920, 28, 56, "Output",ExpressionUUID->"26234c7c-ac06-412e-83b7-dcc024ff756b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054270, 21778, 337, 8, 71, "Input",ExpressionUUID->"791457d2-842e-4220-be3e-236abfb1bd6f"],
Cell[1054610, 21788, 335, 9, 53, "Output",ExpressionUUID->"e701fd70-91c3-4b44-8db3-0882d4bc4c4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054982, 21802, 517, 14, 75, "Input",ExpressionUUID->"c58a34ca-fe8b-4b05-bcec-3fc00f343d5d"],
Cell[1055502, 21818, 447, 13, 53, "Output",ExpressionUUID->"2bef3e5f-cbf0-477b-8038-4861f7c262d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055986, 21836, 1113, 35, 144, "Input",ExpressionUUID->"81e76f0a-7616-4af7-b5fb-d309e7669db6"],
Cell[1057102, 21873, 175, 2, 53, "Output",ExpressionUUID->"8ca3843e-b164-4a04-a7e4-94678027d3fa"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057338, 21882, 168, 3, 102, "Section",ExpressionUUID->"5567318e-a371-4618-b1ac-933e1a868c97"],
Cell[CellGroupData[{
Cell[1057531, 21889, 167, 3, 82, "Subsection",ExpressionUUID->"c0f8aa8a-9afd-4068-b3c2-825046925cd4"],
Cell[CellGroupData[{
Cell[1057723, 21896, 320, 5, 71, "Input",ExpressionUUID->"51bfa0df-0b20-4acb-95fa-909750af4240"],
Cell[1058046, 21903, 366, 5, 53, "Output",ExpressionUUID->"16ce12ea-57c8-4aff-96e1-218a16b9ace4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1058485, 21916, 155, 3, 105, "Chapter",ExpressionUUID->"f61e1f02-e053-4260-93e5-08405b2f50a4"],
Cell[CellGroupData[{
Cell[1058665, 21923, 161, 3, 102, "Section",ExpressionUUID->"a7e1db62-06aa-4d13-8861-15a38fc9e5e4"],
Cell[1058829, 21928, 165, 3, 82, "Subsection",ExpressionUUID->"080e1529-a1ce-43a8-ad22-2c756606aaf0"],
Cell[1058997, 21933, 167, 3, 56, "Subsection",ExpressionUUID->"2be147e5-c2be-4332-b063-b03c3157c524"],
Cell[CellGroupData[{
Cell[1059189, 21940, 166, 3, 56, "Subsection",ExpressionUUID->"ff578a02-f9d0-4f2a-b5e3-67d43b63fe57"],
Cell[CellGroupData[{
Cell[1059380, 21947, 857, 20, 75, "Input",ExpressionUUID->"b1875b9b-a1d6-4218-b287-9a907da7c45c"],
Cell[1060240, 21969, 315, 4, 53, "Output",ExpressionUUID->"e8bb5df8-88ec-44b5-856f-6b93548bdfbb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1060604, 21979, 166, 3, 82, "Subsection",ExpressionUUID->"791253f0-fba3-438c-85d7-c389bf2e3990"],
Cell[1060773, 21984, 1249, 32, 212, "Input",ExpressionUUID->"2def706b-ea02-45e8-97e0-7dcf2dc06e3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062059, 22021, 217, 4, 82, "Subsection",ExpressionUUID->"a7fc3424-0e38-4ed1-b41e-5c5a2443c2a9"],
Cell[CellGroupData[{
Cell[1062301, 22029, 1102, 29, 246, "Input",ExpressionUUID->"6aca2508-65ea-4bf7-9b5c-db56865e93f5"],
Cell[1063406, 22060, 302, 7, 72, "Output",ExpressionUUID->"8c01a28e-0817-4fc6-a1d0-7934c0fa8ad3"],
Cell[1063711, 22069, 300, 6, 53, "Output",ExpressionUUID->"415270d2-696f-4296-ab11-34ecd1b9fba2"],
Cell[1064014, 22077, 296, 5, 53, "Output",ExpressionUUID->"6679cfdd-e95b-4e90-828f-12a2d85d08f2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064359, 22088, 241, 4, 82, "Subsection",ExpressionUUID->"7b38dc35-6576-45e7-a2ee-a16dde22babf"],
Cell[CellGroupData[{
Cell[1064625, 22096, 1355, 34, 246, "Input",ExpressionUUID->"f0d8cae5-db2a-4205-96f4-3ec7211ee146"],
Cell[1065983, 22132, 462, 10, 80, "Output",ExpressionUUID->"804d7a29-e020-4f83-9062-a910bac2082d"],
Cell[1066448, 22144, 419, 7, 53, "Output",ExpressionUUID->"4b8f189c-9f4f-434f-9b6f-a71d6304f13d"],
Cell[1066870, 22153, 422, 7, 53, "Output",ExpressionUUID->"db25a3ef-d093-44dc-8d3a-bb34aa49d946"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067341, 22166, 167, 3, 82, "Subsection",ExpressionUUID->"c651055f-0302-450b-8349-0b35baedbf74"],
Cell[CellGroupData[{
Cell[1067533, 22173, 1932, 53, 524, "Input",ExpressionUUID->"25a71124-644a-4a18-a70e-30121757f559"],
Cell[1069468, 22228, 343, 5, 53, "Output",ExpressionUUID->"e6698737-3c9a-4df0-bfb4-77f866ac3913"],
Cell[1069814, 22235, 348, 5, 53, "Output",ExpressionUUID->"885eb531-bd11-4384-9081-4318f7f45a85"],
Cell[1070165, 22242, 358, 6, 53, "Output",ExpressionUUID->"c2a6e21e-cdec-4b7b-9674-aada33362728"]
}, Open  ]],
Cell[1070538, 22251, 163, 3, 71, "Input",ExpressionUUID->"f9679b07-0d23-4721-850b-9047c13039a8"],
Cell[CellGroupData[{
Cell[1070726, 22258, 501, 10, 113, "Input",ExpressionUUID->"5bfd5ed5-3b07-4080-b468-a46a7bc2e121"],
Cell[1071230, 22270, 44312, 936, 2042, "Output",ExpressionUUID->"d9651e3c-9f97-4807-9fb6-9dcf0e395952"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115579, 23211, 1717, 53, 101, "Input",ExpressionUUID->"50dde7ca-7f8a-46fe-82d2-a6a6dadbe8a7"],
Cell[1117299, 23266, 318, 8, 72, "Output",ExpressionUUID->"64eccde1-fe3e-4b46-a1da-64475591a97f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117654, 23279, 413, 9, 75, "Input",ExpressionUUID->"d7b73a02-537c-4872-ac57-d72a11ac22ea"],
Cell[1118070, 23290, 219, 3, 53, "Output",ExpressionUUID->"415e456b-5870-4880-a683-177ae99c92e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118326, 23298, 578, 17, 71, "Input",ExpressionUUID->"5c454f7c-c001-4163-b302-425fc7b82e1c"],
Cell[1118907, 23317, 417, 11, 129, "Output",ExpressionUUID->"a460ae54-93e0-4a4d-8e4a-a49bedc5fa0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1119361, 23333, 199, 5, 71, "Input",ExpressionUUID->"19369ef3-a8db-4a15-aa60-c575f8ab1366"],
Cell[1119563, 23340, 171, 3, 72, "Output",ExpressionUUID->"8edea819-e456-472a-a6f3-50e64a86eddc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

